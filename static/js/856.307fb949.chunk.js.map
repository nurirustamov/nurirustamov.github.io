{"version":3,"file":"static/js/856.307fb949.chunk.js","mappings":"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","sources":["pages/MyAssignmentsPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { PlayIcon, DocumentTextIcon, CollectionIcon, ClockIcon, CheckCircleIcon, EyeIcon, StarIcon, UserGroupIcon } from '../assets/icons';\n\nconst formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    if (isNaN(date)) return 'Invalid Date';\n    return date.toLocaleString('az-AZ', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\n};\n\n// --- Quest Component ---\nconst QuestCard = ({ quests }) => {\n    if (!quests || quests.length === 0) {\n        return null; // Don't render the card if there are no quests\n    }\n\n    const dailyQuests = quests.filter(q => q.quests.type === 'DAILY');\n    const weeklyQuests = quests.filter(q => q.quests.type === 'WEEKLY');\n\n    const QuestList = ({ title, questsOfType }) => (\n        <div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">{title}</h3>\n            {questsOfType.length > 0 ? (\n                 <div className=\"space-y-3\">\n                    {questsOfType.map(quest => {\n                        const progressPercentage = quest.quests.goal_value > 0 ? (quest.progress / quest.quests.goal_value) * 100 : 0;\n                        const isCompleted = quest.status === 'completed';\n                        return (\n                            <div key={quest.id} className={`p-3 rounded-lg ${isCompleted ? 'bg-green-100 border-l-4 border-green-400' : 'bg-gray-50'}`}>\n                                <div className=\"flex justify-between items-center\">\n                                    <div>\n                                        <h4 className=\"font-bold text-gray-800\">{quest.quests.title}</h4>\n                                        <p className=\"text-sm text-gray-600\">{quest.quests.description}</p>\n                                    </div>\n                                    <div className=\"text-right flex-shrink-0 ml-4\">\n                                        <p className=\"font-bold text-yellow-500 flex items-center gap-1\">\n                                            <StarIcon className=\"w-4 h-4\" /> +{quest.quests.reward_xp} XP\n                                        </p>\n                                        {isCompleted && <div className=\"flex items-center justify-end gap-1 text-xs text-green-600 font-semibold mt-1\"><CheckCircleIcon className=\"w-4 h-4\"/>TamamlandÄ±!</div>}\n                                    </div>\n                                </div>\n                                {!isCompleted && (\n                                    <div className=\"mt-2\">\n                                        <div className=\"flex justify-between mb-1\">\n                                            <span className=\"text-xs font-medium text-gray-700\">Proqres</span>\n                                            <span className=\"text-xs font-medium text-orange-700\">{quest.progress} / {quest.quests.goal_value}</span>\n                                        </div>\n                                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                                            <div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: `${progressPercentage}%` }}></div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            ) : (\n                 <p className=\"text-sm text-gray-500\">Bu dÃ¶vr Ã¼Ã§Ã¼n tapÅÄ±rÄ±q yoxdur.</p>\n            )}\n        </div>\n    );\n\n    return (\n        <Card>\n            <h2 className=\"text-xl font-bold text-gray-800 mb-4\">MÉqsÉdlÉr vÉ TapÅÄ±rÄ±qlar</h2>\n            <div className=\"space-y-6\">\n                <QuestList title=\"GÃ¼nlÃ¼k MÉqsÉdlÉr\" questsOfType={dailyQuests} />\n                <QuestList title=\"HÉftÉlik MÉqsÉdlÉr\" questsOfType={weeklyQuests} />\n            </div>\n        </Card>\n    );\n};\n\n// --- My Groups Component ---\nconst MyGroupsCard = ({ groups, className = '' }) => {\n    if (!groups || groups.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className={className}>\n            <Card>\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\n                    <UserGroupIcon /> MÉnim QruplarÄ±m\n                </h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {groups.map(group => (\n                        <Link to={`/groups/${group.id}`} key={group.id} className=\"block p-4 rounded-lg bg-gray-50 hover:bg-orange-50 transition-colors border flex flex-col justify-between\">\n                            <div>\n                                <h3 className=\"font-bold text-gray-800\">{group.name}</h3>\n                                <p className=\"text-sm text-gray-500 mt-1\">{group.members?.length || 0} Ã¼zv</p>\n                            </div>\n                            <div className=\"flex items-center -space-x-2 mt-3\">\n                                {(group.members || []).slice(0, 5).map(member => (\n                                    <div \n                                        key={member.user_id} \n                                        className=\"w-8 h-8 rounded-full bg-orange-200 flex items-center justify-center text-orange-700 font-bold text-xs border-2 border-white\"\n                                        title={`${member.profiles?.first_name || ''} ${member.profiles?.last_name || ''}`}\n                                    >\n                                        {member.profiles?.first_name?.[0] || 'U'}\n                                    </div>\n                                ))}\n                                {(group.members?.length || 0) > 5 && (\n                                    <div className=\"w-8 h-8 rounded-full bg-gray-300 flex items-center justify-center text-gray-700 font-bold text-xs border-2 border-white\">\n                                        +{(group.members.length) - 5}\n                                    </div>\n                                )}\n                            </div>\n                        </Link>\n                    ))}\n                </div>\n            </Card>\n        </div>\n    );\n};\n\n\nconst MyAssignmentsPage = ({ assignments, quizzes, courses, quizResults, completedCourses, onStartQuiz, userQuests, studentGroups, profile }) => {\n\n    const myGroups = useMemo(() => {\n        if (!profile || !studentGroups) return [];\n\n        if (profile.role === 'admin') {\n            // ÐÐ´Ð¼Ð¸Ð½Ð¸ÑÑÑÐ°ÑÐ¾Ñ Ð²Ð¸Ð´Ð¸Ñ Ð³ÑÑÐ¿Ð¿Ñ, ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¾Ð½ ÑÐ¾Ð·Ð´Ð°Ð» ÐÐÐ Ð² ÐºÐ¾ÑÐ¾ÑÑÑ Ð¾Ð½ ÑÐ¾ÑÑÐ¾Ð¸Ñ.\n            // ÐÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÐ¼ Set Ð´Ð»Ñ Ð¸Ð·Ð±ÐµÐ¶Ð°Ð½Ð¸Ñ Ð´ÑÐ±Ð»Ð¸ÐºÐ°ÑÐ¾Ð².\n            const groupIds = new Set();\n            const adminGroups = [];\n\n            (studentGroups || []).forEach(g => {\n                const isMember = g.members.some(m => m.user_id === profile.id);\n                const isCreator = g.created_by === profile.id;\n                if ((isMember || isCreator) && !groupIds.has(g.id)) {\n                    adminGroups.push(g);\n                    groupIds.add(g.id);\n                }\n            });\n            return adminGroups;\n        }\n        // Ð¡ÑÑÐ´ÐµÐ½Ñ Ð²Ð¸Ð´Ð¸Ñ ÑÐ¾Ð»ÑÐºÐ¾ Ð³ÑÑÐ¿Ð¿Ñ, Ð² ÐºÐ¾ÑÐ¾ÑÑÑ Ð¾Ð½ ÑÐ¾ÑÑÐ¾Ð¸Ñ.\n        return (studentGroups || []).filter(g => g.members.some(m => m.user_id === profile.id));\n    }, [studentGroups, profile]);\n\n    const enrichedAssignments = useMemo(() => {\n        const completedQuizIds = new Set((quizResults || []).map(r => r.quizId));\n        const completedCourseIds = new Set((completedCourses || []).map(c => c.course_id));\n\n        return assignments.map(assignment => {\n            let item = null;\n            let isCompleted = false;\n            if (assignment.item_type === 'quiz') {\n                item = quizzes.find(q => q.id === assignment.item_id);\n                if (item) {\n                    isCompleted = completedQuizIds.has(item.id);\n                }\n            } else if (assignment.item_type === 'course') {\n                item = courses.find(c => c.id === assignment.item_id);\n                if (item) {\n                    isCompleted = completedCourseIds.has(item.id);\n                }\n            }\n            return { ...assignment, item, isCompleted };\n        }).filter(a => a.item); // Filter out assignments where the item might have been deleted\n    }, [assignments, quizzes, courses, quizResults, completedCourses]);\n\n    const now = new Date();\n    const activeAssignments = enrichedAssignments.filter(a => !a.isCompleted);\n    const completedAssignments = enrichedAssignments.filter(a => a.isCompleted);\n\n    const AssignmentCard = ({ assignment }) => {\n        const { item, item_type, due_date, isCompleted } = assignment;\n        const isOverdue = !isCompleted && due_date && new Date(due_date) < now;\n\n        return (\n            <Card className={`border-l-4 ${isCompleted ? 'border-green-500 bg-green-50/50 opacity-70' : (isOverdue ? 'border-red-500' : 'border-gray-200')}`}>\n                <div className=\"flex flex-col sm:flex-row justify-between items-start gap-4\">\n                    <div className=\"flex-grow\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                            {item_type === 'quiz' ? <DocumentTextIcon className=\"text-purple-500\" /> : <CollectionIcon className=\"text-blue-500\" />}\n                            <span className=\"text-xs font-semibold uppercase tracking-wider\">{item_type === 'quiz' ? 'Test' : 'Kurs'}</span>\n                        </div>\n                        <h3 className=\"text-lg font-bold text-gray-800\">{item.title}</h3>\n                    </div>\n                    <div className=\"flex-shrink-0 w-full sm:w-auto\">\n                        {isCompleted ? (\n                            <p className=\"text-sm font-semibold flex items-center gap-2 text-green-600\">\n                                <CheckCircleIcon />\n                                <span>TamamlanÄ±b</span>\n                            </p>\n                        ) : (\n                            <p className={`text-sm font-semibold flex items-center gap-2 ${isOverdue ? 'text-red-600' : 'text-gray-600'}`}>\n                                <ClockIcon />\n                                <span>Son tarix: {formatDate(due_date) || 'Yoxdur'}</span>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <div className=\"mt-4 flex justify-end\">\n                    {isCompleted ? (\n                        <Link to={item_type === 'quiz' ? `/review/${quizResults.find(r => r.quizId === item.id)?.id}` : `/courses/${item.id}`}>\n                            <Button variant=\"secondary\" size=\"sm\"><EyeIcon /> NÉticÉyÉ bax</Button>\n                        </Link>\n                    ) : (\n                        item_type === 'quiz' ? (\n                            <Button onClick={() => onStartQuiz(item.id)}><PlayIcon /> BaÅla</Button>\n                        ) : (\n                            <Link to={`/courses/${item.id}`}><Button><PlayIcon /> BaÅla</Button></Link>\n                        )\n                    )}\n                </div>\n            </Card>\n        );\n    };\n\n    return (\n        <div className=\"animate-fade-in space-y-8\">\n            <div>\n                <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-4\">TapÅÄ±rÄ±qlarÄ±m</h1>\n                <MyGroupsCard groups={myGroups} className=\"mb-8\" />\n                <QuestCard quests={userQuests} />\n            </div>\n            \n            <div>\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">MÃ¼Éllim TÉrÉfindÉn VerilÉn TapÅÄ±rÄ±qlar</h2>\n                {activeAssignments.length > 0 ? (\n                    <div className=\"space-y-4\">\n                        {activeAssignments.map(a => <AssignmentCard key={a.id} assignment={a} />)}\n                    </div>\n                ) : (\n                    <Card className=\"text-center py-12\">\n                        <p className=\"text-gray-500\">Aktiv tapÅÄ±rÄ±ÄÄ±nÄ±z yoxdur. AfÉrin!</p>\n                    </Card>\n                )}\n            </div>\n\n            {completedAssignments.length > 0 && (\n                <div>\n                    <h2 className=\"text-xl font-bold text-gray-800 mb-4\">TamamlanmÄ±Å TapÅÄ±rÄ±qlar</h2>\n                    <div className=\"space-y-4\">\n                        {completedAssignments.map(a => <AssignmentCard key={a.id} assignment={a} />)}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MyAssignmentsPage;\n","import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;"],"names":["formatDate","dateString","date","Date","isNaN","toLocaleString","day","month","year","hour","minute","QuestCard","_ref","quests","length","dailyQuests","filter","q","type","weeklyQuests","QuestList","_ref2","title","questsOfType","_jsxs","children","_jsx","className","map","quest","progressPercentage","goal_value","progress","isCompleted","status","concat","description","StarIcon","reward_xp","CheckCircleIcon","style","width","id","Card","MyGroupsCard","_ref3","groups","UserGroupIcon","group","_group$members","_group$members2","Link","to","name","members","slice","member","_member$profiles","_member$profiles2","_member$profiles3","_member$profiles3$fir","profiles","first_name","last_name","user_id","_ref4","assignments","quizzes","courses","quizResults","completedCourses","onStartQuiz","userQuests","studentGroups","profile","myGroups","useMemo","role","groupIds","Set","adminGroups","forEach","g","isMember","some","m","isCreator","created_by","has","push","add","enrichedAssignments","completedQuizIds","r","quizId","completedCourseIds","c","course_id","assignment","item","item_type","find","item_id","_objectSpread","a","now","activeAssignments","completedAssignments","AssignmentCard","_ref5","_quizResults$find","due_date","isOverdue","DocumentTextIcon","CollectionIcon","ClockIcon","Button","variant","size","EyeIcon","onClick","PlayIcon"],"sourceRoot":""}