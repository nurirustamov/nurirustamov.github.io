{"version":3,"file":"static/js/4.978f701c.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/solid/esm/FireIcon.js","../node_modules/@heroicons/react/24/solid/esm/StarIcon.js","../node_modules/@heroicons/react/24/solid/esm/AcademicCapIcon.js","components/ui/AchievementIcon.js","pages/ProfilePage.js","components/ui/Card.js"],"sourcesContent":["import * as React from \"react\";\nfunction FireIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.963 2.286a.75.75 0 0 0-1.071-.136 9.742 9.742 0 0 0-3.539 6.176 7.547 7.547 0 0 1-1.705-1.715.75.75 0 0 0-1.152-.082A9 9 0 1 0 15.68 4.534a7.46 7.46 0 0 1-2.717-2.248ZM15.75 14.25a3.75 3.75 0 1 1-7.313-1.172c.628.465 1.35.81 2.133 1a5.99 5.99 0 0 1 1.925-3.546 3.75 3.75 0 0 1 3.255 3.718Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FireIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction StarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(StarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction AcademicCapIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.7 2.805a.75.75 0 0 1 .6 0A60.65 60.65 0 0 1 22.83 8.72a.75.75 0 0 1-.231 1.337 49.948 49.948 0 0 0-9.902 3.912l-.003.002c-.114.06-.227.119-.34.18a.75.75 0 0 1-.707 0A50.88 50.88 0 0 0 7.5 12.173v-.224c0-.131.067-.248.172-.311a54.615 54.615 0 0 1 4.653-2.52.75.75 0 0 0-.65-1.352 56.123 56.123 0 0 0-4.78 2.589 1.858 1.858 0 0 0-.859 1.228 49.803 49.803 0 0 0-4.634-1.527.75.75 0 0 1-.231-1.337A60.653 60.653 0 0 1 11.7 2.805Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.06 15.473a48.45 48.45 0 0 1 7.666-3.282c.134 1.414.22 2.843.255 4.284a.75.75 0 0 1-.46.711 47.87 47.87 0 0 0-8.105 4.342.75.75 0 0 1-.832 0 47.87 47.87 0 0 0-8.104-4.342.75.75 0 0 1-.461-.71c.035-1.442.121-2.87.255-4.286.921.304 1.83.634 2.726.99v1.27a1.5 1.5 0 0 0-.14 2.508c-.09.38-.222.753-.397 1.11.452.213.901.434 1.346.66a6.727 6.727 0 0 0 .551-1.607 1.5 1.5 0 0 0 .14-2.67v-.645a48.549 48.549 0 0 1 3.44 1.667 2.25 2.25 0 0 0 2.12 0Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.462 19.462c.42-.419.753-.89 1-1.395.453.214.902.435 1.347.662a6.742 6.742 0 0 1-1.286 1.794.75.75 0 0 1-1.06-1.06Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(AcademicCapIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { StarIcon, FireIcon, AcademicCapIcon } from '@heroicons/react/24/solid';\r\n\r\nconst iconMap = {\r\n    sniper: FireIcon,\r\n    marathoner: StarIcon,\r\n    newbie: AcademicCapIcon,\r\n    default: StarIcon,\r\n};\r\n\r\nconst colorMap = {\r\n    gold: 'text-yellow-500',\r\n    silver: 'text-gray-400',\r\n    bronze: 'text-orange-700',\r\n    default: 'text-gray-400',\r\n};\r\n\r\nconst AchievementIcon = ({ achievement }) => {\r\n    if (!achievement) return null;\r\n\r\n    const IconComponent = iconMap[achievement.icon_name] || iconMap.default;\r\n    const iconColor = colorMap[achievement.badge_color] || colorMap.default;\r\n\r\n    return (\r\n        <div \r\n            className=\"flex flex-col items-center justify-start text-center p-3 rounded-lg bg-gray-50 border border-gray-200 w-32 h-30\"\r\n            title={`${achievement.name}: ${achievement.description}`}\r\n        >\r\n            <IconComponent className={`h-10 w-10 ${iconColor} mb-2 flex-shrink-0`} />\r\n            <p className=\"text-xs font-bold text-gray-800 break-words\">{achievement.name}</p>\r\n            <p className=\"mt-1 text-gray-500\" style={{ fontSize: '0.7rem', lineHeight: '0.9rem' }}>{achievement.description}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AchievementIcon;","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { ChartBarIcon, TrophyIcon, StarIcon, FireIcon } from '../assets/icons';\nimport AchievementIcon from '../components/ui/AchievementIcon';\n\n// Новый компонент для отображения прогресса уровня\nconst LevelProgressBar = ({ experience }) => {\n    const currentLevel = Math.floor(experience / 100) + 1;\n    const nextLevelXp = currentLevel * 100;\n    const currentLevelXp = (currentLevel - 1) * 100;\n    const xpIntoLevel = experience - currentLevelXp;\n    const xpForNextLevel = nextLevelXp - currentLevelXp;\n    const progressPercentage = (xpIntoLevel / xpForNextLevel) * 100;\n\n    return (\n        <div>\n            <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"font-bold text-orange-600\">Səviyyə {currentLevel}</span>\n                <span className=\"text-sm text-gray-500\">{experience} / {nextLevelXp} XP</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                <div className=\"bg-gradient-to-r from-orange-400 to-red-500 h-2.5 rounded-full\" style={{ width: `${progressPercentage}%` }}></div>\n            </div>\n        </div>\n    );\n};\n\nconst ProfilePage = ({ session, profile, showToast, onProfileUpdate, userAchievements, allAchievements }) => {\n    const [loading, setLoading] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    useEffect(() => {\n        if (profile) {\n            setFirstName(profile.first_name || '');\n            setLastName(profile.last_name || '');\n        }\n    }, [profile]);\n\n    const { earned, unearned } = useMemo(() => {\n        if (!allAchievements || !userAchievements) {\n            return { earned: [], unearned: [] };\n        }\n        const earnedIds = new Set(userAchievements.map(a => a.achievement_id));\n        const earned = allAchievements.filter(a => earnedIds.has(a.id));\n        const unearned = allAchievements.filter(a => !earnedIds.has(a.id));\n        return { earned, unearned };\n    }, [allAchievements, userAchievements]);\n\n    const handleProfileUpdate = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const { data, error } = await supabase\n            .from('profiles')\n            .update({\n                first_name: firstName,\n                last_name: lastName,\n                username: `${firstName} ${lastName}`\n            })\n            .eq('id', session.user.id)\n            .select()\n            .single();\n\n        if (error) {\n            showToast(`Profil yenilənərkən xəta: ${error.message}`);\n        } else {\n            onProfileUpdate(data);\n            showToast('Profil uğurla yeniləndi!');\n        }\n        setLoading(false);\n    };\n\n    const handlePasswordUpdate = async (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            showToast('Parollar eyni deyil!');\n            return;\n        }\n        if (password.length < 6) {\n            showToast('Parol ən azı 6 simvoldan ibarət olmalıdır.');\n            return;\n        }\n\n        setLoading(true);\n        const { error } = await supabase.auth.updateUser({ password });\n        if (error) {\n            showToast(`Parol yenilənərkən xəta: ${error.message}`);\n        } else {\n            showToast('Parol uğurla yeniləndi!');\n            setPassword('');\n            setConfirmPassword('');\n        }\n        setLoading(false);\n    };\n\n    if (!session || !profile) {\n        return <div>Yüklənir...</div>;\n    }\n\n    const experience = profile.experience_points || 0;\n    const dailyStreak = profile.daily_streak || 0;\n\n    return (\n        <div className=\"animate-fade-in space-y-6 max-w-4xl mx-auto\">\n            <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\n                <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Mənim Profilim</h1>\n                <Link to={`/student/${session.user.id}`}>\n                    <Button variant=\"primary\"><ChartBarIcon /> Mənim Nəticələrim</Button>\n                </Link>\n            </div>\n\n            {/* Gamification Stats Card */}\n            <Card>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 items-center\">\n                    <div className=\"md:col-span-2\">\n                        <LevelProgressBar experience={experience} />\n                    </div>\n                    <div className=\"flex justify-around md:justify-end gap-6 text-center\">\n                        <div className=\"flex flex-col items-center\">\n                            <div className=\"flex items-center gap-2 text-2xl font-bold text-yellow-500\">\n                                <StarIcon />\n                                <span>{experience}</span>\n                            </div>\n                            <span className=\"text-sm text-gray-500\">Təcrübə Xalı</span>\n                        </div>\n                        <div className=\"flex flex-col items-center\">\n                            <div className=\"flex items-center gap-2 text-2xl font-bold text-red-500\">\n                                <FireIcon />\n                                <span>{dailyStreak}</span>\n                            </div>\n                            <span className=\"text-sm text-gray-500\">Günlük Seriya</span>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n\n            <Card>\n                <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\"><TrophyIcon /> Qazanılmış Nailiyyətlər</h2>\n                {earned.length > 0 ? (\n                    <div className=\"flex flex-wrap gap-4\">\n                        {earned.map(ach => <AchievementIcon key={ach.id} achievement={ach} />)}\n                    </div>\n                ) : (\n                    <p className=\"text-gray-500\">Hələ heç bir nailiyyətiniz yoxdur. Testləri tamamlayın və ilkini qazanın!</p>\n                )}\n            </Card>\n\n            <Card>\n                <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2 text-gray-500\">Qazanılacaq Nailiyyətlər</h2>\n                {unearned.length > 0 ? (\n                    <div className=\"flex flex-wrap gap-4\">\n                        {unearned.map(ach => (\n                            <div key={ach.id} className=\"grayscale opacity-60\">\n                                <AchievementIcon achievement={ach} />\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p className=\"text-green-600 font-semibold\">Təbrik edirik! Bütün mümkün nailiyyətləri qazanmısınız!</p>\n                )}\n            </Card>\n\n            <Card>\n                <h2 className=\"text-xl font-bold mb-4\">Şəxsi Məlumatlar</h2>\n                <form onSubmit={handleProfileUpdate} className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Ad</label>\n                            <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Soyad</label>\n                            <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end\">\n                        <Button type=\"submit\" disabled={loading}>{loading ? 'Yenilənir...' : 'Məlumatları Yenilə'}</Button>\n                    </div>\n                </form>\n            </Card>\n\n            <Card>\n                <h2 className=\"text-xl font-bold mb-4\">Parolu Dəyiş</h2>\n                <form onSubmit={handlePasswordUpdate} className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Yeni Parol</label>\n                            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Yeni Parolu Təsdiqlə</label>\n                            <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end\">\n                        <Button type=\"submit\" disabled={loading}>{loading ? 'Dəyişilir...' : 'Parolu Dəyiş'}</Button>\n                    </div>\n                </form>\n            </Card>\n        </div>\n    );\n};\n\nexport default ProfilePage;\n","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["FireIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","StarIcon","AcademicCapIcon","iconMap","sniper","marathoner","newbie","default","colorMap","gold","silver","bronze","achievement","IconComponent","icon_name","iconColor","badge_color","_jsxs","className","concat","name","description","children","_jsx","style","fontSize","lineHeight","LevelProgressBar","experience","currentLevel","Math","floor","nextLevelXp","currentLevelXp","progressPercentage","width","_ref2","session","profile","showToast","onProfileUpdate","userAchievements","allAchievements","loading","setLoading","useState","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","useEffect","first_name","last_name","earned","unearned","useMemo","earnedIds","Set","map","a","achievement_id","filter","has","experience_points","dailyStreak","daily_streak","Link","to","user","Button","variant","ChartBarIcon","Card","TrophyIcon","length","ach","AchievementIcon","onSubmit","async","e","preventDefault","data","error","supabase","from","update","username","eq","select","single","message","type","value","onChange","target","required","disabled","auth","updateUser"],"sourceRoot":""}