{"version":3,"file":"static/js/880.655d3264.chunk.js","mappings":"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","sources":["pages/PublicCourseListPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Card from '../components/ui/Card';\nimport { CollectionIcon, SearchIcon, BookmarkIcon, LockClosedIcon } from '../assets/icons';\nimport { useHasAccess } from '../hooks/useHasAccess';\n\nconst PublicCourseListPage = ({ courses, articleProgress, quizResults, session, onNavigate, toggleBookmark, isBookmarked, profile }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const coursesWithProgress = useMemo(() => {\n        const lowercasedTerm = searchTerm.toLowerCase();\n\n        const publishedAndFiltered = courses\n            .filter(course => course.is_published)\n            .filter(course =>\n                course.title.toLowerCase().includes(lowercasedTerm) ||\n                (course.description && course.description.toLowerCase().includes(lowercasedTerm))\n            );\n\n        if (!session) {\n            return publishedAndFiltered.map(course => ({ ...course, progress: 0 }));\n        }\n\n        const completedArticleIds = new Set((articleProgress || []).map(p => p.article_id));\n        const completedQuizIds = new Set((quizResults || []).filter(r => r.user_id === session.user.id).map(r => r.quizId));\n\n        return publishedAndFiltered.map(course => {\n            const totalItems = course.course_items?.length || 0;\n            if (totalItems === 0) {\n                return { ...course, progress: 0 };\n            }\n\n            let completedCount = 0;\n            (course.course_items || []).forEach(item => {\n                if (item.article_id && completedArticleIds.has(item.article_id)) {\n                    completedCount++;\n                } else if (item.quiz_id && completedQuizIds.has(item.quiz_id)) {\n                    completedCount++;\n                }\n            });\n\n            const progress = Math.round((completedCount / totalItems) * 100);\n            return { ...course, progress };\n        });\n    }, [courses, articleProgress, quizResults, session, searchTerm]);\n\n    const CourseCard = ({ course }) => {\n        const hasAccess = useHasAccess(course, profile);\n        const isSaved = isBookmarked(course.id, 'course');\n        const isClickable = hasAccess;\n\n        return (\n            <div\n                key={course.id}\n                onClick={() => isClickable && onNavigate(course, 'course')}\n                className={`relative group transition-transform duration-200 ${isClickable ? 'cursor-pointer hover:-translate-y-1' : 'cursor-not-allowed'}`}\n            >\n                <div className=\"absolute top-3 right-3 flex items-center gap-2 z-10\">\n                    {!hasAccess && (\n                        <div className=\"text-gray-400\" title=\"Məhdud giriş\">\n                            <LockClosedIcon className=\"w-5 h-5\" />\n                        </div>\n                    )}\n                    <button\n                        onClick={(e) => { e.stopPropagation(); toggleBookmark(course.id, 'course'); }}\n                        className=\"p-1 rounded-full hover:bg-orange-100 text-orange-500\"\n                        title={isSaved ? \"Əlfəcini sil\" : \"Əlfəcinlərə əlavə et\"}\n                    >\n                        <BookmarkIcon filled={isSaved} />\n                    </button>\n                </div>\n                <Card className={`group-hover:shadow-orange-200 transition-shadow duration-200 h-full flex flex-col ${!hasAccess ? 'bg-gray-100' : ''}`}>\n                    <div className=\"flex-grow\">\n                        <h2 className=\"text-xl font-bold text-gray-800 mb-2 pr-12\">{course.title}</h2>\n                        <p className=\"text-sm text-gray-600\">{course.description}</p>\n                    </div>\n                    {session && hasAccess && (\n                        <div className=\"mt-4\">\n                            <div className=\"flex justify-between mb-1\"><span className=\"text-xs font-medium text-gray-700\">Proqres</span><span className=\"text-xs font-medium text-green-700\">{course.progress}%</span></div>\n                            <div className=\"w-full bg-gray-200 rounded-full h-2\"><div className=\"bg-green-500 h-2 rounded-full\" style={{ width: `${course.progress}%` }}></div></div>\n                        </div>)}\n                    <div className=\"text-sm text-gray-500 mt-4 pt-4 border-t border-gray-200 flex justify-between items-center\"><span>{course.course_items?.length || 0} dərs</span><span className=\"flex items-center gap-1\"><CollectionIcon className=\"w-4 h-4\" /> Kurs</span></div>\n                </Card>\n            </div>)\n    }\n\n    return (\n        <div className=\"animate-fade-in\">\n            <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-4\">Kurslar</h1>\n            <div className=\"mb-6\">\n                <Card className=\"!p-4 bg-gray-50 border border-gray-200\">\n                    <div className=\"relative flex-grow w-full\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\"><SearchIcon /></span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Kurs adına və ya təsvirinə görə axtarış...\"\n                            value={searchTerm}\n                            onChange={e => setSearchTerm(e.target.value)}\n                            className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\"\n                        />\n                    </div>\n                </Card>\n            </div>\n            {coursesWithProgress.length > 0 ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {coursesWithProgress.map(course => <CourseCard key={course.id} course={course} />)}\n                </div>\n            ) : (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">{searchTerm ? 'Axtarışınıza uyğun heç bir kurs tapılmadı.' : 'Hələ heç bir kurs dərc edilməyib.'}</p>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default PublicCourseListPage;","import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;"],"names":["_ref","courses","articleProgress","quizResults","session","onNavigate","toggleBookmark","isBookmarked","profile","searchTerm","setSearchTerm","useState","coursesWithProgress","useMemo","lowercasedTerm","toLowerCase","publishedAndFiltered","filter","course","is_published","title","includes","description","map","_objectSpread","progress","completedArticleIds","Set","p","article_id","completedQuizIds","r","user_id","user","id","quizId","_course$course_items","totalItems","course_items","length","completedCount","forEach","item","has","quiz_id","Math","round","CourseCard","_ref2","_course$course_items2","hasAccess","useHasAccess","isSaved","isClickable","_jsxs","onClick","className","concat","children","_jsx","LockClosedIcon","e","stopPropagation","BookmarkIcon","filled","Card","style","width","CollectionIcon","SearchIcon","type","placeholder","value","onChange","target"],"sourceRoot":""}