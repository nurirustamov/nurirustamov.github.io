{"version":3,"file":"static/js/725.d2261d7f.chunk.js","mappings":"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","sources":["pages/QuizListPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { SearchIcon, PlusIcon, PlayIcon, EditIcon, TrashIcon, DuplicateIcon, ArchiveIcon, EyeIcon, EyeOffIcon, DotsVerticalIcon, LightbulbIcon, ClockIcon, RefreshIcon, LockClosedIcon, ClipboardCheckIcon, BookmarkIcon } from '../assets/icons';\n\nconst formatDate = (dateString) => {\n    if (!dateString) return null;\n    return new Date(dateString).toLocaleString('az-AZ', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\n};\n\nconst getQuizStatus = (quiz) => {\n    const now = new Date();\n    const startTime = quiz.start_time ? new Date(quiz.start_time) : null;\n    const endTime = quiz.end_time ? new Date(quiz.end_time) : null;\n\n    if (startTime && now < startTime) {\n        return { text: ` başlayır ${formatDate(startTime)}`, color: 'blue', active: false };\n    }\n    if (endTime && now > endTime) {\n        return { text: 'Bitib', color: 'red', active: false };\n    }\n    if (startTime && endTime) {\n        return { text: ` bitir ${formatDate(endTime)}`, color: 'green', active: true };\n    }\n    if (startTime) {\n        return { text: 'Aktiv', color: 'green', active: true };\n    }\n    return { text: 'Aktiv', color: 'green', active: true };\n};\n\nconst QuizCard = ({ quiz, onStartQuiz, onCloneQuiz, onEditQuiz, onArchiveRequest, onDeleteRequest, isAdmin, onToggleStatus, onAssignRequest, toggleBookmark, isBookmarked }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const menuRef = useRef(null);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\n                setMenuOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [menuRef]);\n\n    const questions = quiz.questions || [];\n    const status = getQuizStatus(quiz);\n    const isSaved = isBookmarked(quiz.id, 'quiz');\n\n    return (\n        <div className=\"relative group transition-transform duration-200 hover:-translate-y-1\">\n            <Card className={`flex flex-col group-hover:shadow-orange-200 transition-shadow duration-200 ${quiz.isArchived ? 'bg-gray-100' : ''}`}>\n                <div className=\"flex-grow\">\n                    <div className=\"flex flex-col sm:flex-row justify-between items-start mb-2\">\n                        <h2 className=\"text-xl font-bold text-gray-800 flex-1 pr-2 mb-2 sm:mb-0\">{quiz.title}</h2>\n                        <div className=\"flex flex-col items-end gap-1 flex-shrink-0\">\n                            <div className=\"flex items-center gap-2\">\n                                {isAdmin && !quiz.is_published && !quiz.isArchived && (\n                                    <span className=\"text-xs font-semibold uppercase tracking-wider text-yellow-800 bg-yellow-200 px-2 py-1 rounded-full whitespace-nowrap\">QARALAMA</span>\n                                )}\n                                {quiz.isArchived ? (\n                                    <span className=\"text-xs font-semibold uppercase tracking-wider text-gray-600 bg-gray-200 px-2 py-1 rounded-full whitespace-nowrap\">ARXİVDƏ</span>\n                                ) : (\n                                    quiz.is_published && <span className=\"text-xs font-semibold uppercase tracking-wider text-orange-600 bg-orange-100 px-2 py-1 rounded-full whitespace-nowrap\">{quiz.category || 'Kateqoriyasız'}</span>\n                                )}\n                            </div>\n                            <button onClick={(e) => { e.stopPropagation(); toggleBookmark(quiz.id, 'quiz'); }} className=\"p-1 rounded-full hover:bg-orange-100 text-orange-500\" title={isSaved ? \"Əlfəcini sil\" : \"Əlfəcinlərə əlavə et\"}>\n                                <BookmarkIcon filled={isSaved} />\n                            </button>\n                        </div>\n                    </div>\n                    <p className=\"text-gray-600 mb-4 h-12 overflow-hidden text-sm\">{quiz.description}</p>\n                    <div className=\"flex justify-between items-center text-sm text-gray-500 mb-4\">\n                        <span>{questions.length} sual</span>\n                        <div className=\"flex items-center gap-3\">\n                            {quiz.passcode && (\n                                <span className=\"flex items-center gap-1 font-medium text-gray-600\" title=\"Giriş kodu tələb olunur\">\n                                    <LockClosedIcon className=\"h-4 w-4\" />\n                                </span>\n                            )}\n                            {quiz.attempt_limit > 0 && (\n                                <span className=\"flex items-center gap-1 font-medium text-purple-600\" title={`Maksimum ${quiz.attempt_limit} cəhd`}>\n                                    <RefreshIcon className=\"h-4 w-4\" />\n                                    {quiz.attempt_limit} cəhd\n                                </span>\n                            )}\n                            <span className={`flex items-center gap-1 font-medium text-${status.color}-600`}>\n                                <ClockIcon className=\"h-4 w-4\" />\n                                {status.text}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-stretch gap-2 mt-auto\">\n                    <Button onClick={() => onStartQuiz(quiz.id)} className=\"flex-1\" disabled={questions.length === 0 || quiz.isArchived || !status.active || !quiz.is_published}><PlayIcon /> <span className=\"hidden sm:inline ml-1\">Başla</span></Button>\n                    {isAdmin && (\n                        <div className=\"relative\" ref={menuRef}>\n                            <Button onClick={() => setMenuOpen(!menuOpen)} variant=\"secondary\" className=\"h-full\"><DotsVerticalIcon /></Button>\n                            {menuOpen && (\n                                <div className=\"absolute right-0 bottom-full mb-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n                                    <button onClick={() => { onAssignRequest(quiz.id, quiz.title, 'quiz'); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ClipboardCheckIcon /> <span className=\"ml-2\">Təyin et</span></button>\n                                    <button onClick={() => { onToggleStatus(quiz.id, !quiz.is_published); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                                        {quiz.is_published ? <EyeOffIcon /> : <EyeIcon />}\n                                        <span className=\"ml-2\">{quiz.is_published ? 'Qaralamaya sal' : 'Dərc et'}</span>\n                                    </button>\n                                    <div className=\"border-t border-gray-100 my-1\"></div>\n                                    <button onClick={() => { onCloneQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><DuplicateIcon /> <span className=\"ml-2\">Kopyala</span></button>\n                                    <button onClick={() => { onEditQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><EditIcon /> <span className=\"ml-2\">Redaktə et</span></button>\n                                    <button onClick={() => { onArchiveRequest(quiz.id, !quiz.isArchived); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ArchiveIcon /> <span className=\"ml-2\">{quiz.isArchived ? 'Arxivdən çıxar' : 'Arxivə sal'}</span></button>\n                                    <div className=\"border-t border-gray-100 my-1\"></div>\n                                    <button onClick={() => { onDeleteRequest(quiz.id); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center\"><TrashIcon /> <span className=\"ml-2\">Sil</span></button>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nconst QuizListPage = ({ quizzes, onStartQuiz, onAddNewQuiz, onEditQuiz, onDeleteRequest, onCloneQuiz, onArchiveRequest, onStartSmartPractice, isAdmin, onToggleStatus, onAssignRequest, toggleBookmark, isBookmarked }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('date_desc');\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [viewMode, setViewMode] = useState('published'); // published, drafts, archived\n\n    const categories = useMemo(() => {\n        const activeQuizzes = quizzes.filter(q => !q.isArchived);\n        return ['all', ...new Set(activeQuizzes.map(q => q.category || 'Kateqoriyasız'))];\n    }, [quizzes]);\n\n    const sortedAndFilteredQuizzes = useMemo(() => {\n        const term = searchTerm.toLowerCase();\n\n        return quizzes\n            .filter(quiz => {\n                // Admin view filtering\n                if (isAdmin) {\n                    if (viewMode === 'published' && (quiz.isArchived || !quiz.is_published)) return false;\n                    if (viewMode === 'drafts' && (quiz.isArchived || quiz.is_published)) return false;\n                    if (viewMode === 'archived' && !quiz.isArchived) return false;\n                } else {\n                    // Regular user view: only published and not archived\n                    if (!quiz.is_published || quiz.isArchived) return false;\n                }\n\n                // Common filters\n                if (selectedCategory !== 'all' && (quiz.category || 'Kateqoriyasız') !== selectedCategory) return false;\n                if (term && !quiz.title.toLowerCase().includes(term) && !(quiz.description && quiz.description.toLowerCase().includes(term))) return false;\n\n                return true;\n            })\n            .sort((a, b) => {\n                switch (sortBy) {\n                    case 'title_asc': return a.title.localeCompare(b.title);\n                    case 'title_desc': return b.title.localeCompare(a.title);\n                    case 'questions_asc': return (a.questions || []).length - (b.questions || []).length;\n                    case 'questions_desc': return (b.questions || []).length - (a.questions || []).length;\n                    case 'date_asc': return a.id - b.id;\n                    case 'date_desc':\n                    default: return b.id - a.id;\n                }\n            });\n    }, [quizzes, searchTerm, sortBy, selectedCategory, viewMode, isAdmin]);\n\n    const AdminTabs = () => (\n        <div className=\"border-b border-gray-200 mb-6\">\n            <nav className=\"-mb-px flex space-x-6\" aria-label=\"Tabs\">\n                <button onClick={() => setViewMode('published')} className={`${viewMode === 'published' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Dərc Edilmiş</button>\n                <button onClick={() => setViewMode('drafts')} className={`${viewMode === 'drafts' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Qaralamalar</button>\n                <button onClick={() => setViewMode('archived')} className={`${viewMode === 'archived' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Arxiv</button>\n            </nav>\n        </div>\n    );\n\n    return (\n        <div className=\"animate-fade-in\">\n            <Card className=\"mb-6 !p-4 bg-gray-50 border border-gray-200\">\n                <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n                    <div className=\"relative flex-grow w-full\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\"><SearchIcon /></span>\n                        <input type=\"text\" placeholder=\"Adına və ya təsvirinə görə axtarış...\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\" />\n                    </div>\n                    <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full md:w-auto\">\n                        {viewMode !== 'archived' && (\n                            <select value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                                {categories.map(cat => (\n                                    <option key={cat} value={cat}>{cat === 'all' ? 'Bütün kateqoriyalar' : cat}</option>\n                                ))}\n                            </select>\n                        )}\n                        <select value={sortBy} onChange={e => setSortBy(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                            <option value=\"date_desc\">Ən yenilər</option>\n                            <option value=\"date_asc\">Ən köhnələr</option>\n                            <option value=\"title_asc\">Ad (A-Z)</option>\n                            <option value=\"title_desc\">Ad (Z-A)</option>\n                            <option value=\"questions_desc\">Çox sual</option>\n                            <option value=\"questions_asc\">Az sual</option>\n                        </select>\n                        <Button onClick={onStartSmartPractice} variant=\"primary\" className=\"w-full sm:w-auto\"><LightbulbIcon /><span className=\"hidden sm:inline ml-2\">Ağıllı Məşq</span></Button>\n                        {isAdmin && <Button onClick={onAddNewQuiz} className=\"w-full sm:w-auto\"><PlusIcon /><span className=\"sm:hidden md:inline\">Test yarat</span></Button>}\n                    </div>\n                </div>\n            </Card>\n\n            {isAdmin && <AdminTabs />}\n\n            {sortedAndFilteredQuizzes.length === 0 ? (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">\n                        {viewMode === 'archived' && 'Arxivdə test tapılmadı.'}\n                        {viewMode === 'drafts' && 'Qaralama test tapılmadı.'}\n                        {viewMode === 'published' && 'Dərc edilmiş test tapılmadı. Filtləri dəyişməyə və ya yeni test yaratmağa cəhd edin!'}\n                    </p>\n                </Card>\n            ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {sortedAndFilteredQuizzes.map(quiz => (\n                        <QuizCard\n                            key={quiz.id}\n                            quiz={quiz}\n                            onStartQuiz={onStartQuiz}\n                            onCloneQuiz={onCloneQuiz}\n                            onEditQuiz={onEditQuiz}\n                            onArchiveRequest={onArchiveRequest}\n                            onDeleteRequest={onDeleteRequest}\n                            isAdmin={isAdmin}\n                            onToggleStatus={onToggleStatus}\n                            onAssignRequest={onAssignRequest}\n                            toggleBookmark={toggleBookmark}\n                            isBookmarked={isBookmarked}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default QuizListPage;","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["formatDate","dateString","Date","toLocaleString","day","month","year","hour","minute","QuizCard","_ref","quiz","onStartQuiz","onCloneQuiz","onEditQuiz","onArchiveRequest","onDeleteRequest","isAdmin","onToggleStatus","onAssignRequest","toggleBookmark","isBookmarked","menuOpen","setMenuOpen","useState","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","questions","status","now","startTime","start_time","endTime","end_time","text","concat","color","active","getQuizStatus","isSaved","id","_jsx","className","children","_jsxs","Card","isArchived","title","is_published","category","onClick","e","stopPropagation","BookmarkIcon","filled","description","length","passcode","LockClosedIcon","attempt_limit","RefreshIcon","ClockIcon","Button","disabled","PlayIcon","ref","variant","DotsVerticalIcon","ClipboardCheckIcon","EyeOffIcon","EyeIcon","DuplicateIcon","EditIcon","ArchiveIcon","TrashIcon","_ref2","quizzes","onAddNewQuiz","onStartSmartPractice","searchTerm","setSearchTerm","sortBy","setSortBy","selectedCategory","setSelectedCategory","viewMode","setViewMode","categories","useMemo","activeQuizzes","filter","q","Set","map","sortedAndFilteredQuizzes","term","toLowerCase","includes","sort","a","b","localeCompare","AdminTabs","SearchIcon","type","placeholder","value","onChange","cat","LightbulbIcon","PlusIcon"],"sourceRoot":""}