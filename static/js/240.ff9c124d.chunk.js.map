{"version":3,"file":"static/js/240.ff9c124d.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/LearningPathEditorPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Card from '../components/ui/Card';\r\nimport Button from '../components/ui/Button';\r\nimport Modal from '../components/ui/Modal';\r\nimport { CheckIcon, ArrowLeftIcon, PlusIcon, ArrowUpIcon, ArrowDownIcon, TrashIcon, DocumentTextIcon, CollectionIcon } from '../assets/icons';\r\n\r\n// Modal for adding courses to a learning path\r\nconst AddCoursesModal = ({ isOpen, onClose, courses, onAddItems, existingItems }) => {\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n\r\n    const availableCourses = useMemo(() => {\r\n        const existingIds = new Set(existingItems.map(i => i.course_id));\r\n        return courses.filter(c => !existingIds.has(c.id));\r\n    }, [courses, existingItems]);\r\n\r\n    const handleToggleSelection = (courseId) => {\r\n        const newSelection = new Set(selectedItems);\r\n        if (newSelection.has(courseId)) {\r\n            newSelection.delete(courseId);\r\n        } else {\r\n            newSelection.add(courseId);\r\n        }\r\n        setSelectedItems(newSelection);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        const itemsToAdd = availableCourses.filter(course => selectedItems.has(course.id));\r\n        onAddItems(itemsToAdd);\r\n        setSelectedItems(new Set());\r\n        onClose();\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose} title=\"Kursa əlavə et\">\r\n            <div className=\"max-h-72 overflow-y-auto space-y-2 pr-2\">\r\n                {availableCourses.length > 0 ? availableCourses.map(course => {\r\n                    return (\r\n                        <div key={course.id} className=\"flex items-center p-2 rounded-md hover:bg-gray-100\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={`course-${course.id}`}\r\n                                checked={selectedItems.has(course.id)}\r\n                                onChange={() => handleToggleSelection(course.id)}\r\n                                className=\"h-4 w-4 text-orange-600 rounded mr-3\"\r\n                            />\r\n                            <label htmlFor={`course-${course.id}`} className=\"flex-1 cursor-pointer text-sm font-medium flex items-center\">\r\n                                <CollectionIcon className=\"mr-2 text-purple-500\" />\r\n                                {course.title}\r\n                            </label>\r\n                        </div>\r\n                    )\r\n                }) : (\r\n                    <p className=\"text-center text-gray-500 py-10\">Əlavə ediləcək kurs yoxdur.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"mt-6 flex justify-end\">\r\n                <Button onClick={handleAdd} disabled={selectedItems.size === 0}><PlusIcon /> Seçilmişləri əlavə et ({selectedItems.size})</Button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst LearningPathEditorPage = ({ path, onDraftChange, courses, onSave, showToast }) => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleDraftChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        onDraftChange(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\r\n    };\r\n\r\n    const moveItem = (index, direction) => {\r\n        const newItems = [...path.items];\r\n        const [item] = newItems.splice(index, 1);\r\n        newItems.splice(index + direction, 0, item);\r\n        onDraftChange(prev => ({ ...prev, items: newItems }));\r\n    };\r\n\r\n    const removeItem = (index) => {\r\n        const newItems = path.items.filter((_, i) => i !== index);\r\n        onDraftChange(prev => ({ ...prev, items: newItems }));\r\n    };\r\n\r\n    const addItems = (newCourses) => {\r\n        const formattedItems = newCourses.map(course => ({\r\n            course_id: course.id,\r\n            courses: { // Mimic the structure from a Supabase join\r\n                title: course.title\r\n            }\r\n        }));\r\n        onDraftChange(prev => ({ ...prev, items: [...prev.items, ...formattedItems] }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (!path.title.trim()) {\r\n            showToast('Tədris yolunun başlığı boş ola bilməz.');\r\n            return;\r\n        }\r\n        // Add order to each item before saving\r\n        const finalDraft = { ...path, items: path.items.map((item, index) => ({ ...item, order: index })) };\r\n        onSave(finalDraft);\r\n    };\r\n\r\n    if (!path) return <div>Yüklənir...</div>;\r\n\r\n    return (\r\n        <>\r\n            <AddCoursesModal\r\n                isOpen={isModalOpen}\r\n                onClose={() => setIsModalOpen(false)}\r\n                courses={courses}\r\n                onAddItems={addItems}\r\n                existingItems={path.items}\r\n            />\r\n            <div className=\"grid lg:grid-cols-3 gap-8 items-start\">\r\n                {/* Left Panel */}\r\n                <div className=\"lg:col-span-1 space-y-6 lg:sticky lg:top-24\">\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">{path.id ? 'Tədris Yolunu Redaktə Et' : 'Yeni Tədris Yolu Yarat'}</h1>\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            <Button variant=\"secondary\" onClick={() => navigate('/admin/paths')} className=\"w-full justify-center\"><ArrowLeftIcon /> Ləğv et</Button>\r\n                            <Button onClick={handleSave} className=\"w-full justify-center\"><CheckIcon /> Yadda saxla</Button>\r\n                        </div>\r\n                    </div>\r\n                    <Card>\r\n                        <h3 className=\"font-bold text-gray-800 mb-3 flex items-center gap-2\"><DocumentTextIcon /> Əsas Məlumatlar</h3>\r\n                        <div className=\"space-y-4\">\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Yolun Başlığı</label>\r\n                                <input type=\"text\" name=\"title\" value={path.title} onChange={handleDraftChange} className=\"w-full p-2 border border-gray-300 rounded-md\" />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Təsvir</label>\r\n                                <textarea name=\"description\" value={path.description} onChange={handleDraftChange} rows=\"4\" className=\"w-full p-2 border border-gray-300 rounded-md\"></textarea>\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"flex items-center cursor-pointer\">\r\n                                    <input type=\"checkbox\" name=\"is_published\" checked={!!path.is_published} onChange={handleDraftChange} className=\"h-4 w-4 text-orange-600 rounded border-gray-300\" />\r\n                                    <span className=\"ml-2 text-sm text-gray-700\">Dərc edilsin</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n                {/* Right Panel */}\r\n                <div className=\"lg:col-span-2\">\r\n                    <Card>\r\n                        <div className=\"flex justify-between items-center mb-4\">\r\n                            <h3 className=\"font-bold\">Tədris Yolunun Proqramı</h3>\r\n                            <Button onClick={() => setIsModalOpen(true)}><PlusIcon /> Kurs əlavə et</Button>\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            {path.items.map((item, index) => (\r\n                                <div key={`${item.course_id}-${index}`} className=\"p-3 rounded-lg flex items-center justify-between bg-white border\">\r\n                                    <div className=\"flex items-center\">\r\n                                        <CollectionIcon className=\"mr-3 text-purple-500\" />\r\n                                        <span className=\"font-medium\">{item.courses?.title || 'Kurs adı tapılmadı'}</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Button size=\"sm\" variant=\"ghost\" onClick={() => moveItem(index, -1)} disabled={index === 0}><ArrowUpIcon /></Button>\r\n                                        <Button size=\"sm\" variant=\"ghost\" onClick={() => moveItem(index, 1)} disabled={index === path.items.length - 1}><ArrowDownIcon /></Button>\r\n                                        <Button size=\"sm\" variant=\"danger\" onClick={() => removeItem(index)}><TrashIcon /></Button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            {path.items.length === 0 && <p className=\"text-center text-gray-500 py-8\">Tədris yolunun proqramı boşdur.</p>}\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LearningPathEditorPage;"],"names":["_ref","children","className","_jsx","concat","AddCoursesModal","isOpen","onClose","courses","onAddItems","existingItems","selectedItems","setSelectedItems","useState","Set","availableCourses","useMemo","existingIds","map","i","course_id","filter","c","has","id","_jsxs","Modal","title","length","course","type","checked","onChange","courseId","newSelection","delete","add","handleToggleSelection","htmlFor","CollectionIcon","Button","onClick","handleAdd","itemsToAdd","disabled","size","PlusIcon","_ref2","path","onDraftChange","onSave","showToast","isModalOpen","setIsModalOpen","navigate","useNavigate","handleDraftChange","e","name","value","target","prev","_objectSpread","moveItem","index","direction","newItems","items","item","splice","_Fragment","newCourses","formattedItems","variant","ArrowLeftIcon","handleSave","trim","finalDraft","order","CheckIcon","Card","DocumentTextIcon","description","rows","is_published","_item$courses","ArrowUpIcon","ArrowDownIcon","_","removeItem","TrashIcon"],"sourceRoot":""}