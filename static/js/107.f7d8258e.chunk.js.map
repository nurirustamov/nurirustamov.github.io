{"version":3,"file":"static/js/107.f7d8258e.chunk.js","mappings":"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","sources":["components/ui/ComboBox.js","pages/ArticleEditorPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\n\r\nconst ComboBox = ({ options, value, onChange, placeholder }) => {\r\n    const [query, setQuery] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const filteredOptions = useMemo(() => \r\n        query === ''\r\n            ? options\r\n            : options.filter(option => \r\n                option.toLowerCase().includes(query.toLowerCase())\r\n            )\r\n    , [query, options]);\r\n\r\n    const handleSelect = (option) => {\r\n        onChange(option);\r\n        setQuery('');\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setQuery(e.target.value);\r\n        onChange(e.target.value); // Allow creating new categories\r\n        if (!isOpen) {\r\n            setIsOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative w-full\">\r\n            <input \r\n                type=\"text\"\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                onFocus={() => setIsOpen(true)}\r\n                onBlur={() => setTimeout(() => setIsOpen(false), 150)} // Delay to allow click on option\r\n                placeholder={placeholder}\r\n                className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 sm:text-sm\"\r\n            />\r\n            {isOpen && (\r\n                <ul className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md shadow-lg mt-1 max-h-60 overflow-auto\">\r\n                    {filteredOptions.length > 0 ? (\r\n                        filteredOptions.map(option => (\r\n                            <li \r\n                                key={option}\r\n                                onMouseDown={() => handleSelect(option)} // Use onMouseDown to fire before onBlur\r\n                                className=\"px-3 py-2 cursor-pointer hover:bg-orange-100\"\r\n                            >\r\n                                {option}\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <li className=\"px-3 py-2 text-gray-500\">Nəticə tapılmadı.</li>\r\n                    )}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComboBox;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport SimpleMdeReact from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport ComboBox from '../components/ui/ComboBox';\nimport { ArrowLeftIcon, CheckIcon, DocumentTextIcon, PencilAltIcon } from '../assets/icons';\n\nconst ArticleEditorPage = ({ article, onSave, showToast, existingArticleCategories, quizzes }) => {\n    const [draft, setDraft] = useState(article);\n    const [selectedQuizIds, setSelectedQuizIds] = useState(new Set());\n    const [selectedQuizCategory, setSelectedQuizCategory] = useState('all');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setDraft(article);\n        const initialQuizIds = new Set((article?.article_quizzes || []).map(aq => aq.quiz_id));\n        setSelectedQuizIds(initialQuizIds);\n    }, [article]);\n\n    const handleDraftChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setDraft(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n    };\n\n    const handleCategoryChange = (value) => {\n        setDraft(prev => ({ ...prev, category: value }));\n    };\n\n    const onContentChange = (value) => {\n        setDraft(prev => ({ ...prev, content: value }));\n    };\n\n    const handleQuizSelection = (quizId) => {\n        const newSelection = new Set(selectedQuizIds);\n        if (newSelection.has(quizId)) {\n            newSelection.delete(quizId);\n        } else {\n            newSelection.add(quizId);\n        }\n        setSelectedQuizIds(newSelection);\n    };\n\n    const handleSave = () => {\n        if (!draft.title || !draft.title.trim()) {\n            showToast('Məqalə başlığı boş ola bilməz.');\n            return;\n        }\n        onSave({ ...draft, selectedQuizIds: Array.from(selectedQuizIds) });\n    };\n\n    const editorOptions = useMemo(() => {\n        return {\n            spellChecker: false,\n            toolbar: [\"bold\", \"italic\", \"heading\", \"|\", \"quote\", \"unordered-list\", \"ordered-list\", \"|\", \"link\", \"image\", \"|\", \"preview\", \"side-by-side\", \"fullscreen\", \"|\", \"guide\"],\n        };\n    }, []);\n\n    const quizCategories = useMemo(() => {\n        return ['all', ...new Set((quizzes || []).map(q => q.category || 'Kateqoriyasız'))];\n    }, [quizzes]);\n\n    const filteredQuizzes = useMemo(() => {\n        if (!quizzes) return [];\n        if (selectedQuizCategory === 'all') {\n            return quizzes;\n        }\n        return quizzes.filter(q => (q.category || 'Kateqoriyasız') === selectedQuizCategory);\n    }, [quizzes, selectedQuizCategory]);\n\n    if (!draft) return <div>Yüklənir...</div>;\n\n    return (\n        <div className=\"animate-fade-in\">\n            <div className=\"grid lg:grid-cols-3 gap-8 items-start\">\n                {/* Left Panel */}\n                <div className=\"lg:col-span-1 space-y-6 lg:sticky lg:top-24\">\n                    <div className=\"flex flex-col gap-2\">\n                        <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Məqalə Redaktoru</h1>\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\n                            <Button onClick={() => navigate('/admin/articles')} variant=\"secondary\" className=\"w-full justify-center\"><ArrowLeftIcon /> Siyahıya qayıt</Button>\n                            <Button onClick={handleSave} className=\"w-full justify-center\"><CheckIcon /> Yadda saxla</Button>\n                        </div>\n                    </div>\n                    <Card>\n                        <h3 className=\"font-bold text-gray-800 mb-3 flex items-center gap-2\"><DocumentTextIcon /> Əsas Məlumatlar</h3>\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Başlıq</label>\n                                <input type=\"text\" name=\"title\" value={draft.title || ''} onChange={handleDraftChange} className=\"w-full p-2 border border-gray-300 rounded-md\" />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Kateqoriya</label>\n                                <ComboBox options={existingArticleCategories} value={draft.category || ''} onChange={handleCategoryChange} placeholder=\"Kateqoriya seçin...\" />\n                            </div>\n                            <div>\n                                <label className=\"flex items-center cursor-pointer\">\n                                    <input type=\"checkbox\" name=\"is_published\" checked={!!draft.is_published} onChange={handleDraftChange} className=\"h-4 w-4 text-orange-600 rounded border-gray-300\" />\n                                    <span className=\"ml-2 text-sm text-gray-700\">Dərc edilsin</span>\n                                </label>\n                            </div>\n                        </div>\n                    </Card>\n                    <Card>\n                        <h3 className=\"font-bold text-gray-800 mb-3 flex items-center gap-2\"><PencilAltIcon /> Əlaqəli Testlər</h3>\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"quiz-category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">Testləri kateqoriya üzrə filtr edin</label>\n                            <select\n                                id=\"quiz-category-filter\"\n                                value={selectedQuizCategory}\n                                onChange={e => setSelectedQuizCategory(e.target.value)}\n                                className=\"w-full p-2 border border-gray-300 rounded-md bg-white focus:ring-orange-500 focus:border-orange-500\"\n                            >\n                                {quizCategories.map(cat => <option key={cat} value={cat}>{cat === 'all' ? 'Bütün Testlər' : cat}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"max-h-48 overflow-y-auto space-y-2 pr-2\">\n                            {filteredQuizzes.length > 0 ? filteredQuizzes.map(quiz => (\n                                <div key={quiz.id}>\n                                    <label className=\"flex items-center cursor-pointer p-2 rounded-md hover:bg-gray-100\">\n                                        <input type=\"checkbox\" checked={selectedQuizIds.has(quiz.id)} onChange={() => handleQuizSelection(quiz.id)} className=\"h-4 w-4 text-orange-600 rounded border-gray-300\" />\n                                        <span className=\"ml-3 text-sm text-gray-800\">{quiz.title}</span>\n                                    </label>\n                                </div>\n                            )) : <p className=\"text-sm text-gray-500 text-center py-4\">Bu kateqoriyada test yoxdur.</p>}\n                        </div>\n                    </Card>\n                </div>\n\n                {/* Right Panel */}\n                <div className=\"lg:col-span-2 space-y-6\">\n                    <Card>\n                        <h3 className=\"font-bold text-gray-800 mb-3\">Məqalə Məzmunu</h3>\n                        <SimpleMdeReact\n                            className=\"prose max-w-none\"\n                            id=\"article-content-editor\"\n                            value={draft.content || ''}\n                            onChange={onContentChange}\n                            options={editorOptions}\n                        />\n                    </Card>\n                    <Card>\n                        <h3 className=\"font-bold text-gray-800 mb-3\">Önizləmə</h3>\n                        <div className=\"prose max-w-none p-4 border rounded-md bg-gray-50 min-h-[200px]\">\n                            <ReactMarkdown remarkPlugins={[remarkGfm]}>{draft.content || 'Önizləmə üçün məzmun daxil edin...'}</ReactMarkdown>\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ArticleEditorPage;","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["_ref","options","value","onChange","placeholder","query","setQuery","useState","isOpen","setIsOpen","filteredOptions","useMemo","filter","option","toLowerCase","includes","_jsxs","className","children","_jsx","type","e","target","onFocus","onBlur","setTimeout","length","map","onMouseDown","handleSelect","article","onSave","showToast","existingArticleCategories","quizzes","draft","setDraft","selectedQuizIds","setSelectedQuizIds","Set","selectedQuizCategory","setSelectedQuizCategory","navigate","useNavigate","useEffect","initialQuizIds","article_quizzes","aq","quiz_id","handleDraftChange","name","checked","prev","_objectSpread","editorOptions","spellChecker","toolbar","quizCategories","q","category","filteredQuizzes","Button","onClick","variant","ArrowLeftIcon","handleSave","title","trim","Array","from","CheckIcon","Card","DocumentTextIcon","ComboBox","is_published","PencilAltIcon","htmlFor","id","cat","quiz","has","quizId","newSelection","delete","add","handleQuizSelection","SimpleMdeReact","content","ReactMarkdown","remarkPlugins","remarkGfm","concat"],"sourceRoot":""}