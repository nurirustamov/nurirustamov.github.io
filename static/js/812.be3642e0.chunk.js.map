{"version":3,"file":"static/js/812.be3642e0.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/CourseEditorPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport Modal from '../components/ui/Modal';\nimport { CheckIcon, ArrowLeftIcon, PlusIcon, ArrowUpIcon, ArrowDownIcon, TrashIcon, DocumentTextIcon, PencilAltIcon } from '../assets/icons';\n\nconst AddContentModal = ({ isOpen, onClose, articles, quizzes, onAddItems, existingItems }) => {\n    const [selectedItems, setSelectedItems] = useState(new Set());\n    const [activeTab, setActiveTab] = useState('articles');\n    const [selectedCategory, setSelectedCategory] = useState('all');\n\n    const { availableArticles, availableQuizzes } = useMemo(() => {\n        const existingIds = new Set(existingItems.map(i => `${i.item_type}-${i.item_id}`));\n        const availableArticles = articles\n            .filter(a => !existingIds.has(`article-${a.id}`))\n            .map(a => ({ ...a, type: 'article' }));\n        const availableQuizzes = quizzes\n            .filter(q => !existingIds.has(`quiz-${q.id}`))\n            .map(q => ({ ...q, type: 'quiz' }));\n        return { availableArticles, availableQuizzes };\n    }, [articles, quizzes, existingItems]);\n\n    const categories = useMemo(() => {\n        const source = activeTab === 'articles' ? availableArticles : availableQuizzes;\n        return ['all', ...new Set(source.map(item => item.category || 'KateqoriyasÄ±z'))];\n    }, [activeTab, availableArticles, availableQuizzes]);\n\n    // Reset category filter when tab changes\n    useEffect(() => {\n        setSelectedCategory('all');\n    }, [activeTab]);\n\n    const handleToggleSelection = (item) => {\n        const newSelection = new Set(selectedItems);\n        const itemId = `${item.type}-${item.id}`;\n        if (newSelection.has(itemId)) {\n            newSelection.delete(itemId);\n        } else {\n            newSelection.add(itemId);\n        }\n        setSelectedItems(newSelection);\n    };\n\n    const handleAdd = () => {\n        const allAvailableContent = [...availableArticles, ...availableQuizzes];\n        const itemsToAdd = allAvailableContent.filter(item => selectedItems.has(`${item.type}-${item.id}`));\n        onAddItems(itemsToAdd);\n        setSelectedItems(new Set());\n        onClose();\n    };\n\n    const contentToDisplay = useMemo(() => {\n        const source = activeTab === 'articles' ? availableArticles : availableQuizzes;\n        if (selectedCategory === 'all') {\n            return source;\n        }\n        return source.filter(item => (item.category || 'KateqoriyasÄ±z') === selectedCategory);\n    }, [activeTab, availableArticles, availableQuizzes, selectedCategory]);\n\n    if (!isOpen) return null;\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} title=\"Material ÉlavÉ et\">\n            <div className=\"border-b border-gray-200 mb-4\">\n                <nav className=\"-mb-px flex space-x-6\" aria-label=\"Tabs\">\n                    <button\n                        onClick={() => setActiveTab('articles')}\n                        className={`${activeTab === 'articles' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\n                    >\n                        <DocumentTextIcon /> MÉqalÉlÉr ({availableArticles.length})\n                    </button>\n                    <button\n                        onClick={() => setActiveTab('quizzes')}\n                        className={`${activeTab === 'quizzes' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\n                    >\n                        <PencilAltIcon /> TestlÉr ({availableQuizzes.length})\n                    </button>\n                </nav>\n            </div>\n            <div className=\"mb-4\">\n                <label htmlFor=\"category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">Kateqoriya Ã¼zrÉ filtr</label>\n                <select\n                    id=\"category-filter\"\n                    value={selectedCategory}\n                    onChange={e => setSelectedCategory(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded-md bg-white focus:ring-orange-500 focus:border-orange-500\"\n                >\n                    {categories.map(cat => <option key={cat} value={cat}>{cat === 'all' ? 'BÃ¼tÃ¼n Kateqoriyalar' : cat}</option>)}\n                </select>\n            </div>\n            <div className=\"max-h-72 overflow-y-auto space-y-2 pr-2\">\n                {contentToDisplay.length > 0 ? contentToDisplay.map(item => {\n                    const itemId = `${item.type}-${item.id}`;\n                    return (\n                        <div key={itemId} className=\"flex items-center p-2 rounded-md hover:bg-gray-100\">\n                            <input\n                                type=\"checkbox\"\n                                id={itemId}\n                                checked={selectedItems.has(itemId)}\n                                onChange={() => handleToggleSelection(item)}\n                                className=\"h-4 w-4 text-orange-600 rounded mr-3\"\n                            />\n                            <label htmlFor={itemId} className=\"flex-1 cursor-pointer text-sm font-medium flex items-center\">\n                                {item.type === 'article' ? <DocumentTextIcon className=\"mr-2 text-blue-500\" /> : <PencilAltIcon className=\"mr-2 text-purple-500\" />}\n                                {item.title}\n                            </label>\n                        </div>\n                    )\n                }) : (\n                    <p className=\"text-center text-gray-500 py-10\">Bu kateqoriyada ÉlavÉ edilÉcÉk material yoxdur.</p>\n                )}\n            </div>\n            <div className=\"mt-6 flex justify-end\">\n                <Button onClick={handleAdd} disabled={selectedItems.size === 0}><PlusIcon /> SeÃ§ilmiÅlÉri ÉlavÉ et ({selectedItems.size})</Button>\n            </div>\n        </Modal>\n    );\n};\n\nconst CourseEditorPage = ({ course, onDraftChange, articles, quizzes, onSave, showToast }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const navigate = useNavigate();\n\n    const handleDraftChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        onDraftChange(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n    };\n\n    const moveItem = (index, direction) => {\n        const newItems = [...course.items];\n        const [item] = newItems.splice(index, 1);\n        newItems.splice(index + direction, 0, item);\n        onDraftChange(prev => ({ ...prev, items: newItems }));\n    };\n\n    const removeItem = (index) => {\n        const newItems = course.items.filter((_, i) => i !== index);\n        onDraftChange(prev => ({ ...prev, items: newItems }));\n    };\n\n    const addItems = (newItems) => {\n        const formattedItems = newItems.map(item => ({\n            item_id: item.id,\n            item_type: item.type,\n            title: item.title\n        }));\n        onDraftChange(prev => ({ ...prev, items: [...prev.items, ...formattedItems] }));\n    };\n\n    const handleSave = () => {\n        if (!course.title.trim()) {\n            showToast('Kursun baÅlÄ±ÄÄ± boÅ ola bilmÉz.');\n            return;\n        }\n        const finalDraft = { ...course, items: course.items.map((item, index) => ({ ...item, order: index })) };\n        onSave(finalDraft);\n    };\n\n    if (!course) return <div>YÃ¼klÉnir...</div>;\n\n    return (\n        <>\n            <AddContentModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                articles={articles}\n                quizzes={quizzes}\n                onAddItems={addItems}\n                existingItems={course.items}\n            />\n            <div className=\"grid lg:grid-cols-3 gap-8 items-start\">\n                {/* Left Panel */}\n                <div className=\"lg:col-span-1 space-y-6 lg:sticky lg:top-24\">\n                    <div className=\"flex flex-col gap-2\">\n                        <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">{course.id ? 'Kursu RedaktÉ Et' : 'Yeni Kurs Yarat'}</h1>\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\n                            <Button variant=\"secondary\" onClick={() => navigate('/admin/courses')} className=\"w-full justify-center\"><ArrowLeftIcon /> LÉÄv et</Button>\n                            <Button onClick={handleSave} className=\"w-full justify-center\"><CheckIcon /> Yadda saxla</Button>\n                        </div>\n                    </div>\n                    <Card>\n                        <h3 className=\"font-bold text-gray-800 mb-3 flex items-center gap-2\"><DocumentTextIcon /> Æsas MÉlumatlar</h3>\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Kursun BaÅlÄ±ÄÄ±</label>\n                                <input type=\"text\" name=\"title\" value={course.title} onChange={handleDraftChange} className=\"w-full p-2 border border-gray-300 rounded-md\" />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">TÉsvir</label>\n                                <textarea name=\"description\" value={course.description} onChange={handleDraftChange} rows=\"4\" className=\"w-full p-2 border border-gray-300 rounded-md\"></textarea>\n                            </div>\n                            <div>\n                                <label className=\"flex items-center cursor-pointer\">\n                                    <input type=\"checkbox\" name=\"is_published\" checked={!!course.is_published} onChange={handleDraftChange} className=\"h-4 w-4 text-orange-600 rounded border-gray-300\" />\n                                    <span className=\"ml-2 text-sm text-gray-700\">DÉrc edilsin</span>\n                                </label>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n\n                {/* Right Panel */}\n                <div className=\"lg:col-span-2\">\n                    <Card>\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h3 className=\"font-bold\">Kursun ProqramÄ±</h3>\n                            <Button onClick={() => setIsModalOpen(true)}><PlusIcon /> Material ÉlavÉ et</Button>\n                        </div>\n                        <div className=\"space-y-2\">\n                            {course.items.map((item, index) => (\n                                <div key={`${item.item_type}-${item.item_id}-${index}`} className=\"p-3 rounded-lg flex items-center justify-between bg-white border\">\n                                    <div className=\"flex items-center\">\n                                        {item.item_type === 'article' ? <DocumentTextIcon className=\"mr-3 text-blue-500\" /> : <PencilAltIcon className=\"mr-3 text-purple-500\" />}\n                                        <span className=\"font-medium\">{item.title}</span>\n                                    </div>\n                                    <div className=\"flex items-center gap-2\">\n                                        <Button size=\"sm\" variant=\"ghost\" onClick={() => moveItem(index, -1)} disabled={index === 0}><ArrowUpIcon /></Button>\n                                        <Button size=\"sm\" variant=\"ghost\" onClick={() => moveItem(index, 1)} disabled={index === course.items.length - 1}><ArrowDownIcon /></Button>\n                                        <Button size=\"sm\" variant=\"danger\" onClick={() => removeItem(index)}><TrashIcon /></Button>\n                                    </div>\n                                </div>\n                            ))}\n                            {course.items.length === 0 && <p className=\"text-center text-gray-500 py-8\">Kursun proqramÄ± boÅdur.</p>}\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CourseEditorPage;"],"names":["_ref","children","className","_jsx","concat","AddContentModal","isOpen","onClose","articles","quizzes","onAddItems","existingItems","selectedItems","setSelectedItems","useState","Set","activeTab","setActiveTab","selectedCategory","setSelectedCategory","availableArticles","availableQuizzes","useMemo","existingIds","map","i","item_type","item_id","filter","a","has","id","_objectSpread","type","q","categories","item","category","useEffect","contentToDisplay","source","_jsxs","Modal","title","onClick","DocumentTextIcon","length","PencilAltIcon","htmlFor","value","onChange","e","target","cat","itemId","checked","newSelection","delete","add","handleToggleSelection","Button","handleAdd","itemsToAdd","disabled","size","PlusIcon","_ref2","course","onDraftChange","onSave","showToast","isModalOpen","setIsModalOpen","navigate","useNavigate","handleDraftChange","name","prev","moveItem","index","direction","newItems","items","splice","_Fragment","formattedItems","variant","ArrowLeftIcon","handleSave","trim","finalDraft","order","CheckIcon","Card","description","rows","is_published","ArrowUpIcon","ArrowDownIcon","_","removeItem","TrashIcon"],"sourceRoot":""}