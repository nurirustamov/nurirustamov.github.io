{"version":3,"file":"static/js/729.df87c4e7.chunk.js","mappings":"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","sources":["pages/CourseListPage.js","components/ui/Card.js"],"sourcesContent":["import React from 'react';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { PlusIcon, EditIcon, TrashIcon, EyeIcon, EyeOffIcon, ClipboardCheckIcon, LockClosedIcon } from '../assets/icons';\n\nconst formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString('az-AZ');\n};\n\nconst CourseListPage = ({ courses, onAddNew, onEdit, onDelete, onToggleStatus, onAssignRequest, onSetVisibilityRequest }) => {\n    return (\n        <Card>\n            <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-xl font-bold\">Kurslar</h2>\n                <Button onClick={onAddNew}><PlusIcon /> Yeni Kurs</Button>\n            </div>\n            <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                    <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Başlıq</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Görünürlük</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Yaradılma Tarixi</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Əməliyyatlar</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {courses.map(course => (\n                        <tr key={course.id}>\n                            <td className=\"px-4 py-4 whitespace-nowrap font-medium\">{course.title}</td>\n                            <td className=\"px-4 py-4 whitespace-nowrap\">\n                                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${course.is_published ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`}>\n                                        {course.is_published ? 'Dərc edilib' : 'Qaralama'}\n                                    </span>\n                            </td>\n                            <td className=\"px-4 py-4 whitespace-nowrap\">\n                                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${course.visibility === 'public' ? 'bg-blue-100 text-blue-800' : 'bg-purple-100 text-purple-800'}`}>\n                                        {course.visibility === 'public' ? 'Hər kəsə açıq' : 'Məhdud'}\n                                    </span>\n                            </td>\n                            <td className=\"px-4 py-4 whitespace-nowrap\">{formatDate(course.created_at)}</td>\n                            <td className=\"px-4 py-4 text-sm font-medium\">\n                                <div className=\"flex items-center gap-2 flex-wrap\">\n                                    <Button size=\"sm\" variant=\"secondary\" onClick={() => onSetVisibilityRequest(course.id, course.title, 'course', course.visibility)}><LockClosedIcon /> Giriş</Button>\n                                    <Button size=\"sm\" variant=\"secondary\" onClick={() => onAssignRequest(course.id, course.title, 'course')}><ClipboardCheckIcon /> Təyin et</Button>\n                                    <Button size=\"sm\" variant=\"secondary\" onClick={() => onEdit(course.id)}><EditIcon /> Redaktə et</Button>\n                                    <Button size=\"sm\" variant=\"secondary\" onClick={() => onToggleStatus(course.id, !course.is_published)} title={course.is_published ? 'Gizlət' : 'Dərc et'}>\n                                        {course.is_published ? <EyeOffIcon /> : <EyeIcon />}\n                                    </Button>\n                                    <Button size=\"sm\" variant=\"danger\" onClick={() => onDelete(course.id)}><TrashIcon /> Sil</Button>\n                                </div>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {courses.length === 0 && (\n                    <div className=\"text-center py-12\">\n                        <p className=\"text-gray-500\">Hələ heç bir kurs yaradılmayıb.</p>\n                    </div>\n                )}\n            </div>\n        </Card>\n    );\n};\n\nexport default CourseListPage;","import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;"],"names":["_ref","courses","onAddNew","onEdit","onDelete","onToggleStatus","onAssignRequest","onSetVisibilityRequest","_jsxs","Card","children","className","_jsx","Button","onClick","PlusIcon","map","course","title","concat","is_published","visibility","dateString","created_at","Date","toLocaleDateString","size","variant","id","LockClosedIcon","ClipboardCheckIcon","EditIcon","EyeOffIcon","EyeIcon","TrashIcon","length"],"sourceRoot":""}