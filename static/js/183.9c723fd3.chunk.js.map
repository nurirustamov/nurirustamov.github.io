{"version":3,"file":"static/js/183.9c723fd3.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/GlobalSearchPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport { BookOpenIcon, CollectionIcon, DocumentTextIcon, PaperAirplaneIcon } from '../assets/icons';\n\nconst SearchResultItem = ({ item, type, onStartQuiz }) => {\n    const icons = {\n        quizzes: <BookOpenIcon className=\"w-6 h-6 text-purple-500\" />,\n        courses: <CollectionIcon className=\"w-6 h-6 text-blue-500\" />,\n        articles: <DocumentTextIcon className=\"w-6 h-6 text-green-500\" />,\n        paths: <PaperAirplaneIcon className=\"w-6 h-6 text-orange-500\" />,\n    };\n    const links = {\n        courses: `/courses/${item.id}`,\n        articles: `/articles/${item.id}`,\n        paths: `/paths/${item.id}`,\n    };\n    const typeNames = {\n        quizzes: 'Test',\n        courses: 'Kurs',\n        articles: 'Məqalə',\n        paths: 'Tədris Yolu',\n    };\n\n    const content = (\n        <Card className=\"hover:shadow-orange-200 hover:-translate-y-1 transition-transform duration-200 w-full text-left\">\n            <div className=\"flex items-center gap-4\">\n                <div className=\"flex-shrink-0\">{icons[type]}</div>\n                <div className=\"flex-grow\">\n                    <p className=\"font-bold text-gray-800\">{item.title}</p>\n                    <p className=\"text-sm text-gray-500 line-clamp-2\">{item.description}</p>\n                </div>\n                <span className=\"ml-auto text-xs font-semibold uppercase tracking-wider text-gray-500 bg-gray-100 px-2 py-1 rounded-full whitespace-nowrap\">\n                    {typeNames[type]}\n                </span>\n            </div>\n        </Card>\n    );\n\n    if (type === 'quizzes') {\n        return <button onClick={() => onStartQuiz(item.id)} className=\"block w-full\">{content}</button>;\n    }\n\n    return <Link to={links[type]} className=\"block\">{content}</Link>;\n};\n\nconst GlobalSearchPage = ({ searchResults, onStartQuiz }) => {\n    const [searchParams] = useSearchParams();\n    const query = searchParams.get('q');\n\n    const allResults = [\n        ...searchResults.quizzes.map(item => ({ ...item, resultType: 'quizzes' })),\n        ...searchResults.courses.map(item => ({ ...item, resultType: 'courses' })),\n        ...searchResults.articles.map(item => ({ ...item, resultType: 'articles' })),\n        ...searchResults.paths.map(item => ({ ...item, resultType: 'paths' })),\n    ];\n\n    return (\n        <div className=\"animate-fade-in space-y-6\">\n            <h1 className=\"text-3xl font-bold text-gray-800\">\n                Axtarış nəticələri: <span className=\"text-orange-600\">\"{query}\"</span>\n            </h1>\n\n            {allResults.length > 0 ? (\n                <div className=\"space-y-4\">\n                    {allResults.map(item => (\n                        <SearchResultItem key={`${item.resultType}-${item.id}`} item={item} type={item.resultType} onStartQuiz={onStartQuiz} />\n                    ))}\n                </div>\n            ) : (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">Axtarışınıza uyğun heç bir nəticə tapılmadı.</p>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default GlobalSearchPage;"],"names":["_ref","children","className","_jsx","concat","SearchResultItem","item","type","onStartQuiz","icons","quizzes","BookOpenIcon","courses","CollectionIcon","articles","DocumentTextIcon","paths","PaperAirplaneIcon","links","id","content","Card","_jsxs","title","description","onClick","Link","to","_ref2","searchResults","searchParams","useSearchParams","query","get","allResults","map","_objectSpread","resultType","length"],"sourceRoot":""}