{"version":3,"file":"static/js/725.32530bef.chunk.js","mappings":"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","sources":["pages/QuizListPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { SearchIcon, PlusIcon, PlayIcon, EditIcon, TrashIcon, DuplicateIcon, ArchiveIcon, EyeIcon, EyeOffIcon, DotsVerticalIcon, LightbulbIcon, ClockIcon, RefreshIcon, LockClosedIcon, ClipboardCheckIcon } from '../assets/icons';\n\nconst formatDate = (dateString) => {\n    if (!dateString) return null;\n    return new Date(dateString).toLocaleString('az-AZ', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\n};\n\nconst getQuizStatus = (quiz) => {\n    const now = new Date();\n    const startTime = quiz.start_time ? new Date(quiz.start_time) : null;\n    const endTime = quiz.end_time ? new Date(quiz.end_time) : null;\n\n    if (startTime && now < startTime) {\n        return { text: ` başlayır ${formatDate(startTime)}`, color: 'blue', active: false };\n    }\n    if (endTime && now > endTime) {\n        return { text: 'Bitib', color: 'red', active: false };\n    }\n    if (startTime && endTime) {\n        return { text: ` bitir ${formatDate(endTime)}`, color: 'green', active: true };\n    }\n    if (startTime) {\n        return { text: 'Aktiv', color: 'green', active: true };\n    }\n    return { text: 'Aktiv', color: 'green', active: true };\n};\n\nconst QuizCard = ({ quiz, onStartQuiz, onCloneQuiz, onEditQuiz, onArchiveRequest, onDeleteRequest, isAdmin, onToggleStatus, onAssignRequest }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const menuRef = useRef(null);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\n                setMenuOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [menuRef]);\n\n    const questions = quiz.questions || [];\n    const status = getQuizStatus(quiz);\n\n    return (\n        <Card className={`flex flex-col transition-transform duration-200 ${quiz.isArchived ? 'bg-gray-100' : 'hover:shadow-orange-200 hover:-translate-y-1'}`}>\n            <div className=\"flex-grow\">\n                <div className=\"flex flex-col sm:flex-row justify-between items-start mb-2\">\n                    <h2 className=\"text-xl font-bold text-gray-800 flex-1 pr-2 mb-2 sm:mb-0\">{quiz.title}</h2>\n                    <div className=\"flex items-center gap-2 flex-shrink-0\">\n                         {isAdmin && !quiz.is_published && !quiz.isArchived && (\n                            <span className=\"text-xs font-semibold uppercase tracking-wider text-yellow-800 bg-yellow-200 px-2 py-1 rounded-full whitespace-nowrap\">QARALAMA</span>\n                        )}\n                        {quiz.isArchived ? (\n                            <span className=\"text-xs font-semibold uppercase tracking-wider text-gray-600 bg-gray-200 px-2 py-1 rounded-full whitespace-nowrap\">ARXİVDƏ</span>\n                        ) : (\n                           quiz.is_published && <span className=\"text-xs font-semibold uppercase tracking-wider text-orange-600 bg-orange-100 px-2 py-1 rounded-full whitespace-nowrap\">{quiz.category || 'Kateqoriyasız'}</span>\n                        )}\n                    </div>\n                </div>\n                <p className=\"text-gray-600 mb-4 h-12 overflow-hidden text-sm\">{quiz.description}</p>\n                <div className=\"flex justify-between items-center text-sm text-gray-500 mb-4\">\n                    <span>{questions.length} sual</span>\n                    <div className=\"flex items-center gap-3\">\n                        {quiz.passcode && (\n                            <span className=\"flex items-center gap-1 font-medium text-gray-600\" title=\"Giriş kodu tələb olunur\">\n                                <LockClosedIcon className=\"h-4 w-4\" />\n                            </span>\n                        )}\n                        {quiz.attempt_limit > 0 && (\n                            <span className=\"flex items-center gap-1 font-medium text-purple-600\" title={`Maksimum ${quiz.attempt_limit} cəhd`}>\n                                <RefreshIcon className=\"h-4 w-4\" />\n                                {quiz.attempt_limit} cəhd\n                            </span>\n                        )}\n                        <span className={`flex items-center gap-1 font-medium text-${status.color}-600`}>\n                            <ClockIcon className=\"h-4 w-4\" />\n                            {status.text}\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex items-stretch gap-2 mt-auto\">\n                <Button onClick={() => onStartQuiz(quiz.id)} className=\"flex-1\" disabled={questions.length === 0 || quiz.isArchived || !status.active || !quiz.is_published}><PlayIcon /> <span className=\"hidden sm:inline ml-1\">Başla</span></Button>\n                {isAdmin && (\n                    <div className=\"relative\" ref={menuRef}>\n                        <Button onClick={() => setMenuOpen(!menuOpen)} variant=\"secondary\" className=\"h-full\"><DotsVerticalIcon /></Button>\n                        {menuOpen && (\n                            <div className=\"absolute right-0 bottom-full mb-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n                                <button onClick={() => { onAssignRequest(quiz.id, quiz.title, 'quiz'); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ClipboardCheckIcon /> <span className=\"ml-2\">Təyin et</span></button>\n                                <button onClick={() => { onToggleStatus(quiz.id, !quiz.is_published); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                                    {quiz.is_published ? <EyeOffIcon /> : <EyeIcon />}\n                                    <span className=\"ml-2\">{quiz.is_published ? 'Qaralamaya sal' : 'Dərc et'}</span>\n                                </button>\n                                <div className=\"border-t border-gray-100 my-1\"></div>\n                                <button onClick={() => { onCloneQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><DuplicateIcon /> <span className=\"ml-2\">Kopyala</span></button>\n                                <button onClick={() => { onEditQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><EditIcon /> <span className=\"ml-2\">Redaktə et</span></button>\n                                <button onClick={() => { onArchiveRequest(quiz.id, !quiz.isArchived); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ArchiveIcon /> <span className=\"ml-2\">{quiz.isArchived ? 'Arxivdən çıxar' : 'Arxivə sal'}</span></button>\n                                <div className=\"border-t border-gray-100 my-1\"></div>\n                                <button onClick={() => { onDeleteRequest(quiz.id); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center\"><TrashIcon /> <span className=\"ml-2\">Sil</span></button>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </Card>\n    );\n};\n\nconst QuizListPage = ({ quizzes, onStartQuiz, onAddNewQuiz, onEditQuiz, onDeleteRequest, onCloneQuiz, onArchiveRequest, onStartSmartPractice, isAdmin, onToggleStatus, onAssignRequest }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('date_desc');\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [viewMode, setViewMode] = useState('published'); // published, drafts, archived\n\n    const categories = useMemo(() => {\n        const activeQuizzes = quizzes.filter(q => !q.isArchived);\n        return ['all', ...new Set(activeQuizzes.map(q => q.category || 'Kateqoriyasız'))];\n    }, [quizzes]);\n\n    const sortedAndFilteredQuizzes = useMemo(() => {\n        const term = searchTerm.toLowerCase();\n        \n        return quizzes\n            .filter(quiz => {\n                // Admin view filtering\n                if (isAdmin) {\n                    if (viewMode === 'published' && (quiz.isArchived || !quiz.is_published)) return false;\n                    if (viewMode === 'drafts' && (quiz.isArchived || quiz.is_published)) return false;\n                    if (viewMode === 'archived' && !quiz.isArchived) return false;\n                } else {\n                    // Regular user view: only published and not archived\n                    if (!quiz.is_published || quiz.isArchived) return false;\n                }\n\n                // Common filters\n                if (selectedCategory !== 'all' && (quiz.category || 'Kateqoriyasız') !== selectedCategory) return false;\n                if (term && !quiz.title.toLowerCase().includes(term) && !(quiz.description && quiz.description.toLowerCase().includes(term))) return false;\n\n                return true;\n            })\n            .sort((a, b) => {\n                switch (sortBy) {\n                    case 'title_asc': return a.title.localeCompare(b.title);\n                    case 'title_desc': return b.title.localeCompare(a.title);\n                    case 'questions_asc': return (a.questions || []).length - (b.questions || []).length;\n                    case 'questions_desc': return (b.questions || []).length - (a.questions || []).length;\n                    case 'date_asc': return a.id - b.id;\n                    case 'date_desc':\n                    default: return b.id - a.id;\n                }\n            });\n    }, [quizzes, searchTerm, sortBy, selectedCategory, viewMode, isAdmin]);\n\n    const AdminTabs = () => (\n        <div className=\"border-b border-gray-200 mb-6\">\n            <nav className=\"-mb-px flex space-x-6\" aria-label=\"Tabs\">\n                <button onClick={() => setViewMode('published')} className={`${viewMode === 'published' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Dərc Edilmiş</button>\n                <button onClick={() => setViewMode('drafts')} className={`${viewMode === 'drafts' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Qaralamalar</button>\n                <button onClick={() => setViewMode('archived')} className={`${viewMode === 'archived' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Arxiv</button>\n            </nav>\n        </div>\n    );\n\n    return (\n        <div className=\"animate-fade-in\">\n            <Card className=\"mb-6 !p-4 bg-gray-50 border border-gray-200\">\n                <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n                    <div className=\"relative flex-grow w-full\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\"><SearchIcon /></span>\n                        <input type=\"text\" placeholder=\"Adına və ya təsvirinə görə axtarış...\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\" />\n                    </div>\n                    <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full md:w-auto\">\n                        {viewMode !== 'archived' && (\n                            <select value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                                {categories.map(cat => (\n                                    <option key={cat} value={cat}>{cat === 'all' ? 'Bütün kateqoriyalar' : cat}</option>\n                                ))}\n                            </select>\n                        )}\n                        <select value={sortBy} onChange={e => setSortBy(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                            <option value=\"date_desc\">Ən yenilər</option>\n                            <option value=\"date_asc\">Ən köhnələr</option>\n                            <option value=\"title_asc\">Ad (A-Z)</option>\n                            <option value=\"title_desc\">Ad (Z-A)</option>\n                            <option value=\"questions_desc\">Çox sual</option>\n                            <option value=\"questions_asc\">Az sual</option>\n                        </select>\n                        <Button onClick={onStartSmartPractice} variant=\"primary\" className=\"w-full sm:w-auto\"><LightbulbIcon /><span className=\"hidden sm:inline ml-2\">Ağıllı Məşq</span></Button>\n                        {isAdmin && <Button onClick={onAddNewQuiz} className=\"w-full sm:w-auto\"><PlusIcon /><span className=\"sm:hidden md:inline\">Test yarat</span></Button>}\n                    </div>\n                </div>\n            </Card>\n\n            {isAdmin && <AdminTabs />}\n\n            {sortedAndFilteredQuizzes.length === 0 ? (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">\n                        {viewMode === 'archived' && 'Arxivdə test tapılmadı.'}\n                        {viewMode === 'drafts' && 'Qaralama test tapılmadı.'}\n                        {viewMode === 'published' && 'Dərc edilmiş test tapılmadı. Filtləri dəyişməyə və ya yeni test yaratmağa cəhd edin!'}\n                    </p>\n                </Card>\n            ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {sortedAndFilteredQuizzes.map(quiz => (\n                        <QuizCard\n                            key={quiz.id}\n                            quiz={quiz}\n                            onStartQuiz={onStartQuiz}\n                            onCloneQuiz={onCloneQuiz}\n                            onEditQuiz={onEditQuiz}\n                            onArchiveRequest={onArchiveRequest}\n                            onDeleteRequest={onDeleteRequest}\n                            isAdmin={isAdmin}\n                            onToggleStatus={onToggleStatus}\n                            onAssignRequest={onAssignRequest}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default QuizListPage;","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["formatDate","dateString","Date","toLocaleString","day","month","year","hour","minute","QuizCard","_ref","quiz","onStartQuiz","onCloneQuiz","onEditQuiz","onArchiveRequest","onDeleteRequest","isAdmin","onToggleStatus","onAssignRequest","menuOpen","setMenuOpen","useState","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","questions","status","now","startTime","start_time","endTime","end_time","text","concat","color","active","getQuizStatus","_jsxs","Card","className","isArchived","children","_jsx","title","is_published","category","description","length","passcode","LockClosedIcon","attempt_limit","RefreshIcon","ClockIcon","Button","onClick","id","disabled","PlayIcon","ref","variant","DotsVerticalIcon","ClipboardCheckIcon","EyeOffIcon","EyeIcon","DuplicateIcon","EditIcon","ArchiveIcon","TrashIcon","_ref2","quizzes","onAddNewQuiz","onStartSmartPractice","searchTerm","setSearchTerm","sortBy","setSortBy","selectedCategory","setSelectedCategory","viewMode","setViewMode","categories","useMemo","activeQuizzes","filter","q","Set","map","sortedAndFilteredQuizzes","term","toLowerCase","includes","sort","a","b","localeCompare","AdminTabs","SearchIcon","type","placeholder","value","onChange","e","cat","LightbulbIcon","PlusIcon"],"sourceRoot":""}