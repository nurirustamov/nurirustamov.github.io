{"version":3,"file":"static/js/493.26077177.chunk.js","mappings":"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","sources":["pages/QuizReviewPage.js","components/ui/Card.js","components/Comments.js"],"sourcesContent":["import React from 'react';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { ArrowLeftIcon, CheckCircleIcon, XCircleIcon, LightbulbIcon, ClockIcon } from '../assets/icons';\nimport Comments from '../components/Comments'; // Импортируем новый компонент\n\nconst QuizReviewPage = ({ quiz, userAnswers, questionOrder, onBack, profile, fetchComments, postComment, deleteComment }) => {\n\n    const getQuestionStatus = (question, userAnswer) => {\n        if (question.type === 'open') {\n            return {\n                status: 'pending',\n                userAnswerText: userAnswer || 'Cavab yoxdur',\n                correctAnswerText: 'Yoxlama gözlənilir'\n            };\n        }\n\n        let isCorrect = false;\n        let correctAnswerText = '';\n        let userAnswerText = userAnswer || 'Cavab yoxdur';\n\n        if (question.type === 'single') {\n            isCorrect = userAnswer === question.options[question.correctAnswers[0]];\n            correctAnswerText = question.options[question.correctAnswers[0]];\n        } else if (question.type === 'multiple') {\n            const correct = question.correctAnswers.map(i => question.options[i]).sort();\n            const user = userAnswer ? [...userAnswer].sort() : [];\n            isCorrect = JSON.stringify(correct) === JSON.stringify(user);\n            correctAnswerText = correct.join(', ');\n            userAnswerText = userAnswer && userAnswer.length > 0 ? userAnswer.join(', ') : 'Cavab yoxdur';\n        } else if (question.type === 'textInput') {\n            isCorrect = userAnswer && question.correctAnswers[0].toLowerCase() === userAnswer.toLowerCase();\n            correctAnswerText = question.correctAnswers[0];\n        } else if (question.type === 'trueFalse') {\n            isCorrect = userAnswer === question.correctAnswer;\n            correctAnswerText = question.correctAnswer ? 'Doğru' : 'Yanlış';\n            if (userAnswer === true) userAnswerText = 'Doğru';\n            else if (userAnswer === false) userAnswerText = 'Yanlış';\n            else userAnswerText = 'Cavab yoxdur';\n        } else if (question.type === 'ordering') {\n            isCorrect = JSON.stringify(userAnswer) === JSON.stringify(question.orderItems);\n            correctAnswerText = question.orderItems.map((item, i) => `${i + 1}. ${item}`).join('; ');\n            userAnswerText = userAnswer && userAnswer.length > 0 ? userAnswer.map((item, i) => `${i + 1}. ${item}`).join('; ') : 'Cavab yoxdur';\n        }\n\n        return { status: isCorrect ? 'correct' : 'incorrect', userAnswerText, correctAnswerText };\n    };\n\n    const statusStyles = {\n        correct: { container: 'bg-green-50 border-l-4 border-green-400', icon: <CheckCircleIcon />, iconColor: 'text-green-500', textColor: 'text-green-700' },\n        incorrect: { container: 'bg-red-50 border-l-4 border-red-400', icon: <XCircleIcon />, iconColor: 'text-red-500', textColor: 'text-red-700' },\n        pending: { container: 'bg-yellow-50 border-l-4 border-yellow-400', icon: <ClockIcon />, iconColor: 'text-yellow-500', textColor: 'text-yellow-700' },\n    };\n\n    return (\n        <div className=\"animate-fade-in\">\n            <Button onClick={onBack} variant=\"secondary\" className=\"mb-6\">\n                <ArrowLeftIcon />\n                <span className=\"hidden sm:inline\">Nəticələrə qayıt</span>\n                <span className=\"sm:hidden\">Geri</span>\n            </Button>\n            <Card>\n                <h1 className=\"text-xl sm:text-2xl font-bold text-center text-orange-600 mb-6 sm:mb-8\">\n                    Cavabların təhlili: {quiz.title}\n                </h1>\n                <div className=\"space-y-6\">\n                    {questionOrder.map((q, index) => {\n                        const userAnswer = userAnswers[q.id];\n                        const { status, userAnswerText, correctAnswerText } = getQuestionStatus(q, userAnswer);\n                        const styles = statusStyles[status];\n\n                        return (\n                            <div key={q.id} className={`p-3 sm:p-4 rounded-lg ${styles.container}`}>\n                                <div className=\"flex items-start\">\n                                    <span className={`mr-3 mt-1 ${styles.iconColor}`}>{styles.icon}</span>\n                                    <h3 className=\"font-semibold text-base sm:text-lg text-gray-800 flex-1\">{index + 1}. {q.text}</h3>\n                                </div>\n\n                                {q.imageUrl && (\n                                    <div className=\"pl-8 mt-3\">\n                                        <img src={q.imageUrl} alt=\"Question illustration\" className=\"rounded-lg max-h-40 sm:max-h-60 w-auto mx-auto\" onError={(e) => e.target.style.display = 'none'} />\n                                    </div>\n                                )}\n\n                                <div className=\"mt-3 pl-8 space-y-2 text-sm sm:text-base\">\n                                    <p>\n                                        <strong>Sizin cavabınız:</strong>{' '}\n                                        <span className={`${styles.textColor} font-medium`}>{userAnswerText}</span>\n                                    </p>\n                                    {status === 'incorrect' && (\n                                        <p>\n                                            <strong>Düzgün cavab:</strong>{' '}\n                                            <span className=\"text-green-700 font-medium\">{correctAnswerText}</span>\n                                        </p>\n                                    )}\n                                    {status === 'pending' && (\n                                        <p className=\"font-semibold text-yellow-800\">{correctAnswerText}</p>\n                                    )}\n                                </div>\n\n                                {q.explanation && (\n                                    <div className=\"mt-4 pt-3 pl-8 border-t border-gray-300/70\">\n                                        <div className=\"flex items-start text-sm text-blue-800\">\n                                            <span className=\"mr-2 mt-1 flex-shrink-0\"><LightbulbIcon /></span>\n                                            <div>\n                                                <strong className=\"font-semibold\">İzah:</strong>\n                                                <p className=\"mt-1 whitespace-pre-wrap\">{q.explanation}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                <div className=\"mt-4 pt-4 pl-8 border-t border-gray-300/70\">\n                                    <Comments\n                                        targetId={q.id.toString()}\n                                        targetType=\"question\"\n                                        profile={profile}\n                                        fetchComments={fetchComments}\n                                        postComment={postComment}\n                                        deleteComment={deleteComment}\n                                    />\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nexport default QuizReviewPage;\n","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Button from './ui/Button';\r\nimport { ReplyIcon, TrashIcon } from '../assets/icons';\r\n\r\nconst Comment = ({ comment, onReply, onDelete, profile }) => {\r\n    const [showReplyForm, setShowReplyForm] = useState(false);\r\n    const [replyContent, setReplyContent] = useState('');\r\n\r\n    const handleReplySubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!replyContent.trim()) return;\r\n        onReply(replyContent, comment.id);\r\n        setReplyContent('');\r\n        setShowReplyForm(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-2 p-3 rounded-lg bg-white shadow-sm\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-8 h-8 rounded-full bg-orange-200 flex items-center justify-center font-bold text-orange-600\">\r\n                        {comment.profiles.first_name?.[0] || 'U'}\r\n                    </div>\r\n                    <span className=\"font-semibold text-gray-800\">{comment.profiles.first_name} {comment.profiles.last_name}</span>\r\n                </div>\r\n                <span className=\"text-xs text-gray-400\">{new Date(comment.created_at).toLocaleString()}</span>\r\n            </div>\r\n            <p className=\"text-gray-700 pl-10\">{comment.content}</p>\r\n            <div className=\"flex items-center justify-end gap-2 pl-10\">\r\n                {profile && <Button variant=\"secondary\" size=\"sm\" onClick={() => setShowReplyForm(!showReplyForm)}><ReplyIcon /> Cavab ver</Button>}\r\n                {profile?.id === comment.user_id && <Button variant=\"danger\" size=\"sm\" onClick={() => onDelete(comment.id)}><TrashIcon /></Button>}\r\n            </div>\r\n            {showReplyForm && (\r\n                <form onSubmit={handleReplySubmit} className=\"pl-10 mt-2 flex gap-2\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={replyContent}\r\n                        onChange={(e) => setReplyContent(e.target.value)}\r\n                        placeholder={`Cavab verilir: ${comment.profiles.first_name}...`}\r\n                        className=\"flex-grow mt-1 block w-full rounded-md border-gray-300 shadow-sm text-sm\"\r\n                    />\r\n                    <Button type=\"submit\" size=\"sm\">Göndər</Button>\r\n                </form>\r\n            )}\r\n            {comment.children && comment.children.length > 0 && (\r\n                <div className=\"pl-6 border-l-2 border-orange-100 mt-2 space-y-3\">\r\n                    {comment.children.map(child => (\r\n                        <Comment key={child.id} comment={child} onReply={onReply} onDelete={onDelete} profile={profile} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Comments = ({ targetId, targetType, profile, fetchComments, postComment, deleteComment }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const loadComments = async () => {\r\n            const fetchedComments = await fetchComments(targetId, targetType);\r\n            setComments(fetchedComments || []);\r\n        };\r\n        if (targetId && targetType) {\r\n            loadComments();\r\n        }\r\n    }, [targetId, targetType, fetchComments]);\r\n\r\n    const handlePostComment = async (content, parentId = null) => {\r\n        const targetUrl = `${location.pathname}#comment-${parentId || 'new'}`;\r\n        const postedComment = await postComment(targetId, targetType, content, parentId, targetUrl);\r\n        if (postedComment) {\r\n            const fetchedComments = await fetchComments(targetId, targetType);\r\n            setComments(fetchedComments || []);\r\n            if (!parentId) {\r\n                setNewComment('');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        const success = await deleteComment(commentId);\r\n        if (success) {\r\n            setComments(prev => prev.filter(c => c.id !== commentId));\r\n        }\r\n    };\r\n\r\n    const commentTree = useMemo(() => {\r\n        const map = {};\r\n        const roots = [];\r\n        comments.forEach(comment => {\r\n            map[comment.id] = { ...comment, children: [] };\r\n        });\r\n        comments.forEach(comment => {\r\n            if (comment.parent_comment_id && map[comment.parent_comment_id]) {\r\n                map[comment.parent_comment_id].children.push(map[comment.id]);\r\n            } else {\r\n                roots.push(map[comment.id]);\r\n            }\r\n        });\r\n        return roots;\r\n    }, [comments]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <h3 className=\"text-xl font-bold text-gray-800\">Şərhlər ({comments.length})</h3>\r\n            {profile && (\r\n                <form onSubmit={(e) => { e.preventDefault(); handlePostComment(newComment); }} className=\"flex gap-2 items-start\">\r\n                    <textarea \r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder=\"Şərhinizi yazın...\"\r\n                        className=\"flex-grow mt-1 block w-full rounded-md border-gray-300 shadow-sm\"\r\n                        rows=\"3\"\r\n                    />\r\n                    <Button type=\"submit\">Göndər</Button>\r\n                </form>\r\n            )}\r\n            {!profile && <p className=\"text-center p-4 bg-gray-50 rounded-md\">Şərh yazmaq üçün <Link to=\"/auth\" className=\"text-orange-600 font-semibold hover:underline\">daxil olun</Link>.</p>}\r\n            \r\n            <div className=\"space-y-4\">\r\n                {commentTree.map(comment => (\r\n                    <Comment key={comment.id} comment={comment} onReply={handlePostComment} onDelete={handleDeleteComment} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n"],"names":["_ref","quiz","userAnswers","questionOrder","onBack","profile","fetchComments","postComment","deleteComment","statusStyles","correct","container","icon","_jsx","CheckCircleIcon","iconColor","textColor","incorrect","XCircleIcon","pending","ClockIcon","_jsxs","className","children","Button","onClick","variant","ArrowLeftIcon","Card","title","map","q","index","userAnswer","id","status","userAnswerText","correctAnswerText","getQuestionStatus","question","type","isCorrect","options","correctAnswers","i","sort","user","JSON","stringify","join","length","toLowerCase","correctAnswer","orderItems","item","concat","styles","text","imageUrl","src","alt","onError","e","target","style","display","explanation","LightbulbIcon","Comments","targetId","toString","targetType","Comment","_comment$profiles$fir","comment","onReply","onDelete","showReplyForm","setShowReplyForm","useState","replyContent","setReplyContent","profiles","first_name","last_name","Date","created_at","toLocaleString","content","size","ReplyIcon","user_id","TrashIcon","onSubmit","preventDefault","trim","value","onChange","placeholder","child","_ref2","comments","setComments","newComment","setNewComment","location","useLocation","useEffect","async","fetchedComments","loadComments","handlePostComment","parentId","arguments","undefined","targetUrl","pathname","handleDeleteComment","commentId","prev","filter","c","commentTree","useMemo","roots","forEach","_objectSpread","parent_comment_id","push","rows","Link","to"],"sourceRoot":""}