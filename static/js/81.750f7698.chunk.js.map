{"version":3,"file":"static/js/81.750f7698.chunk.js","mappings":"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","sources":["pages/BookmarksPage.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { BookOpenIcon, DocumentTextIcon, CollectionIcon, BookmarkIcon } from '../assets/icons';\n\nconst ItemCard = ({ item, type, onNavigate, onStartQuiz, onToggleBookmark, isBookmarked }) => {\n    const typeInfo = {\n        quiz: { icon: <BookOpenIcon />, title: item.title, typeName: 'Test' },\n        article: { icon: <DocumentTextIcon />, title: item.title, typeName: 'Məqalə' },\n        course: { icon: <CollectionIcon />, title: item.title, typeName: 'Kurs' },\n    };\n\n    const info = typeInfo[type];\n    if (!info) return null;\n\n    const handleBookmarkClick = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onToggleBookmark(item.id, type);\n    };\n\n    const handleCardClick = (e) => {\n        if (e.target.closest('.bookmark-btn')) {\n            return;\n        }\n        if (type === 'quiz') {\n            onStartQuiz(item.id);\n        } else {\n            onNavigate(item, type);\n        }\n    };\n\n    return (\n        <div onClick={handleCardClick} className=\"block bg-white p-4 rounded-lg shadow hover:shadow-md transition-shadow relative group cursor-pointer\">\n            <button\n                onClick={handleBookmarkClick}\n                className=\"absolute top-2 right-2 p-1 rounded-full hover:bg-orange-100 text-orange-500 bookmark-btn\"\n                title={isBookmarked ? \"Əlfəcini sil\" : \"Əlfəcinlərə əlavə et\"}\n            >\n                <BookmarkIcon filled={isBookmarked} />\n            </button>\n            <div className=\"flex items-start gap-4\">\n                <div className=\"text-orange-500 mt-1\">{info.icon}</div>\n                <div className=\"flex-1\">\n                    <h3 className=\"font-bold text-lg pr-8\">{info.title}</h3>\n                    <p className=\"text-sm text-gray-500 capitalize\">{info.typeName}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst BookmarksPage = ({ bookmarks, quizzes, articles, courses, onNavigate, onStartQuiz, toggleBookmark, isBookmarked }) => {\n    const groupedBookmarks = useMemo(() => {\n        const groups = {\n            quiz: [],\n            article: [],\n            course: [],\n        };\n\n        bookmarks.forEach(bookmark => {\n            const { item_type, item_id } = bookmark;\n            let source;\n            if (item_type === 'quiz') source = quizzes;\n            else if (item_type === 'article') source = articles;\n            else if (item_type === 'course') source = courses;\n\n            if (source) {\n                const itemData = source.find(item => item.id === item_id);\n                if (itemData) {\n                    groups[item_type].push({ ...bookmark, itemData });\n                }\n            }\n        });\n\n        return groups;\n    }, [bookmarks, quizzes, articles, courses]);\n\n    const totalBookmarks = groupedBookmarks.quiz.length + groupedBookmarks.article.length + groupedBookmarks.course.length;\n\n    const typeHeadings = {\n        course: { title: 'Kurslar', icon: <CollectionIcon /> },\n        article: { title: 'Məqalələr', icon: <DocumentTextIcon /> },\n        quiz: { title: 'Testlər', icon: <BookOpenIcon /> },\n    };\n\n    const renderGroup = (items, type) => {\n        if (items.length === 0) return null;\n        const headingInfo = typeHeadings[type];\n        return (\n            <div key={type} className=\"mb-8\">\n                <div className=\"flex items-center gap-3 mb-4 border-b pb-2\">\n                    <div className=\"text-orange-500\">{headingInfo.icon}</div>\n                    <h2 className=\"text-xl font-bold text-gray-700\">{headingInfo.title}</h2>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {items.map(({ item_id, item_type, itemData }) => (<ItemCard key={`${item_type}-${item_id}`} item={itemData} type={item_type} onNavigate={onNavigate} onStartQuiz={onStartQuiz} onToggleBookmark={toggleBookmark} isBookmarked={isBookmarked(item_id, item_type)} />))}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <div className=\"flex items-center gap-2 mb-6\">\n                <BookmarkIcon filled={true} />\n                <h1 className=\"text-2xl font-bold\">Əlfəcinlərim</h1>\n            </div>\n\n            {totalBookmarks > 0 ? (<div>\n                    {renderGroup(groupedBookmarks.course, 'course')}\n                    {renderGroup(groupedBookmarks.article, 'article')}\n                    {renderGroup(groupedBookmarks.quiz, 'quiz')}\n                </div>) : (<div className=\"text-center py-12 bg-white rounded-lg shadow\">\n                    <p className=\"text-gray-500\">Sizin hələ əlfəcininiz yoxdur.</p>\n                    <p className=\"text-sm text-gray-400 mt-2\">Onları burada saxlamaq üçün kurs, məqalə və ya test kartındakı əlfəcin işarəsinə klikləyin.</p>\n                </div>)}\n        </div>);\n};\n\nexport default BookmarksPage;"],"names":["ItemCard","_ref","item","type","onNavigate","onStartQuiz","onToggleBookmark","isBookmarked","info","quiz","icon","_jsx","BookOpenIcon","title","typeName","article","DocumentTextIcon","course","CollectionIcon","_jsxs","onClick","e","target","closest","id","className","children","preventDefault","stopPropagation","BookmarkIcon","filled","_ref2","bookmarks","quizzes","articles","courses","toggleBookmark","groupedBookmarks","useMemo","groups","forEach","bookmark","item_type","item_id","source","itemData","find","push","_objectSpread","totalBookmarks","length","typeHeadings","renderGroup","items","headingInfo","map","_ref3","concat"],"sourceRoot":""}