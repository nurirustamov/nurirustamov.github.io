{"version":3,"file":"static/js/760.796ed7c6.chunk.js","mappings":"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","sources":["pages/FlashcardDeckEditorPage.js","components/ui/Card.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Card from '../components/ui/Card';\r\nimport Button from '../components/ui/Button';\r\nimport { ArrowLeftIcon, CheckIcon, PlusIcon, TrashIcon, DocumentTextIcon } from '../assets/icons';\r\n\r\nconst FlashcardEditor = ({ card, onUpdate, onDelete }) => {\r\n    const handleCardChange = (e) => {\r\n        const { name, value } = e.target;\r\n        onUpdate({ ...card, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-3 border rounded-lg bg-white flex flex-col md:flex-row gap-4\">\r\n            <textarea\r\n                name=\"front\"\r\n                value={card.front || ''}\r\n                onChange={handleCardChange}\r\n                placeholder=\"Kartın ön tərəfi...\"\r\n                rows=\"3\"\r\n                className=\"w-full p-2 border border-gray-300 rounded-md flex-1\"\r\n            />\r\n            <textarea\r\n                name=\"back\"\r\n                value={card.back || ''}\r\n                onChange={handleCardChange}\r\n                placeholder=\"Kartın arxa tərəfi...\"\r\n                rows=\"3\"\r\n                className=\"w-full p-2 border border-gray-300 rounded-md flex-1\"\r\n            />\r\n            <Button onClick={onDelete} variant=\"danger\" className=\"self-start md:self-center\">\r\n                <TrashIcon />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FlashcardDeckEditorPage = ({ deck, onDraftChange, onSave, showToast }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleDeckInfoChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        onDraftChange(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\r\n    };\r\n\r\n    const handleCardsChange = (newCards) => {\r\n        onDraftChange(prev => ({ ...prev, flashcards: newCards }));\r\n    };\r\n\r\n    const addCard = () => {\r\n        const newCard = {\r\n            id: `new-${Date.now()}`,\r\n            front: '',\r\n            back: ''\r\n        };\r\n        handleCardsChange([...(deck.flashcards || []), newCard]);\r\n    };\r\n\r\n    const updateCard = (updatedCard) => {\r\n        handleCardsChange((deck.flashcards || []).map(c => c.id === updatedCard.id ? updatedCard : c));\r\n    };\r\n\r\n    const deleteCard = (cardId) => {\r\n        handleCardsChange((deck.flashcards || []).filter(c => c.id !== cardId));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (!deck.title.trim()) {\r\n            showToast('Kolodanın başlığı boş ola bilməz.');\r\n            return;\r\n        }\r\n        onSave(deck);\r\n    };\r\n\r\n    if (!deck) return <div>Yüklənir...</div>;\r\n\r\n    return (\r\n        <div className=\"animate-fade-in grid lg:grid-cols-3 gap-8 items-start\">\r\n            {/* Left Panel */}\r\n            <div className=\"lg:col-span-1 space-y-6 lg:sticky lg:top-24\">\r\n                <div className=\"flex flex-col gap-2\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Koloda Redaktoru</h1>\r\n                    <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                        <Button variant=\"secondary\" onClick={() => navigate('/admin/decks')} className=\"w-full justify-center\"><ArrowLeftIcon /> Siyahıya qayıt</Button>\r\n                        <Button onClick={handleSave} className=\"w-full justify-center\"><CheckIcon /> Yadda saxla</Button>\r\n                    </div>\r\n                </div>\r\n                <Card>\r\n                    <h3 className=\"font-bold text-gray-800 mb-3 flex items-center gap-2\"><DocumentTextIcon /> Əsas Məlumatlar</h3>\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Kolodanın Başlığı</label>\r\n                            <input type=\"text\" name=\"title\" value={deck.title || ''} onChange={handleDeckInfoChange} className=\"w-full p-2 border border-gray-300 rounded-md\" />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Təsvir</label>\r\n                            <textarea name=\"description\" value={deck.description || ''} onChange={handleDeckInfoChange} rows=\"4\" className=\"w-full p-2 border border-gray-300 rounded-md\"></textarea>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"flex items-center cursor-pointer\">\r\n                                <input type=\"checkbox\" name=\"is_published\" checked={!!deck.is_published} onChange={handleDeckInfoChange} className=\"h-4 w-4 text-orange-600 rounded border-gray-300\" />\r\n                                <span className=\"ml-2 text-sm text-gray-700\">Dərc edilsin</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* Right Panel */}\r\n            <div className=\"lg:col-span-2\">\r\n                <Card>\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                        <h3 className=\"font-bold\">Kolodadakı Kartlar ({(deck.flashcards || []).length})</h3>\r\n                        <Button onClick={addCard}><PlusIcon /> Yeni Kart</Button>\r\n                    </div>\r\n                    <div className=\"space-y-3\">\r\n                        {(deck.flashcards || []).map((card, index) => (\r\n                            <FlashcardEditor\r\n                                key={card.id}\r\n                                card={card}\r\n                                onUpdate={updateCard}\r\n                                onDelete={() => deleteCard(card.id)}\r\n                            />\r\n                        ))}\r\n                        {(deck.flashcards || []).length === 0 && <p className=\"text-center text-gray-500 py-8\">Bu kolodada hələ heç bir kart yoxdur.</p>}\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlashcardDeckEditorPage;","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["FlashcardEditor","_ref","card","onUpdate","onDelete","handleCardChange","e","name","value","target","_objectSpread","_jsxs","className","children","_jsx","front","onChange","placeholder","rows","back","Button","onClick","variant","TrashIcon","_ref2","deck","onDraftChange","onSave","showToast","navigate","useNavigate","handleDeckInfoChange","type","checked","prev","handleCardsChange","newCards","flashcards","updateCard","updatedCard","map","c","id","ArrowLeftIcon","handleSave","title","trim","CheckIcon","Card","DocumentTextIcon","description","is_published","length","addCard","newCard","concat","Date","now","PlusIcon","index","deleteCard","cardId","filter"],"sourceRoot":""}