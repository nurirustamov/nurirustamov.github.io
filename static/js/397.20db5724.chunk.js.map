{"version":3,"file":"static/js/397.20db5724.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/StudentReportPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useMemo } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Card from '../components/ui/Card';\r\nimport Button from '../components/ui/Button';\r\nimport { ArrowLeftIcon, ClockIcon, CheckCircleIcon, ArrowUpIcon, ArrowDownIcon, InformationCircleIcon } from '../assets/icons';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    if (isNaN(date)) return 'Invalid Date';\r\n    return date.toLocaleString('az-AZ');\r\n};\r\n\r\nconst ResultsTable = ({ results, onReviewResult }) => (\r\n    <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Test Adı</th>\r\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nəticə</th>\r\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tarix</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {results.map(result => (\r\n                    <tr key={result.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                            <button onClick={() => onReviewResult(result)} className=\"text-blue-600 hover:underline text-left\">\r\n                                {result.quizTitle}\r\n                            </button>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            <div className=\"flex flex-col\">\r\n                                <span className=\"font-bold\">{result.score} / {result.totalPoints} bal ({result.percentage}%)</span>\r\n                                <span className=\"text-xs text-gray-400\">({result.correctAnswersCount}/{result.totalQuestions} düzgün)</span>\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm\">\r\n                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${result.status === 'pending_review' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`}>\r\n                                {result.status === 'pending_review' ? <ClockIcon className=\"w-4 h-4 mr-1.5\" /> : <CheckCircleIcon className=\"w-4 h-4 mr-1.5\" />}\r\n                                {result.status === 'pending_review' ? 'Yoxlanılır' : 'Tamamlanıb'}\r\n                            </span>\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(result.created_at)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nconst StudentReportPage = ({ results, onReviewResult }) => {\r\n    const { userId } = useParams();\r\n\r\n    const studentResults = useMemo(() => {\r\n        return results\r\n            .filter(r => r.user_id === userId)\r\n            .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    }, [results, userId]);\r\n\r\n    const pendingResults = useMemo(() => studentResults.filter(r => r.status === 'pending_review'), [studentResults]);\r\n    const completedResults = useMemo(() => studentResults.filter(r => r.status !== 'pending_review'), [studentResults]);\r\n\r\n    const studentName = studentResults.length > 0 ? `${studentResults[0].userName} ${studentResults[0].userSurname}` : '';\r\n\r\n    const analytics = useMemo(() => {\r\n        if (completedResults.length === 0) return null;\r\n\r\n        const totalPercentage = completedResults.reduce((acc, r) => acc + r.percentage, 0);\r\n        const averageScore = totalPercentage / completedResults.length;\r\n\r\n        const bestPerf = [...completedResults].sort((a, b) => b.percentage - a.percentage)[0];\r\n        const worstPerf = [...completedResults].sort((a, b) => a.percentage - b.percentage)[0];\r\n\r\n        const quizAverages = completedResults.map(studentResult => {\r\n            const allResultsForQuiz = results.filter(r => r.quizId === studentResult.quizId && r.status !== 'pending_review');\r\n            if (allResultsForQuiz.length === 0) return 0;\r\n            const total = allResultsForQuiz.reduce((acc, r) => acc + r.percentage, 0);\r\n            return total / allResultsForQuiz.length;\r\n        });\r\n\r\n        return { averageScore, bestPerf, worstPerf, quizAverages };\r\n    }, [completedResults, results]);\r\n\r\n    const chartData = useMemo(() => {\r\n        if (!analytics) return null;\r\n        const sortedCompleted = [...completedResults].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\r\n        return {\r\n            labels: sortedCompleted.map(r => `${r.quizTitle} (${formatDate(r.created_at)})`),\r\n            datasets: [\r\n                {\r\n                    label: 'Tələbənin Nəticəsi (%)',\r\n                    data: sortedCompleted.map(r => r.percentage),\r\n                    borderColor: '#F97316',\r\n                    backgroundColor: 'rgba(249, 115, 22, 0.2)',\r\n                    fill: true,\r\n                    tension: 0.2\r\n                },\r\n                {\r\n                    label: 'Testin Orta Nəticəsi (%)',\r\n                    data: analytics.quizAverages,\r\n                    borderColor: '#10B981',\r\n                    backgroundColor: 'rgba(16, 185, 129, 0.2)',\r\n                    fill: true,\r\n                    tension: 0.2\r\n                }\r\n            ]\r\n        };\r\n    }, [completedResults, analytics]);\r\n\r\n    if (studentResults.length === 0) {\r\n        return (\r\n            <Card className=\"text-center\">\r\n                <p className=\"text-red-500\">Bu tələbə üçün nəticə tapılmadı.</p>\r\n                <Link to=\"/stats\"><Button variant=\"secondary\" className=\"mt-4\">Statistikaya qayıt</Button></Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate-fade-in space-y-6\">\r\n            <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\r\n                <div>\r\n                    <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Tələbə Hesabatı</h1>\r\n                    <p className=\"text-lg text-gray-600\">{studentName}</p>\r\n                </div>\r\n                <Link to=\"/stats\"><Button variant=\"secondary\"><ArrowLeftIcon /> <span className=\"hidden sm:inline\">Statistikaya qayıt</span></Button></Link>\r\n            </div>\r\n\r\n            {analytics ? (\r\n                <>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                        <Card className=\"flex flex-col justify-center items-center text-center\">\r\n                            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Orta Nəticə</h3>\r\n                            <p className=\"text-4xl font-bold text-orange-500\">{analytics.averageScore.toFixed(1)}%</p>\r\n                            <p className=\"text-sm text-gray-500\">({completedResults.length} test əsasında)</p>\r\n                        </Card>\r\n                        <Card className=\"text-center\">\r\n                            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Ən Yaxşı Nəticə</h3>\r\n                            <div className=\"flex items-center justify-center gap-2 text-2xl font-bold text-green-600\">\r\n                                <ArrowUpIcon />\r\n                                <span>{analytics.bestPerf.percentage}%</span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-500 mt-1\">({analytics.bestPerf.quizTitle})</p>\r\n                        </Card>\r\n                        <Card className=\"text-center\">\r\n                            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Ən Zəif Nəticə</h3>\r\n                            <div className=\"flex items-center justify-center gap-2 text-2xl font-bold text-red-600\">\r\n                                <ArrowDownIcon />\r\n                                <span>{analytics.worstPerf.percentage}%</span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-500 mt-1\">({analytics.worstPerf.quizTitle})</p>\r\n                        </Card>\r\n                    </div>\r\n\r\n                    <Card>\r\n                        <h3 className=\"text-lg font-bold text-gray-800 mb-4\">İnkişaf Dinamikası (Tamamlanmış Testlər)</h3>\r\n                        <div className=\"h-80\">\r\n                            {chartData && <Line data={chartData} options={{ responsive: true, maintainAspectRatio: false }} />}\r\n                        </div>\r\n                    </Card>\r\n                </>\r\n            ) : (\r\n                <Card>\r\n                    <div className=\"flex items-center text-blue-700 p-4 bg-blue-50 rounded-lg\">\r\n                        <InformationCircleIcon className=\"w-6 h-6 mr-3 flex-shrink-0\" />\r\n                        <p>Tələbənin tamamlanmış testi olmadığı üçün ümumi analitika göstərilə bilmir. Yoxlamada olan testlər tamamlandıqdan sonra statistika burada görünəcək.</p>\r\n                    </div>\r\n                </Card>\r\n            )}\r\n\r\n            <Card>\r\n                <div className=\"space-y-8\">\r\n                    {pendingResults.length > 0 && (\r\n                        <div>\r\n                            <h3 className=\"text-lg font-bold text-gray-800 mb-4\">Gözləyən Yoxlamalar ({pendingResults.length})</h3>\r\n                            <ResultsTable results={pendingResults} onReviewResult={onReviewResult} />\r\n                        </div>\r\n                    )}\r\n                    {completedResults.length > 0 && (\r\n                        <div>\r\n                            <h3 className=\"text-lg font-bold text-gray-800 mb-4\">Tamamlanmış Nəticələr ({completedResults.length})</h3>\r\n                            <ResultsTable results={completedResults} onReviewResult={onReviewResult} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentReportPage;\r\n"],"names":["_ref","children","className","_jsx","concat","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","formatDate","dateString","date","Date","isNaN","toLocaleString","ResultsTable","results","onReviewResult","_jsxs","map","result","onClick","quizTitle","score","totalPoints","percentage","correctAnswersCount","totalQuestions","status","ClockIcon","CheckCircleIcon","created_at","id","_ref2","userId","useParams","studentResults","useMemo","filter","r","user_id","sort","a","b","pendingResults","completedResults","studentName","length","userName","userSurname","analytics","averageScore","reduce","acc","bestPerf","worstPerf","quizAverages","studentResult","allResultsForQuiz","quizId","chartData","sortedCompleted","labels","datasets","label","data","borderColor","backgroundColor","fill","tension","Card","Link","to","Button","variant","ArrowLeftIcon","_Fragment","toFixed","ArrowUpIcon","ArrowDownIcon","Line","options","responsive","maintainAspectRatio","InformationCircleIcon"],"sourceRoot":""}