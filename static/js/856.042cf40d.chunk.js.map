{"version":3,"file":"static/js/856.042cf40d.chunk.js","mappings":"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","sources":["pages/MyAssignmentsPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../components/ui/Card';\r\nimport Button from '../components/ui/Button';\r\nimport { PlayIcon, DocumentTextIcon, CollectionIcon, ClockIcon, CheckCircleIcon, EyeIcon, StarIcon } from '../assets/icons';\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    if (isNaN(date)) return 'Invalid Date';\r\n    return date.toLocaleString('az-AZ', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\r\n};\r\n\r\n// --- Quest Component ---\r\nconst QuestCard = ({ quests }) => {\r\n    if (!quests || quests.length === 0) {\r\n        return null; // Don't render the card if there are no quests\r\n    }\r\n\r\n    const dailyQuests = quests.filter(q => q.quests.type === 'DAILY');\r\n    const weeklyQuests = quests.filter(q => q.quests.type === 'WEEKLY');\r\n\r\n    const QuestList = ({ title, questsOfType }) => (\r\n        <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">{title}</h3>\r\n            {questsOfType.length > 0 ? (\r\n                 <div className=\"space-y-3\">\r\n                    {questsOfType.map(quest => {\r\n                        const progressPercentage = quest.quests.goal_value > 0 ? (quest.progress / quest.quests.goal_value) * 100 : 0;\r\n                        const isCompleted = quest.status === 'completed';\r\n                        return (\r\n                            <div key={quest.id} className={`p-3 rounded-lg ${isCompleted ? 'bg-green-100 border-l-4 border-green-400' : 'bg-gray-50'}`}>\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <div>\r\n                                        <h4 className=\"font-bold text-gray-800\">{quest.quests.title}</h4>\r\n                                        <p className=\"text-sm text-gray-600\">{quest.quests.description}</p>\r\n                                    </div>\r\n                                    <div className=\"text-right flex-shrink-0 ml-4\">\r\n                                        <p className=\"font-bold text-yellow-500 flex items-center gap-1\">\r\n                                            <StarIcon className=\"w-4 h-4\" /> +{quest.quests.reward_xp} XP\r\n                                        </p>\r\n                                        {isCompleted && <div className=\"flex items-center justify-end gap-1 text-xs text-green-600 font-semibold mt-1\"><CheckCircleIcon className=\"w-4 h-4\"/>Tamamlandı!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                {!isCompleted && (\r\n                                    <div className=\"mt-2\">\r\n                                        <div className=\"flex justify-between mb-1\">\r\n                                            <span className=\"text-xs font-medium text-gray-700\">Proqres</span>\r\n                                            <span className=\"text-xs font-medium text-orange-700\">{quest.progress} / {quest.quests.goal_value}</span>\r\n                                        </div>\r\n                                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                                            <div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: `${progressPercentage}%` }}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                 <p className=\"text-sm text-gray-500\">Bu dövr üçün tapşırıq yoxdur.</p>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Card>\r\n            <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Məqsədlər və Tapşırıqlar</h2>\r\n            <div className=\"space-y-6\">\r\n                <QuestList title=\"Günlük Məqsədlər\" questsOfType={dailyQuests} />\r\n                <QuestList title=\"Həftəlik Məqsədlər\" questsOfType={weeklyQuests} />\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nconst MyAssignmentsPage = ({ assignments, quizzes, courses, quizResults, completedCourses, onStartQuiz, userQuests }) => {\r\n\r\n    const enrichedAssignments = useMemo(() => {\r\n        const completedQuizIds = new Set((quizResults || []).map(r => r.quizId));\r\n        const completedCourseIds = new Set((completedCourses || []).map(c => c.course_id));\r\n\r\n        return assignments.map(assignment => {\r\n            let item = null;\r\n            let isCompleted = false;\r\n            if (assignment.item_type === 'quiz') {\r\n                item = quizzes.find(q => q.id === assignment.item_id);\r\n                if (item) {\r\n                    isCompleted = completedQuizIds.has(item.id);\r\n                }\r\n            } else if (assignment.item_type === 'course') {\r\n                item = courses.find(c => c.id === assignment.item_id);\r\n                if (item) {\r\n                    isCompleted = completedCourseIds.has(item.id);\r\n                }\r\n            }\r\n            return { ...assignment, item, isCompleted };\r\n        }).filter(a => a.item); // Filter out assignments where the item might have been deleted\r\n    }, [assignments, quizzes, courses, quizResults, completedCourses]);\r\n\r\n    const now = new Date();\r\n    const activeAssignments = enrichedAssignments.filter(a => !a.isCompleted);\r\n    const completedAssignments = enrichedAssignments.filter(a => a.isCompleted);\r\n\r\n    const AssignmentCard = ({ assignment }) => {\r\n        const { item, item_type, due_date, isCompleted } = assignment;\r\n        const isOverdue = !isCompleted && due_date && new Date(due_date) < now;\r\n\r\n        return (\r\n            <Card className={`border-l-4 ${isCompleted ? 'border-green-500 bg-green-50/50 opacity-70' : (isOverdue ? 'border-red-500' : 'border-gray-200')}`}>\r\n                <div className=\"flex flex-col sm:flex-row justify-between items-start gap-4\">\r\n                    <div className=\"flex-grow\">\r\n                        <div className=\"flex items-center gap-2 mb-1\">\r\n                            {item_type === 'quiz' ? <DocumentTextIcon className=\"text-purple-500\" /> : <CollectionIcon className=\"text-blue-500\" />}\r\n                            <span className=\"text-xs font-semibold uppercase tracking-wider\">{item_type === 'quiz' ? 'Test' : 'Kurs'}</span>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-bold text-gray-800\">{item.title}</h3>\r\n                    </div>\r\n                    <div className=\"flex-shrink-0 w-full sm:w-auto\">\r\n                        {isCompleted ? (\r\n                            <p className=\"text-sm font-semibold flex items-center gap-2 text-green-600\">\r\n                                <CheckCircleIcon />\r\n                                <span>Tamamlanıb</span>\r\n                            </p>\r\n                        ) : (\r\n                            <p className={`text-sm font-semibold flex items-center gap-2 ${isOverdue ? 'text-red-600' : 'text-gray-600'}`}>\r\n                                <ClockIcon />\r\n                                <span>Son tarix: {formatDate(due_date) || 'Yoxdur'}</span>\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4 flex justify-end\">\r\n                    {isCompleted ? (\r\n                        <Link to={item_type === 'quiz' ? `/review/${quizResults.find(r => r.quizId === item.id)?.id}` : `/courses/${item.id}`}>\r\n                            <Button variant=\"secondary\" size=\"sm\"><EyeIcon /> Nəticəyə bax</Button>\r\n                        </Link>\r\n                    ) : (\r\n                        item_type === 'quiz' ? (\r\n                            <Button onClick={() => onStartQuiz(item.id)}><PlayIcon /> Başla</Button>\r\n                        ) : (\r\n                            <Link to={`/courses/${item.id}`}><Button><PlayIcon /> Başla</Button></Link>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"animate-fade-in space-y-8\">\r\n            <div>\r\n                <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-4\">Tapşırıqlarım</h1>\r\n                <QuestCard quests={userQuests} />\r\n            </div>\r\n            \r\n            <div>\r\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Müəllim Tərəfindən Verilən Tapşırıqlar</h2>\r\n                {activeAssignments.length > 0 ? (\r\n                    <div className=\"space-y-4\">\r\n                        {activeAssignments.map(a => <AssignmentCard key={a.id} assignment={a} />)}\r\n                    </div>\r\n                ) : (\r\n                    <Card className=\"text-center py-12\">\r\n                        <p className=\"text-gray-500\">Aktiv tapşırığınız yoxdur. Afərin!</p>\r\n                    </Card>\r\n                )}\r\n            </div>\r\n\r\n            {completedAssignments.length > 0 && (\r\n                <div>\r\n                    <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Tamamlanmış Tapşırıqlar</h2>\r\n                    <div className=\"space-y-4\">\r\n                        {completedAssignments.map(a => <AssignmentCard key={a.id} assignment={a} />)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyAssignmentsPage;\r\n","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["formatDate","dateString","date","Date","isNaN","toLocaleString","day","month","year","hour","minute","QuestCard","_ref","quests","length","dailyQuests","filter","q","type","weeklyQuests","QuestList","_ref2","title","questsOfType","_jsxs","children","_jsx","className","map","quest","progressPercentage","goal_value","progress","isCompleted","status","concat","description","StarIcon","reward_xp","CheckCircleIcon","style","width","id","Card","_ref3","assignments","quizzes","courses","quizResults","completedCourses","onStartQuiz","userQuests","enrichedAssignments","useMemo","completedQuizIds","Set","r","quizId","completedCourseIds","c","course_id","assignment","item","item_type","find","item_id","has","_objectSpread","a","now","activeAssignments","completedAssignments","AssignmentCard","_ref4","_quizResults$find","due_date","isOverdue","DocumentTextIcon","CollectionIcon","ClockIcon","Link","to","Button","variant","size","EyeIcon","onClick","PlayIcon"],"sourceRoot":""}