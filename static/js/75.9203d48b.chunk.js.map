{"version":3,"file":"static/js/75.9203d48b.chunk.js","mappings":"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","sources":["pages/ArticleViewPage.js","components/ui/Card.js","components/Comments.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport DOMPurify from 'dompurify';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { ArrowLeftIcon, PlayIcon, CheckCircleIcon } from '../assets/icons';\nimport Comments from '../components/Comments';\n\nconst ArticleStyles = () => (\n    <style>{`\n        .article-content h1, .article-content h2, .article-content h3, .article-content h4 {\n            margin-bottom: 0.75em !important;\n            margin-top: 1.5em !important;\n            font-weight: 700 !important;\n            line-height: 1.3 !important;\n        }\n        .article-content h1 { font-size: 2.25em !important; !important; /* red-600 */ }\n        .article-content h2 { font-size: 1.875em !important; !important; /* blue-600 */ }\n        .article-content h3 { font-size: 1.5em !important; !important; /* green-600 */ }\n        .article-content p {\n            margin-bottom: 1.25em !important;\n            line-height: 1.7 !important;\n            color: #374151 !important; /* gray-700 */\n        }\n        .article-content ul, .article-content ol {\n            margin-left: 1.5em !important;\n            margin-bottom: 1.25em !important;\n            padding-left: 1.5em !important;\n        }\n        .article-content ul { list-style-type: disc !important; }\n        .article-content ol { list-style-type: decimal !important; }\n        .article-content li { margin-bottom: 0.5em !important; }\n        .article-content table {\n            width: 100% !important;\n            border-collapse: collapse !important;\n            margin-bottom: 1.5em !important;\n            border: 1px solid #e5e7eb !important; /* gray-200 */\n        }\n        .article-content th, .article-content td {\n            border: 1px solid #e5e7eb !important; /* gray-200 */\n            padding: 0.75em 1em !important;\n            text-align: left !important;\n        }\n        .article-content th {\n            background-color: #f9fafb !important; /* gray-50 */\n            font-weight: 600 !important;\n        }\n        .article-content a {\n            color: #ea580c !important; /* orange-600 */\n            text-decoration: underline !important;\n        }\n        .article-content strong { font-weight: 700 !important; }\n        .article-content em { font-style: italic !important; }\n        .article-content blockquote {\n            border-left: 4px solid #f97316 !important; /* orange-500 */\n            padding-left: 1em !important;\n            margin-left: 0 !important;\n            font-style: italic !important;\n            color: #4b5563 !important; /* gray-600 */\n        }\n    `}</style>\n);\n\nconst ArticleViewPage = ({ articles, quizzes, onStartQuiz, onMarkAsRead, articleProgress, profile, fetchComments, postComment, deleteComment }) => {\n    const { articleId } = useParams();\n    const navigate = useNavigate();\n\n    const article = useMemo(() => {\n        if (!articles || !quizzes) return null;\n        const currentArticle = articles.find(a => a.id === Number(articleId));\n        if (!currentArticle) return null;\n\n        const attachedQuizIds = new Set((currentArticle.article_quizzes || []).map(aq => aq.quiz_id));\n        const attachedQuizzes = quizzes.filter(q => attachedQuizIds.has(q.id));\n\n        return { ...currentArticle, quizzes: attachedQuizzes };\n    }, [articles, quizzes, articleId]);\n\n    const isCompleted = useMemo(() => {\n        return articleProgress.some(p => p.article_id === Number(articleId));\n    }, [articleProgress, articleId]);\n\n    if (!article) {\n        return <Card><p className=\"text-center\">Məqalə tapılmadı.</p></Card>;\n    }\n\n    // --- DIAGNOSTIC LOGS ---\n    console.log(\"HTML до очистки:\", article.content);\n    const sanitizedContent = DOMPurify.sanitize(article.content);\n    console.log(\"HTML после очистки:\", sanitizedContent);\n    // --- END DIAGNOSTIC LOGS ---\n\n    return (\n        <>\n            <ArticleStyles />\n            <div className=\"animate-fade-in max-w-4xl mx-auto space-y-6\">\n                <div className=\"flex justify-between items-center\">\n                    <Button variant=\"secondary\" onClick={() => navigate('/articles')}><ArrowLeftIcon /> Məqalələr siyahısına qayıt</Button>\n                    {isCompleted ? (\n                        <span className=\"flex items-center font-semibold text-green-600\"><CheckCircleIcon className=\"w-6 h-6 mr-2\" /> Oxunub</span>\n                    ) : (\n                        <Button onClick={() => onMarkAsRead(article.id)}>Oxunmuş kimi işarələ</Button>\n                    )}\n                </div>\n                <Card>\n                    <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">{article.title}</h1>\n                    <div className=\"article-content\" dangerouslySetInnerHTML={{ __html: sanitizedContent }} />\n                    <div className=\"mt-6 pt-6 border-t\">\n                        <Comments\n                            targetId={article.id}\n                            targetType=\"article\"\n                            profile={profile}\n                            fetchComments={fetchComments}\n                            postComment={postComment}\n                            deleteComment={deleteComment}\n                        />\n                    </div>\n                </Card>\n\n                {article.quizzes && article.quizzes.length > 0 && (\n                    <Card>\n                        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Mövzuya aid testlər</h2>\n                        <div className=\"space-y-3\">\n                            {article.quizzes.map(quiz => (\n                                <div key={quiz.id} className=\"flex justify-between items-center p-4 border rounded-lg hover:bg-gray-50\">\n                                    <div>\n                                        <h3 className=\"font-semibold text-lg\">{quiz.title}</h3>\n                                        <p className=\"text-sm text-gray-500\">{quiz.questions.length} sual</p>\n                                    </div>\n                                    <Button onClick={() => onStartQuiz(quiz.id)}><PlayIcon /> Testə Başla</Button>\n                                </div>\n                            ))}\n                        </div>\n                    </Card>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default ArticleViewPage;\n","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Button from './ui/Button';\r\nimport { ReplyIcon, TrashIcon } from '../assets/icons';\r\n\r\nconst Comment = ({ comment, onReply, onDelete, profile }) => {\r\n    const [showReplyForm, setShowReplyForm] = useState(false);\r\n    const [replyContent, setReplyContent] = useState('');\r\n\r\n    const handleReplySubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!replyContent.trim()) return;\r\n        onReply(replyContent, comment.id);\r\n        setReplyContent('');\r\n        setShowReplyForm(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-2 p-3 rounded-lg bg-white shadow-sm\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-8 h-8 rounded-full bg-orange-200 flex items-center justify-center font-bold text-orange-600\">\r\n                        {comment.profiles.first_name?.[0] || 'U'}\r\n                    </div>\r\n                    <span className=\"font-semibold text-gray-800\">{comment.profiles.first_name} {comment.profiles.last_name}</span>\r\n                </div>\r\n                <span className=\"text-xs text-gray-400\">{new Date(comment.created_at).toLocaleString()}</span>\r\n            </div>\r\n            <p className=\"text-gray-700 pl-10\">{comment.content}</p>\r\n            <div className=\"flex items-center justify-end gap-2 pl-10\">\r\n                {profile && <Button variant=\"secondary\" size=\"sm\" onClick={() => setShowReplyForm(!showReplyForm)}><ReplyIcon /> Cavab ver</Button>}\r\n                {profile?.id === comment.user_id && <Button variant=\"danger\" size=\"sm\" onClick={() => onDelete(comment.id)}><TrashIcon /></Button>}\r\n            </div>\r\n            {showReplyForm && (\r\n                <form onSubmit={handleReplySubmit} className=\"pl-10 mt-2 flex gap-2\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={replyContent}\r\n                        onChange={(e) => setReplyContent(e.target.value)}\r\n                        placeholder={`Cavab verilir: ${comment.profiles.first_name}...`}\r\n                        className=\"flex-grow mt-1 block w-full rounded-md border-gray-300 shadow-sm text-sm\"\r\n                    />\r\n                    <Button type=\"submit\" size=\"sm\">Göndər</Button>\r\n                </form>\r\n            )}\r\n            {comment.children && comment.children.length > 0 && (\r\n                <div className=\"pl-6 border-l-2 border-orange-100 mt-2 space-y-3\">\r\n                    {comment.children.map(child => (\r\n                        <Comment key={child.id} comment={child} onReply={onReply} onDelete={onDelete} profile={profile} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Comments = ({ targetId, targetType, profile, fetchComments, postComment, deleteComment }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const loadComments = async () => {\r\n            const fetchedComments = await fetchComments(targetId, targetType);\r\n            setComments(fetchedComments || []);\r\n        };\r\n        if (targetId && targetType) {\r\n            loadComments();\r\n        }\r\n    }, [targetId, targetType, fetchComments]);\r\n\r\n    const handlePostComment = async (content, parentId = null) => {\r\n        const targetUrl = `${location.pathname}#comment-${parentId || 'new'}`;\r\n        const postedComment = await postComment(targetId, targetType, content, parentId, targetUrl);\r\n        if (postedComment) {\r\n            const fetchedComments = await fetchComments(targetId, targetType);\r\n            setComments(fetchedComments || []);\r\n            if (!parentId) {\r\n                setNewComment('');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        const success = await deleteComment(commentId);\r\n        if (success) {\r\n            setComments(prev => prev.filter(c => c.id !== commentId));\r\n        }\r\n    };\r\n\r\n    const commentTree = useMemo(() => {\r\n        const map = {};\r\n        const roots = [];\r\n        comments.forEach(comment => {\r\n            map[comment.id] = { ...comment, children: [] };\r\n        });\r\n        comments.forEach(comment => {\r\n            if (comment.parent_comment_id && map[comment.parent_comment_id]) {\r\n                map[comment.parent_comment_id].children.push(map[comment.id]);\r\n            } else {\r\n                roots.push(map[comment.id]);\r\n            }\r\n        });\r\n        return roots;\r\n    }, [comments]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <h3 className=\"text-xl font-bold text-gray-800\">Şərhlər ({comments.length})</h3>\r\n            {profile && (\r\n                <form onSubmit={(e) => { e.preventDefault(); handlePostComment(newComment); }} className=\"flex gap-2 items-start\">\r\n                    <textarea \r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder=\"Şərhinizi yazın...\"\r\n                        className=\"flex-grow mt-1 block w-full rounded-md border-gray-300 shadow-sm\"\r\n                        rows=\"3\"\r\n                    />\r\n                    <Button type=\"submit\">Göndər</Button>\r\n                </form>\r\n            )}\r\n            {!profile && <p className=\"text-center p-4 bg-gray-50 rounded-md\">Şərh yazmaq üçün <Link to=\"/auth\" className=\"text-orange-600 font-semibold hover:underline\">daxil olun</Link>.</p>}\r\n            \r\n            <div className=\"space-y-4\">\r\n                {commentTree.map(comment => (\r\n                    <Comment key={comment.id} comment={comment} onReply={handlePostComment} onDelete={handleDeleteComment} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n"],"names":["ArticleStyles","_jsx","children","_ref","articles","quizzes","onStartQuiz","onMarkAsRead","articleProgress","profile","fetchComments","postComment","deleteComment","articleId","useParams","navigate","useNavigate","article","useMemo","currentArticle","find","a","id","Number","attachedQuizIds","Set","article_quizzes","map","aq","quiz_id","attachedQuizzes","filter","q","has","_objectSpread","isCompleted","some","p","article_id","Card","className","console","log","content","sanitizedContent","DOMPurify","sanitize","_jsxs","_Fragment","Button","variant","onClick","ArrowLeftIcon","CheckCircleIcon","title","dangerouslySetInnerHTML","__html","Comments","targetId","targetType","length","quiz","questions","PlayIcon","concat","Comment","_comment$profiles$fir","comment","onReply","onDelete","showReplyForm","setShowReplyForm","useState","replyContent","setReplyContent","profiles","first_name","last_name","Date","created_at","toLocaleString","size","ReplyIcon","user_id","TrashIcon","onSubmit","e","preventDefault","trim","type","value","onChange","target","placeholder","child","_ref2","comments","setComments","newComment","setNewComment","location","useLocation","useEffect","async","fetchedComments","loadComments","handlePostComment","parentId","arguments","undefined","targetUrl","pathname","handleDeleteComment","commentId","prev","c","commentTree","roots","forEach","parent_comment_id","push","rows","Link","to"],"sourceRoot":""}