{"version":3,"file":"static/js/99.2469c91e.chunk.js","mappings":"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","sources":["components/Certificate.js","pages/CourseViewPage.js","components/ui/Card.js"],"sourcesContent":["import React from 'react';\nimport { StarIcon } from '../assets/icons'; // Иконка звезды остается\n\n// Новый компонент для \"печати\"\nconst Seal = () => (\n    <div className=\"w-32 h-32 rounded-full bg-orange-100 border-4 border-orange-500 flex items-center justify-center text-center text-orange-700\">\n        <div className=\"border-2 border-dashed border-orange-600 rounded-full w-28 h-28 flex items-center justify-center\">\n            <div className=\"flex flex-col items-center justify-center gap-1.5\">\n                <p className=\"font-bold text-sm\">Eduventure</p>\n                <StarIcon className=\"w-4 h-4 my-2 text-orange-600\" />\n                <p className=\"font-bold text-sm\">With Seda</p>\n            </div>\n        </div>\n    </div>\n);\n\n\nconst Certificate = React.forwardRef(({ studentName, courseTitle, completionDate }, ref) => {\n    return (\n        // A4 landscape is roughly 1123x794 pixels\n        <div \n            ref={ref} \n            className=\"w-[1123px] h-[794px] bg-orange-50/50 text-gray-800 flex flex-col font-sans p-4\"\n        >\n            <div className=\"w-full h-full border-2 border-orange-300 p-6 flex flex-col justify-between relative\">\n                {/* Decorative corners */}\n                <div className=\"absolute top-2 left-2 w-16 h-16 border-t-4 border-l-4 border-orange-500\"></div>\n                <div className=\"absolute top-2 right-2 w-16 h-16 border-t-4 border-r-4 border-orange-500\"></div>\n                <div className=\"absolute bottom-2 left-2 w-16 h-16 border-b-4 border-l-4 border-orange-500\"></div>\n                <div className=\"absolute bottom-2 right-2 w-16 h-16 border-b-4 border-r-4 border-orange-500\"></div>\n\n                {/* Header */}\n                <div className=\"text-center z-10\">\n                    <p className=\"text-2xl text-gray-500 tracking-widest\">UĞURLU TAMAMLAMA</p>\n                    <h1 className=\"text-7xl font-bold text-orange-600 font-serif tracking-wide my-2\">SERTİFİKATI</h1>\n                    <p className=\"text-lg text-gray-600\">Bu sənəd təsdiq edir ki,</p>\n                </div>\n\n                {/* Main Content */}\n                <div className=\"text-center my-8 z-10\">\n                    <p className=\"text-6xl font-extrabold text-gray-800 font-serif tracking-wider\">\n                        {studentName}\n                    </p>\n                    <div className=\"w-1/2 h-px bg-orange-300 mx-auto my-6\"></div>\n                    <p className=\"text-lg text-gray-600\">\n                        adlı tələbə <span className=\"font-bold text-orange-700\">\"{courseTitle}\"</span> kursunu\n                    </p>\n                    <p className=\"text-2xl font-semibold text-gray-700 mt-2\">\n                        uğurla başa vurmuşdur.\n                    </p>\n                </div>\n\n                {/* Footer */}\n                <div className=\"flex justify-between items-center z-10\">\n                    <div className=\"text-center w-1/3\">\n                        <p className=\"font-serif text-xl border-b-2 border-gray-400 pb-1 px-4 inline-block\">Sədaqət Ağayeva</p>\n                        <p className=\"text-sm mt-1 text-gray-500\">Təlimçi</p>\n                    </div>\n                    <div className=\"w-1/3 flex justify-center\">\n                        <Seal />\n                    </div>\n                    <div className=\"text-center w-1/3\">\n                        <p className=\"font-serif text-xl border-b-2 border-gray-400 pb-1 px-4 inline-block\">{completionDate}</p>\n                        <p className=\"text-sm mt-1 text-gray-500\">Verilmə Tarixi</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Certificate;\n","import React, { useMemo, useRef, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { ArrowLeftIcon, DocumentTextIcon, PencilAltIcon, PlayIcon, CheckCircleIcon, StarIcon, DownloadIcon } from '../assets/icons';\nimport Certificate from '../components/Certificate';\n\nconst CourseViewPage = ({ courses, onStartQuiz, articleProgress, quizResults, session, profile }) => {\n    const { courseId } = useParams();\n    const navigate = useNavigate();\n    const certificateRef = useRef();\n    const [isGeneratingPdf, setIsGeneratingPdf] = useState(false);\n\n    const course = useMemo(() => {\n        return courses.find(c => c.id === Number(courseId));\n    }, [courses, courseId]);\n\n    const contentWithStatus = useMemo(() => {\n        if (!course || !session) return (course?.course_items || []).sort((a, b) => a.order - b.order).map(item => ({ ...item, isCompleted: false }));\n\n        const completedArticleIds = new Set((articleProgress || []).map(p => p.article_id));\n        const completedQuizIds = new Set((quizResults || []).filter(r => r.user_id === session.user.id).map(r => r.quizId));\n\n        return (course.course_items || []).sort((a, b) => a.order - b.order).map(item => {\n            let isCompleted = false;\n            if (item.article_id) {\n                isCompleted = completedArticleIds.has(item.article_id);\n            } else if (item.quiz_id) {\n                isCompleted = completedQuizIds.has(item.quiz_id);\n            }\n            return { ...item, isCompleted };\n        });\n    }, [course, articleProgress, quizResults, session]);\n\n    const courseProgress = useMemo(() => {\n        const totalItems = contentWithStatus.length;\n        if (totalItems === 0) return { completedCount: 0, totalCount: 0, percentage: 0, nextItem: null };\n\n        const completedCount = contentWithStatus.filter(item => item.isCompleted).length;\n        const percentage = totalItems > 0 ? (completedCount / totalItems) * 100 : 0;\n        const nextItem = contentWithStatus.find(item => !item.isCompleted);\n\n        return { completedCount, totalCount: totalItems, percentage, nextItem };\n    }, [contentWithStatus]);\n\n    const handleContinue = () => {\n        if (courseProgress.nextItem) {\n            const { article_id, quiz_id } = courseProgress.nextItem;\n            if (article_id) {\n                navigate(`/articles/${article_id}`);\n            } else if (quiz_id) {\n                onStartQuiz(quiz_id);\n            }\n        }\n    };\n\n    const handleDownloadCertificate = async () => {\n        if (!certificateRef.current || !profile) return;\n        setIsGeneratingPdf(true);\n\n        try {\n            const canvas = await html2canvas(certificateRef.current, {\n                scale: 1,\n                useCORS: true,\n            });\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF({\n                orientation: 'landscape',\n                unit: 'px',\n                format: [1123, 794]\n            });\n            pdf.addImage(imgData, 'PNG', 0, 0, 1123, 794);\n            pdf.save(`${profile.first_name}_${profile.last_name}_${course.title}_sertifikat.pdf`);\n        } catch (error) {\n            console.error(\"Error generating PDF:\", error);\n            // Optionally show a toast message for the error\n        } finally {\n            setIsGeneratingPdf(false);\n        }\n    };\n\n    if (!course) {\n        return <Card className=\"text-center py-12\"><p className=\"text-gray-500\">Yüklənir...</p></Card>;\n    }\n\n    return (\n        <>\n            {/* Hidden Certificate for PDF generation */}\n            <div style={{ position: 'fixed', left: '-9999px', top: '-9999px' }}>\n                <Certificate\n                    ref={certificateRef}\n                    studentName={`${profile?.first_name || ''} ${profile?.last_name || ''}`}\n                    courseTitle={course.title}\n                    completionDate={new Date().toLocaleDateString('az-AZ')}\n                />\n            </div>\n            <div className=\"animate-fade-in max-w-4xl mx-auto space-y-8\">\n                <div>\n                    <Link to=\"/courses\">\n                        <Button variant=\"secondary\" className=\"mb-4\"><ArrowLeftIcon /> Kurslar siyahısına qayıt</Button>\n                    </Link>\n                    <div className=\"bg-white rounded-xl shadow-lg p-8\">\n                        <h1 className=\"text-4xl font-extrabold text-gray-900 mb-3\">{course.title}</h1>\n                        <p className=\"text-lg text-gray-600 mb-6\">{course.description}</p>\n                        \n                        {/* Progress Bar and Continue Button */}\n                        <div className=\"space-y-4\">\n                            <div>\n                                <div className=\"flex justify-between items-center mb-1\">\n                                    <span className=\"font-bold text-orange-600\">Kursun proqresi</span>\n                                    <span className=\"text-sm text-gray-500\">{courseProgress.completedCount} / {courseProgress.totalCount} tamamlanıb</span>\n                                </div>\n                                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                                    <div className=\"bg-gradient-to-r from-orange-400 to-red-500 h-2.5 rounded-full\" style={{ width: `${courseProgress.percentage}%` }}></div>\n                                </div>\n                            </div>\n                            {courseProgress.nextItem ? (\n                                <Button onClick={handleContinue} className=\"w-full sm:w-auto\"><PlayIcon /> Davam et</Button>\n                            ) : courseProgress.totalCount > 0 && courseProgress.percentage === 100 ? (\n                                <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4 text-lg font-semibold text-green-600 bg-green-50 p-3 rounded-md\">\n                                    <div className=\"flex items-center gap-2\">\n                                        <StarIcon />\n                                        <span>Təbriklər, kursu tamamladınız!</span>\n                                    </div>\n                                    <Button onClick={handleDownloadCertificate} disabled={isGeneratingPdf} className=\"w-full sm:w-auto\">\n                                        <DownloadIcon />\n                                        {isGeneratingPdf ? 'Generasiya olunur...' : 'Sertifikatı Yüklə'}\n                                    </Button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl shadow-lg p-8\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Kursun Proqramı</h2>\n                    <ol className=\"space-y-4\">\n                        {contentWithStatus.map((item, index) => {\n                                let itemTitle = 'Yüklənir...';\n                                let itemIcon = null;\n                                let itemLink = null;\n                                let actionButton = null;\n\n                                if (item.articles) {\n                                    itemTitle = item.articles.title;\n                                    itemIcon = <DocumentTextIcon className=\"w-6 h-6 text-blue-500\" />;\n                                    itemLink = `/articles/${item.article_id}`;\n                                    actionButton = <Link to={itemLink}><Button variant=\"secondary\" size=\"sm\">Bax</Button></Link>;\n                                } else if (item.quizzes) {\n                                    itemTitle = item.quizzes.title;\n                                    itemIcon = <PencilAltIcon className=\"w-6 h-6 text-purple-500\" />;\n                                    actionButton = <Button size=\"sm\" onClick={() => onStartQuiz(item.quiz_id)}><PlayIcon /> Başla</Button>;\n                                }\n\n                                return (\n                                    <li key={item.id || `${item.article_id || item.quiz_id}-${item.order}`} className={`flex items-center gap-4 p-4 rounded-lg border transition-all duration-200 ${!item.isCompleted && courseProgress.nextItem?.id === item.id ? 'border-orange-400 bg-orange-50/50' : 'hover:border-gray-300'}`}>\n                                        <div className={`flex-shrink-0 w-10 h-10 rounded-full flex items-center justify-center ${item.isCompleted ? 'bg-green-100' : 'bg-gray-100'}`}>\n                                            {item.isCompleted ? <CheckCircleIcon className=\"w-6 h-6 text-green-500\" /> : <span className=\"font-bold text-gray-500\">{index + 1}</span>}\n                                        </div>\n                                        <div className=\"flex-shrink-0\">\n                                            {itemIcon}\n                                        </div>\n                                        <div className=\"flex-grow\">\n                                            <p className=\"font-semibold text-gray-800\">{itemTitle}</p>\n                                        </div>\n                                        <div className=\"flex-shrink-0\">\n                                            {actionButton}\n                                        </div>\n                                    </li>\n                                );\n                        })}\n                    </ol>\n                    {(course.course_items || []).length === 0 && (\n                        <p className=\"text-center text-gray-500 py-8\">Kursun proqramı boşdur.</p>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CourseViewPage;\n","import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;"],"names":["Seal","_jsx","className","children","_jsxs","StarIcon","React","_ref","ref","studentName","courseTitle","completionDate","courses","onStartQuiz","articleProgress","quizResults","session","profile","courseId","useParams","navigate","useNavigate","certificateRef","useRef","isGeneratingPdf","setIsGeneratingPdf","useState","course","useMemo","find","c","id","Number","contentWithStatus","course_items","sort","a","b","order","map","item","_objectSpread","isCompleted","completedArticleIds","Set","p","article_id","completedQuizIds","filter","r","user_id","user","quizId","has","quiz_id","courseProgress","totalItems","length","completedCount","totalCount","percentage","nextItem","_Fragment","style","position","left","top","Certificate","concat","first_name","last_name","title","Date","toLocaleDateString","Link","to","Button","variant","ArrowLeftIcon","description","width","onClick","handleContinue","PlayIcon","async","current","imgData","html2canvas","scale","useCORS","toDataURL","pdf","jsPDF","orientation","unit","format","addImage","save","error","console","disabled","DownloadIcon","index","_courseProgress$nextI","itemTitle","itemIcon","itemLink","actionButton","articles","DocumentTextIcon","size","quizzes","PencilAltIcon","CheckCircleIcon","Card"],"sourceRoot":""}