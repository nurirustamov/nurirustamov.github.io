{"version":3,"file":"static/js/498.935965af.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/PublicFlashcardDeckListPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../components/ui/Card';\r\nimport { SearchIcon, ClockIcon } from '../assets/icons';\r\n\r\nconst PublicFlashcardDeckListPage = ({ decks, userReviews }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const decksWithReviewCount = useMemo(() => {\r\n        const lowercasedTerm = searchTerm.toLowerCase();\r\n        const now = new Date().toISOString();\r\n\r\n        return decks\r\n            .filter(deck => deck.is_published)\r\n            .filter(deck =>\r\n                deck.title.toLowerCase().includes(lowercasedTerm) ||\r\n                (deck.description && deck.description.toLowerCase().includes(lowercasedTerm))\r\n            )\r\n            .map(deck => {\r\n                const cardsInDeck = deck.flashcards || [];\r\n                const cardIdsInDeck = new Set(cardsInDeck.map(c => c.id));\r\n                \r\n                const dueReviews = (userReviews || []).filter(review => \r\n                    cardIdsInDeck.has(review.card_id) && review.next_review_at <= now\r\n                );\r\n\r\n                const newCards = cardsInDeck.filter(card => \r\n                    !(userReviews || []).some(review => review.card_id === card.id)\r\n                );\r\n\r\n                const dueCount = dueReviews.length + newCards.length;\r\n\r\n                return { ...deck, dueCount };\r\n            });\r\n    }, [decks, userReviews, searchTerm]);\r\n\r\n    return (\r\n        <div className=\"animate-fade-in\">\r\n            <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-4\">Kart Kolodaları</h1>\r\n            <div className=\"mb-6\">\r\n                <Card className=\"!p-4 bg-gray-50 border border-gray-200\">\r\n                    <div className=\"relative flex-grow w-full\">\r\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\"><SearchIcon /></span>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Koloda adına və ya təsvirinə görə axtarış...\"\r\n                            value={searchTerm}\r\n                            onChange={e => setSearchTerm(e.target.value)}\r\n                            className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\"\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            {decksWithReviewCount.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {decksWithReviewCount.map(deck => (\r\n                        <Link to={`/decks/${deck.id}/study`} key={deck.id}>\r\n                            <Card className=\"hover:shadow-orange-200 hover:-translate-y-1 transition-transform duration-200 h-full flex flex-col\">\r\n                                <div className=\"flex-grow\">\r\n                                    <h2 className=\"text-xl font-bold text-gray-800 mb-2\">{deck.title}</h2>\r\n                                    <p className=\"text-sm text-gray-600\">{deck.description}</p>\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-500 mt-4 pt-4 border-t border-gray-200 flex justify-between items-center\">\r\n                                    <span>{(deck.flashcards || []).length} kart</span>\r\n                                    {deck.dueCount > 0 ? (\r\n                                        <span className=\"flex items-center gap-1 font-bold text-orange-600\">\r\n                                            <ClockIcon /> {deck.dueCount} təkrarlamaq\r\n                                        </span>\r\n                                    ) : (\r\n                                        <span className=\"flex items-center gap-1 text-green-600\">Tamamlanıb</span>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <Card className=\"text-center py-12\">\r\n                    <p className=\"text-gray-500\">{searchTerm ? 'Axtarışınıza uyğun heç bir koloda tapılmadı.' : 'Hələ heç bir koloda dərc edilməyib.'}</p>\r\n                </Card>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PublicFlashcardDeckListPage;\r\n"],"names":["_ref","children","className","_jsx","concat","decks","userReviews","searchTerm","setSearchTerm","useState","decksWithReviewCount","useMemo","lowercasedTerm","toLowerCase","now","Date","toISOString","filter","deck","is_published","title","includes","description","map","cardsInDeck","flashcards","cardIdsInDeck","Set","c","id","dueReviews","review","has","card_id","next_review_at","newCards","card","some","dueCount","length","_objectSpread","_jsxs","Card","SearchIcon","type","placeholder","value","onChange","e","target","Link","to","ClockIcon"],"sourceRoot":""}