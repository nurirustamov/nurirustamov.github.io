{"version":3,"file":"static/js/725.9056fbe5.chunk.js","mappings":"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","sources":["pages/QuizListPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { useHasAccess } from '../hooks/useHasAccess';\nimport { SearchIcon, PlusIcon, PlayIcon, EditIcon, TrashIcon, DuplicateIcon, ArchiveIcon, EyeIcon, EyeOffIcon, DotsVerticalIcon, LightbulbIcon, ClockIcon, RefreshIcon, LockClosedIcon, ClipboardCheckIcon, BookmarkIcon } from '../assets/icons';\n\nconst formatDate = (dateString) => {\n    if (!dateString) return null;\n    return new Date(dateString).toLocaleString('az-AZ', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\n};\n\nconst getQuizStatus = (quiz) => {\n    const now = new Date();\n    const startTime = quiz.start_time ? new Date(quiz.start_time) : null;\n    const endTime = quiz.end_time ? new Date(quiz.end_time) : null;\n\n    if (startTime && now < startTime) {\n        return { text: ` başlayır ${formatDate(startTime)}`, color: 'blue', active: false };\n    }\n    if (endTime && now > endTime) {\n        return { text: 'Bitib', color: 'red', active: false };\n    }\n    if (startTime && endTime) {\n        return { text: ` bitir ${formatDate(endTime)}`, color: 'green', active: true };\n    }\n    if (startTime) {\n        return { text: 'Aktiv', color: 'green', active: true };\n    }\n    return { text: 'Aktiv', color: 'green', active: true };\n};\n\nconst QuizCard = ({ quiz, onStartQuiz, onCloneQuiz, onEditQuiz, onArchiveRequest, onDeleteRequest, profile, onToggleStatus, onAssignRequest, toggleBookmark, isBookmarked, onSetVisibilityRequest }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const menuRef = useRef(null);\n    const hasAccess = useHasAccess(quiz, profile);\n    const isAdmin = profile?.role === 'admin';\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\n                setMenuOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [menuRef]);\n\n    const questions = quiz.questions || [];\n    const status = getQuizStatus(quiz);\n    const isSaved = isBookmarked(quiz.id, 'quiz');\n    const isEffectivelyPublished = quiz.is_published && hasAccess;\n\n    return (\n        <div className=\"relative group transition-transform duration-200 hover:-translate-y-1\">\n            <Card className={`flex flex-col group-hover:shadow-orange-200 transition-shadow duration-200 ${quiz.isArchived || !isEffectivelyPublished ? 'bg-gray-100' : ''}`}>\n                <div className=\"flex-grow\">\n                    <div className=\"flex flex-col sm:flex-row justify-between items-start mb-2\">\n                        <h2 className=\"text-xl font-bold text-gray-800 flex-1 pr-2 mb-2 sm:mb-0\">{quiz.title}</h2>\n                        <div className=\"flex flex-col items-end gap-1 flex-shrink-0\">\n                            <div className=\"flex items-center gap-2\">\n                                {quiz.isArchived ? (\n                                    <span className=\"text-xs font-semibold uppercase tracking-wider text-gray-600 bg-gray-200 px-2 py-1 rounded-full whitespace-nowrap\">ARXİVDƏ</span>\n                                ) : (\n                                    <>\n                                        {!isEffectivelyPublished && (\n                                            <span className=\"text-xs font-semibold uppercase tracking-wider text-yellow-800 bg-yellow-200 px-2 py-1 rounded-full whitespace-nowrap\">\n                                                {quiz.visibility === 'restricted' ? 'Məhdud' : 'Qaralama'}\n                                            </span>\n                                        )}\n                                        <span className=\"text-xs font-semibold uppercase tracking-wider text-orange-600 bg-orange-100 px-2 py-1 rounded-full whitespace-nowrap\">{quiz.category || 'Kateqoriyasız'}</span>\n                                    </>\n                                )}\n                                {isAdmin && (\n                                    <span className={`text-xs font-semibold uppercase tracking-wider px-2 py-1 rounded-full whitespace-nowrap ${quiz.visibility === 'public' ? 'bg-blue-100 text-blue-800' : 'bg-purple-100 text-purple-800'}`}>\n                                        {quiz.visibility === 'public' ? 'Açıq' : 'Məhdud'}\n                                    </span>\n                                )}\n                            </div>\n                            <button onClick={(e) => { e.stopPropagation(); toggleBookmark(quiz.id, 'quiz'); }} className=\"p-1 rounded-full hover:bg-orange-100 text-orange-500\" title={isSaved ? \"Əlfəcini sil\" : \"Əlfəcinlərə əlavə et\"}>\n                                <BookmarkIcon filled={isSaved} />\n                            </button>\n                        </div>\n                    </div>\n                    <p className=\"text-gray-600 mb-4 h-12 overflow-hidden text-sm\">{quiz.description}</p>\n                    <div className=\"flex justify-between items-center text-sm text-gray-500 mb-4\">\n                        <span>{questions.length} sual</span>\n                        <div className=\"flex items-center gap-3\">\n                            {quiz.passcode && (\n                                <span className=\"flex items-center gap-1 font-medium text-gray-600\" title=\"Giriş kodu tələb olunur\">\n                                    <LockClosedIcon className=\"h-4 w-4\" />\n                                </span>\n                            )}\n                            {quiz.attempt_limit > 0 && (\n                                <span className=\"flex items-center gap-1 font-medium text-purple-600\" title={`Maksimum ${quiz.attempt_limit} cəhd`}>\n                                    <RefreshIcon className=\"h-4 w-4\" />\n                                    {quiz.attempt_limit} cəhd\n                                </span>\n                            )}\n                            <span className={`flex items-center gap-1 font-medium text-${status.color}-600`}>\n                                <ClockIcon className=\"h-4 w-4\" />\n                                {status.text}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-stretch gap-2 mt-auto\">\n                    <Button onClick={() => onStartQuiz(quiz.id)} className=\"flex-1\" disabled={questions.length === 0 || quiz.isArchived || !status.active || !isEffectivelyPublished}><PlayIcon /> <span className=\"hidden sm:inline ml-1\">Başla</span></Button>\n                    {isAdmin && (\n                        <div className=\"relative\" ref={menuRef}>\n                            <Button onClick={() => setMenuOpen(!menuOpen)} variant=\"secondary\" className=\"h-full\"><DotsVerticalIcon /></Button>\n                            {menuOpen && (\n                                <div className=\"absolute right-0 bottom-full mb-2 w-52 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n                                    <button onClick={() => { onSetVisibilityRequest(quiz.id, quiz.title, 'quiz', quiz.visibility); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><LockClosedIcon /> <span className=\"ml-2\">Girişi tənzimlə</span></button>\n                                    <button onClick={() => { onAssignRequest(quiz.id, quiz.title, 'quiz'); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ClipboardCheckIcon /> <span className=\"ml-2\">Təyin et</span></button>\n                                    <button onClick={() => { onToggleStatus(quiz.id, !quiz.is_published); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\">\n                                        {quiz.is_published ? <EyeOffIcon /> : <EyeIcon />}\n                                        <span className=\"ml-2\">{quiz.is_published ? 'Qaralamaya sal' : 'Dərc et'}</span>\n                                    </button>\n                                    <div className=\"border-t border-gray-100 my-1\"></div>\n                                    <button onClick={() => { onCloneQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><DuplicateIcon /> <span className=\"ml-2\">Kopyala</span></button>\n                                    <button onClick={() => { onEditQuiz(quiz.id); setMenuOpen(false); }} disabled={quiz.isArchived} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center disabled:opacity-50\"><EditIcon /> <span className=\"ml-2\">Redaktə et</span></button>\n                                    <button onClick={() => { onArchiveRequest(quiz.id, !quiz.isArchived); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center\"><ArchiveIcon /> <span className=\"ml-2\">{quiz.isArchived ? 'Arxivdən çıxar' : 'Arxivə sal'}</span></button>\n                                    <div className=\"border-t border-gray-100 my-1\"></div>\n                                    <button onClick={() => { onDeleteRequest(quiz.id); setMenuOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center\"><TrashIcon /> <span className=\"ml-2\">Sil</span></button>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nconst QuizListPage = ({ quizzes, onStartQuiz, onAddNewQuiz, onEditQuiz, onDeleteRequest, onCloneQuiz, onArchiveRequest, onStartSmartPractice, profile, onToggleStatus, onAssignRequest, toggleBookmark, isBookmarked, onSetVisibilityRequest }) => {\n    const isAdmin = profile?.role === 'admin';\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('date_desc');\n    const [selectedCategory, setSelectedCategory] = useState('all');\n    const [viewMode, setViewMode] = useState('published'); // published, drafts, archived\n\n    const categories = useMemo(() => {\n        const activeQuizzes = quizzes.filter(q => !q.isArchived);\n        return ['all', ...new Set(activeQuizzes.map(q => q.category || 'Kateqoriyasız'))];\n    }, [quizzes]);\n\n    const sortedAndFilteredQuizzes = useMemo(() => {\n        const term = searchTerm.toLowerCase();\n\n        return quizzes\n            .filter(quiz => {\n                // Admin view filtering\n                if (isAdmin) {\n                    if (viewMode === 'published' && (quiz.isArchived || !quiz.is_published)) return false;\n                    if (viewMode === 'drafts' && (quiz.isArchived || quiz.is_published)) return false;\n                    if (viewMode === 'archived' && !quiz.isArchived) return false;\n                } else {\n                    // Regular user view: only published and not archived\n                    if (!quiz.is_published || quiz.isArchived) return false;\n                }\n\n                // Common filters\n                if (selectedCategory !== 'all' && (quiz.category || 'Kateqoriyasız') !== selectedCategory) return false;\n                if (term && !quiz.title.toLowerCase().includes(term) && !(quiz.description && quiz.description.toLowerCase().includes(term))) return false;\n\n                return true;\n            })\n            .sort((a, b) => {\n                switch (sortBy) {\n                    case 'title_asc': return a.title.localeCompare(b.title);\n                    case 'title_desc': return b.title.localeCompare(a.title);\n                    case 'questions_asc': return (a.questions || []).length - (b.questions || []).length;\n                    case 'questions_desc': return (b.questions || []).length - (a.questions || []).length;\n                    case 'date_asc': return a.id - b.id;\n                    case 'date_desc':\n                    default: return b.id - a.id;\n                }\n            });\n    }, [quizzes, searchTerm, sortBy, selectedCategory, viewMode, isAdmin]);\n\n    const AdminTabs = () => (\n        <div className=\"border-b border-gray-200 mb-6\">\n            <nav className=\"-mb-px flex space-x-6\" aria-label=\"Tabs\">\n                <button onClick={() => setViewMode('published')} className={`${viewMode === 'published' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Dərc Edilmiş</button>\n                <button onClick={() => setViewMode('drafts')} className={`${viewMode === 'drafts' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Qaralamalar</button>\n                <button onClick={() => setViewMode('archived')} className={`${viewMode === 'archived' ? 'border-orange-500 text-orange-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'} whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm`}>Arxiv</button>\n            </nav>\n        </div>\n    );\n\n    return (\n        <div className=\"animate-fade-in\">\n            <Card className=\"mb-6 !p-4 bg-gray-50 border border-gray-200\">\n                <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n                    <div className=\"relative flex-grow w-full\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\"><SearchIcon /></span>\n                        <input type=\"text\" placeholder=\"Adına və ya təsvirinə görə axtarış...\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\" />\n                    </div>\n                    <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full md:w-auto\">\n                        {viewMode !== 'archived' && (\n                            <select value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                                {categories.map(cat => (\n                                    <option key={cat} value={cat}>{cat === 'all' ? 'Bütün kateqoriyalar' : cat}</option>\n                                ))}\n                            </select>\n                        )}\n                        <select value={sortBy} onChange={e => setSortBy(e.target.value)} className=\"py-2 px-4 border-2 border-gray-200 rounded-lg bg-white w-full sm:w-auto\">\n                            <option value=\"date_desc\">Ən yenilər</option>\n                            <option value=\"date_asc\">Ən köhnələr</option>\n                            <option value=\"title_asc\">Ad (A-Z)</option>\n                            <option value=\"title_desc\">Ad (Z-A)</option>\n                            <option value=\"questions_desc\">Çox sual</option>\n                            <option value=\"questions_asc\">Az sual</option>\n                        </select>\n                        <Button onClick={onStartSmartPractice} variant=\"primary\" className=\"w-full sm:w-auto\"><LightbulbIcon /><span className=\"hidden sm:inline ml-2\">Ağıllı Məşq</span></Button>\n                        {isAdmin && <Button onClick={onAddNewQuiz} className=\"w-full sm:w-auto\"><PlusIcon /><span className=\"sm:hidden md:inline\">Test yarat</span></Button>}\n                    </div>\n                </div>\n            </Card>\n\n            {isAdmin && <AdminTabs />}\n\n            {sortedAndFilteredQuizzes.length === 0 ? (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">\n                        {viewMode === 'archived' && 'Arxivdə test tapılmadı.'}\n                        {viewMode === 'drafts' && 'Qaralama test tapılmadı.'}\n                        {viewMode === 'published' && 'Dərc edilmiş test tapılmadı. Filtləri dəyişməyə və ya yeni test yaratmağa cəhd edin!'}\n                    </p>\n                </Card>\n            ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {sortedAndFilteredQuizzes.map(quiz => (\n                        <QuizCard\n                            key={quiz.id}\n                            quiz={quiz}\n                            onStartQuiz={onStartQuiz}\n                            onCloneQuiz={onCloneQuiz}\n                            onEditQuiz={onEditQuiz}\n                            onArchiveRequest={onArchiveRequest}\n                            onDeleteRequest={onDeleteRequest}\n                            profile={profile}\n                            onToggleStatus={onToggleStatus}\n                            onAssignRequest={onAssignRequest}\n                            toggleBookmark={toggleBookmark}\n                            onSetVisibilityRequest={onSetVisibilityRequest}\n                            isBookmarked={isBookmarked}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default QuizListPage;","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["formatDate","dateString","Date","toLocaleString","day","month","year","hour","minute","QuizCard","_ref","quiz","onStartQuiz","onCloneQuiz","onEditQuiz","onArchiveRequest","onDeleteRequest","profile","onToggleStatus","onAssignRequest","toggleBookmark","isBookmarked","onSetVisibilityRequest","menuOpen","setMenuOpen","useState","menuRef","useRef","hasAccess","useHasAccess","isAdmin","role","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","questions","status","now","startTime","start_time","endTime","end_time","text","concat","color","active","getQuizStatus","isSaved","id","isEffectivelyPublished","is_published","_jsx","className","children","_jsxs","Card","isArchived","title","_Fragment","visibility","category","onClick","e","stopPropagation","BookmarkIcon","filled","description","length","passcode","LockClosedIcon","attempt_limit","RefreshIcon","ClockIcon","Button","disabled","PlayIcon","ref","variant","DotsVerticalIcon","ClipboardCheckIcon","EyeOffIcon","EyeIcon","DuplicateIcon","EditIcon","ArchiveIcon","TrashIcon","_ref2","quizzes","onAddNewQuiz","onStartSmartPractice","searchTerm","setSearchTerm","sortBy","setSortBy","selectedCategory","setSelectedCategory","viewMode","setViewMode","categories","useMemo","activeQuizzes","filter","q","Set","map","sortedAndFilteredQuizzes","term","toLowerCase","includes","sort","a","b","localeCompare","AdminTabs","SearchIcon","type","placeholder","value","onChange","cat","LightbulbIcon","PlusIcon"],"sourceRoot":""}