{"version":3,"file":"static/js/498.f609f751.chunk.js","mappings":"yIAEA,MAIA,EAJaA,IAAA,IAAC,SAAEC,EAAQ,UAAEC,EAAY,IAAIF,EAAA,OACtCG,EAAAA,EAAAA,KAAA,OAAKD,UAAS,iEAAAE,OAAmEF,GAAYD,SAAEA,I,wHCGnG,MA8FA,EA9FoCD,IAAsC,IAArC,MAAEK,EAAK,YAAEC,EAAW,QAAEC,GAASP,EAChE,MAAOQ,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IAEvCC,GAAuBC,EAAAA,EAAAA,SAAQ,KACjC,MAAMC,EAAiBL,EAAWM,cAC5BC,GAAM,IAAIC,MAAOC,cAEvB,OAAOZ,EACFa,OAAOC,GAAQA,EAAKC,cACpBF,OAAOC,GACJA,EAAKE,MAAMP,cAAcQ,SAAST,IACjCM,EAAKI,aAAeJ,EAAKI,YAAYT,cAAcQ,SAAST,IAEhEW,IAAIL,IACD,MAAMM,EAAcN,EAAKO,YAAc,GACjCC,EAAgB,IAAIC,IAAIH,EAAYD,IAAIK,GAAKA,EAAEC,KAE/CC,GAAczB,GAAe,IAAIY,OAAOc,GAC1CL,EAAcM,IAAID,EAAOE,UAAYF,EAAOG,gBAAkBpB,GAG5DqB,EAAWX,EAAYP,OAAOmB,KAC9B/B,GAAe,IAAIgC,KAAKN,GAAUA,EAAOE,UAAYG,EAAKP,KAG1DS,EAAWR,EAAWS,OAASJ,EAASI,OAE9C,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYtB,GAAI,IAAEoB,gBAE3B,CAAClC,EAAOC,EAAaE,IAElBkC,EAAWC,IAAe,IAAd,KAAExB,GAAMwB,EACtB,MAAMC,GAAYC,EAAAA,EAAAA,GAAa1B,EAAMZ,GAC/BuC,EAAcF,EAEdG,GACFC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAC/C,UAAS,6GAAAE,OAAgH0C,EAA8B,GAAhB,eAAqB7C,SAAA,EAC9J+C,EAAAA,EAAAA,MAAA,OAAK9C,UAAU,YAAWD,SAAA,EACtB+C,EAAAA,EAAAA,MAAA,OAAK9C,UAAU,mCAAkCD,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,MAAID,UAAU,mDAAkDD,SAAEkB,EAAKE,SACrEuB,IAAazC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAc,CAAChD,UAAU,wBAAwBmB,MAAM,+BAE3ElB,EAAAA,EAAAA,KAAA,KAAGD,UAAU,wBAAuBD,SAAEkB,EAAKI,kBAE/CyB,EAAAA,EAAAA,MAAA,OAAK9C,UAAU,6FAA4FD,SAAA,EACvG+C,EAAAA,EAAAA,MAAA,QAAA/C,SAAA,EAAQkB,EAAKO,YAAc,IAAIc,OAAO,WACrCI,GAAazB,EAAKoB,SAAW,GAC1BS,EAAAA,EAAAA,MAAA,QAAM9C,UAAU,oDAAmDD,SAAA,EAC/DE,EAAAA,EAAAA,KAACgD,EAAAA,GAAS,IAAG,IAAEhC,EAAKoB,SAAS,uBAEjCK,GACAzC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,yCAAwCD,SAAC,oBACzD,WAKhB,OAAI6C,GACO3C,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACC,GAAE,UAAAjD,OAAYe,EAAKW,GAAE,UAAU5B,UAAU,eAAcD,SAAE8C,KAGnE5C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,4BAA2BD,SAAE8C,KAGvD,OACIC,EAAAA,EAAAA,MAAA,OAAK9C,UAAU,kBAAiBD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oDAAmDD,SAAC,0BAClEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMD,UACjBE,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAAC/C,UAAU,yCAAwCD,UACpD+C,EAAAA,EAAAA,MAAA,OAAK9C,UAAU,4BAA2BD,SAAA,EACtCE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iEAAgED,UAACE,EAAAA,EAAAA,KAACmD,EAAAA,GAAU,OAC5FnD,EAAAA,EAAAA,KAAA,SACIoD,KAAK,OACLC,YAAY,qFACZC,MAAOjD,EACPkD,SAAUC,GAAKlD,EAAckD,EAAEC,OAAOH,OACtCvD,UAAU,+HAKzBS,EAAqB6B,OAAS,GAC3BrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uDAAsDD,SAChEU,EAAqBa,IAAIL,IAAQhB,EAAAA,EAAAA,KAACuC,EAAQ,CAAevB,KAAMA,GAAfA,EAAKW,QAG1D3B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAAC/C,UAAU,oBAAmBD,UAC/BE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,gBAAeD,SAAEO,EAAa,qFAAiD,oE","sources":["components/ui/Card.js","pages/PublicFlashcardDeckListPage.js"],"sourcesContent":["import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;","import React, { useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport { SearchIcon, ClockIcon, LockClosedIcon } from '../assets/icons';\nimport { useHasAccess } from '../hooks/useHasAccess';\n\nconst PublicFlashcardDeckListPage = ({ decks, userReviews, profile }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const decksWithReviewCount = useMemo(() => {\n        const lowercasedTerm = searchTerm.toLowerCase();\n        const now = new Date().toISOString();\n\n        return decks\n            .filter(deck => deck.is_published)\n            .filter(deck =>\n                deck.title.toLowerCase().includes(lowercasedTerm) ||\n                (deck.description && deck.description.toLowerCase().includes(lowercasedTerm))\n            )\n            .map(deck => {\n                const cardsInDeck = deck.flashcards || [];\n                const cardIdsInDeck = new Set(cardsInDeck.map(c => c.id));\n                \n                const dueReviews = (userReviews || []).filter(review => \n                    cardIdsInDeck.has(review.card_id) && review.next_review_at <= now\n                );\n\n                const newCards = cardsInDeck.filter(card => \n                    !(userReviews || []).some(review => review.card_id === card.id)\n                );\n\n                const dueCount = dueReviews.length + newCards.length;\n\n                return { ...deck, dueCount };\n            });\n    }, [decks, userReviews, searchTerm]);\n\n    const DeckCard = ({ deck }) => {\n        const hasAccess = useHasAccess(deck, profile);\n        const isClickable = hasAccess;\n\n        const cardContent = (\n            <Card className={`group-hover:shadow-orange-200 hover:-translate-y-1 transition-transform duration-200 h-full flex flex-col ${!isClickable ? 'bg-gray-100' : ''}`}>\n                <div className=\"flex-grow\">\n                    <div className=\"flex justify-between items-start\">\n                        <h2 className=\"text-xl font-bold text-gray-800 mb-2 flex-1 pr-2\">{deck.title}</h2>\n                        {!hasAccess && <LockClosedIcon className=\"w-6 h-6 text-gray-400\" title=\"Məhdud giriş\" />}\n                    </div>\n                    <p className=\"text-sm text-gray-600\">{deck.description}</p>\n                </div>\n                <div className=\"text-sm text-gray-500 mt-4 pt-4 border-t border-gray-200 flex justify-between items-center\">\n                    <span>{(deck.flashcards || []).length} kart</span>\n                    {hasAccess && deck.dueCount > 0 ? (\n                        <span className=\"flex items-center gap-1 font-bold text-orange-600\">\n                            <ClockIcon /> {deck.dueCount} təkrarlamaq\n                        </span>\n                    ) : hasAccess ? (\n                        <span className=\"flex items-center gap-1 text-green-600\">Tamamlanıb</span>\n                    ) : null}\n                </div>\n            </Card>\n        );\n\n        if (isClickable) {\n            return <Link to={`/decks/${deck.id}/study`} className=\"block h-full\">{cardContent}</Link>;\n        }\n\n        return <div className=\"cursor-not-allowed h-full\">{cardContent}</div>;\n    }\n\n    return (\n        <div className=\"animate-fade-in\">\n            <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-4\">Kart Kolodaları</h1>\n            <div className=\"mb-6\">\n                <Card className=\"!p-4 bg-gray-50 border border-gray-200\">\n                    <div className=\"relative flex-grow w-full\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\"><SearchIcon /></span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Koloda adına və ya təsvirinə görə axtarış...\"\n                            value={searchTerm}\n                            onChange={e => setSearchTerm(e.target.value)}\n                            className=\"pl-10 pr-4 py-2 border-2 border-gray-200 rounded-lg w-full focus:ring-orange-400 focus:border-orange-400 transition\"\n                        />\n                    </div>\n                </Card>\n            </div>\n            {decksWithReviewCount.length > 0 ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {decksWithReviewCount.map(deck => <DeckCard key={deck.id} deck={deck} />)}\n                </div>\n            ) : (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">{searchTerm ? 'Axtarışınıza uyğun heç bir koloda tapılmadı.' : 'Hələ heç bir koloda dərc edilməyib.'}</p>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default PublicFlashcardDeckListPage;\n"],"names":["_ref","children","className","_jsx","concat","decks","userReviews","profile","searchTerm","setSearchTerm","useState","decksWithReviewCount","useMemo","lowercasedTerm","toLowerCase","now","Date","toISOString","filter","deck","is_published","title","includes","description","map","cardsInDeck","flashcards","cardIdsInDeck","Set","c","id","dueReviews","review","has","card_id","next_review_at","newCards","card","some","dueCount","length","_objectSpread","DeckCard","_ref2","hasAccess","useHasAccess","isClickable","cardContent","_jsxs","Card","LockClosedIcon","ClockIcon","Link","to","SearchIcon","type","placeholder","value","onChange","e","target"],"sourceRoot":""}