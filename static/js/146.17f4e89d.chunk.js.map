{"version":3,"file":"static/js/146.17f4e89d.chunk.js","mappings":"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","sources":["pages/AuthPage.js","components/ui/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport Button from '../components/ui/Button';\nimport Card from '../components/ui/Card';\n\nconst AuthPage = ({ showToast }) => {\n    const [loading, setLoading] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [view, setView] = useState('login'); // 'login', 'register', 'forgot_password'\n\n    const handleAuth = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n\n        if (view === 'login') {\n            const { error } = await supabase.auth.signInWithPassword({ email, password });\n            if (error) showToast(error.error_description || error.message);\n        } else if (view === 'register') {\n            // Теперь мы просто создаем пользователя и передаем имя/фамилию в метаданные.\n            // Триггер в базе данных сделает все остальное.\n            const { error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        first_name: firstName,\n                        last_name: lastName,\n                    }\n                }\n            });\n\n            if (error) {\n                showToast(error.error_description || error.message);\n            } else {\n                showToast('Qeydiyyat uğurludur! Zəhmət olmasa, emailinizi təsdiqləyin.');\n                setView('login');\n            }\n        }\n        setLoading(false);\n    };\n\n    const handlePasswordReset = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const { error } = await supabase.auth.resetPasswordForEmail(email, {\n            redirectTo: `${window.location.origin}/`,\n        });\n        if (error) {\n            showToast(error.error_description || error.message);\n        } else {\n            showToast('Parolu sıfırlamaq üçün link emailinizə göndərildi!');\n            setView('login');\n        }\n        setLoading(false);\n    };\n\n    const renderAuthForm = () => {\n        if (view === 'forgot_password') {\n            return (\n                <form className=\"space-y-6\" onSubmit={handlePasswordReset}>\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" placeholder=\"email@example.com\" />\n                    </div>\n                    <div>\n                        <Button type=\"submit\" className=\"w-full\" disabled={loading}>{loading ? 'Göndərilir...' : 'Sıfırlama Linki Göndər'}</Button>\n                    </div>\n                </form>\n            );\n        }\n\n        return (\n            <form className=\"space-y-6\" onSubmit={handleAuth}>\n                {view === 'register' && (\n                    <>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Ad</label>\n                            <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" placeholder=\"Adınızı daxil edin\" />\n                        </div>\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700\">Soyad</label>\n                            <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" placeholder=\"Soyadınızı daxil edin\" />\n                        </div>\n                    </>\n                )}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" placeholder=\"email@example.com\" />\n                </div>\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Parol</label>\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" placeholder=\"••••••••\" />\n                </div>\n                <div>\n                    <Button type=\"submit\" className=\"w-full\" disabled={loading}>{loading ? 'Yüklənir...' : (view === 'login' ? 'Daxil Ol' : 'Qeydiyyatdan Keç')}</Button>\n                </div>\n            </form>\n        );\n    };\n\n    const getTitle = () => {\n        if (view === 'login') return 'Daxil Ol';\n        if (view === 'register') return 'Qeydiyyat';\n        return 'Parolu Sıfırla';\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-orange-50\">\n            <Card className=\"w-full max-w-md p-8 space-y-6\">\n                <div className=\"text-center\">\n                    <h1 className=\"text-3xl font-bold text-gray-800\">{getTitle()}</h1>\n                </div>\n                {renderAuthForm()}\n                <div className=\"text-center text-sm\">\n                    {view === 'login' && <button onClick={() => setView('forgot_password')} className=\"font-medium text-orange-600 hover:underline\">Parolu unutmusunuz?</button>}\n                    {view === 'forgot_password' && <button onClick={() => setView('login')} className=\"font-medium text-orange-600 hover:underline\">Giriş səhifəsinə qayıt</button>}\n                </div>\n                <div className=\"text-center\">\n                    <button onClick={() => setView(view === 'login' ? 'register' : 'login')} className=\"text-sm text-orange-600 hover:underline\">\n                        {view === 'login' ? 'Hesabınız yoxdur? Qeydiyyatdan keçin' : 'Artıq hesabınız var? Daxil olun'}\n                    </button>\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nexport default AuthPage;\n","import React from 'react';\n\nconst Card = ({ children, className = '' }) => (\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\n);\n\nexport default Card;"],"names":["_ref","showToast","loading","setLoading","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","view","setView","handleAuth","async","event","preventDefault","error","supabase","auth","signInWithPassword","error_description","message","signUp","options","data","first_name","last_name","handlePasswordReset","e","resetPasswordForEmail","redirectTo","concat","window","location","origin","_jsx","className","children","_jsxs","Card","onSubmit","type","value","onChange","target","required","placeholder","Button","disabled","_Fragment","onClick"],"sourceRoot":""}