{"version":3,"file":"static/js/183.010a7512.chunk.js","mappings":"yIAEA,MAIA,EAJaA,IAAA,IAAC,SAAEC,EAAQ,UAAEC,EAAY,IAAIF,EAAA,OACtCG,EAAAA,EAAAA,KAAA,OAAKD,UAAS,iEAAAE,OAAmEF,GAAYD,SAAEA,I,wHCGnG,MAAMI,EAAmBL,IAA2C,IAA1C,KAAEM,EAAI,KAAEC,EAAI,YAAEC,EAAW,QAAEC,GAAST,EAC1D,MAAMU,GAAYC,EAAAA,EAAAA,GAAaL,EAAMG,GAC/BG,EAAcF,EACdG,EAAQ,CACVC,SAASX,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACb,UAAU,4BACjCc,SAASb,EAAAA,EAAAA,KAACc,EAAAA,GAAc,CAACf,UAAU,0BACnCgB,UAAUf,EAAAA,EAAAA,KAACgB,EAAAA,GAAgB,CAACjB,UAAU,2BACtCkB,OAAOjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAiB,CAACnB,UAAU,6BAElCoB,EAAQ,CACVN,QAAQ,YAADZ,OAAcE,EAAKiB,IAC1BL,SAAS,aAADd,OAAeE,EAAKiB,IAC5BH,MAAM,UAADhB,OAAYE,EAAKiB,KASpBC,GACFrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACvB,UAAS,mDAAAE,OAAqDQ,EAAc,+CAAiD,eAAgBX,UAC/IyB,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,0BAAyBD,SAAA,EACpCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,SAAEY,EAAMN,MACtCmB,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,YAAWD,SAAA,EACtBE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,0BAAyBD,SAAEK,EAAKqB,SAC7CxB,EAAAA,EAAAA,KAAA,KAAGD,UAAU,qCAAoCD,SAAEK,EAAKsB,kBAE5DF,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,kCAAiCD,SAAA,EAC1CS,IAAaP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAc,CAAC3B,UAAU,2BACzCC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,oHAAmHD,SAjBjI,CACda,QAAS,OACTE,QAAS,OACTE,SAAU,mBACVE,MAAO,oBAcoBb,aAO/B,MAAa,YAATA,GACOJ,EAAAA,EAAAA,KAAA,UAAQ2B,QAASA,IAAMlB,GAAeJ,EAAYF,EAAKiB,IAAKrB,UAAS,gBAAAE,QAAmBQ,GAAe,sBAAuBX,SAAEuB,IAGvIZ,GACOT,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAIV,EAAMf,GAAOL,UAAU,QAAOD,SAAEuB,KAG9CrB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,SAAEuB,KAuChD,EApCyBS,IAA8C,IAA7C,cAAEC,EAAa,YAAE1B,EAAW,QAAEC,GAASwB,EAC7D,MAAOE,IAAgBC,EAAAA,EAAAA,MACjBC,EAAQF,EAAaG,IAAI,KAEzBC,GAAaC,EAAAA,EAAAA,SAAQ,IAGhB,IACAN,EAAcpB,QAAQ2B,IAAInC,IAAIoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUpC,GAAI,IAAEqC,WAAY,gBAC1DT,EAAclB,QAAQyB,IAAInC,IAAIoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUpC,GAAI,IAAEqC,WAAY,gBAC1DT,EAAchB,SAASuB,IAAInC,IAAIoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUpC,GAAI,IAAEqC,WAAY,iBAC3DT,EAAcd,MAAMqB,IAAInC,IAAIoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUpC,GAAI,IAAEqC,WAAY,YAEhE,CAACT,IAEJ,OACIR,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,4BAA2BD,SAAA,EACtCyB,EAAAA,EAAAA,MAAA,MAAIxB,UAAU,mCAAkCD,SAAA,CAAC,iDACzByB,EAAAA,EAAAA,MAAA,QAAMxB,UAAU,kBAAiBD,SAAA,CAAC,IAAEoC,EAAM,UAGjEE,EAAWK,OAAS,GACjBzC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,SACrBsC,EAAWE,IAAInC,IACZH,EAAAA,EAAAA,KAACE,EAAgB,CAAuCC,KAAMA,EAAMC,KAAMD,EAAKqC,WAAYnC,YAAaA,EAAaC,QAASA,GAAQ,GAAAL,OAA5GE,EAAKqC,WAAU,KAAAvC,OAAIE,EAAKiB,SAI1DpB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACvB,UAAU,oBAAmBD,UAC/BE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,gBAAeD,SAAC,sG","sources":["components/ui/Card.js","pages/GlobalSearchPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;","import React, { useMemo } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport { BookOpenIcon, CollectionIcon, DocumentTextIcon, PaperAirplaneIcon, LockClosedIcon } from '../assets/icons';\nimport { useHasAccess } from '../hooks/useHasAccess';\n\nconst SearchResultItem = ({ item, type, onStartQuiz, profile }) => {\n    const hasAccess = useHasAccess(item, profile);\n    const isClickable = hasAccess;\n    const icons = {\n        quizzes: <BookOpenIcon className=\"w-6 h-6 text-purple-500\" />,\n        courses: <CollectionIcon className=\"w-6 h-6 text-blue-500\" />,\n        articles: <DocumentTextIcon className=\"w-6 h-6 text-green-500\" />,\n        paths: <PaperAirplaneIcon className=\"w-6 h-6 text-orange-500\" />,\n    };\n    const links = {\n        courses: `/courses/${item.id}`,\n        articles: `/articles/${item.id}`,\n        paths: `/paths/${item.id}`,\n    };\n    const typeNames = {\n        quizzes: 'Test',\n        courses: 'Kurs',\n        articles: 'Məqalə',\n        paths: 'Tədris Yolu',\n    };\n\n    const content = (\n        <Card className={`transition-shadow duration-200 w-full text-left ${isClickable ? 'hover:shadow-orange-200 hover:-translate-y-1' : 'bg-gray-100'}`}>\n            <div className=\"flex items-center gap-4\">\n                <div className=\"flex-shrink-0\">{icons[type]}</div>\n                <div className=\"flex-grow\">\n                    <p className=\"font-bold text-gray-800\">{item.title}</p>\n                    <p className=\"text-sm text-gray-500 line-clamp-2\">{item.description}</p>\n                </div>\n                <div className=\"flex items-center gap-2 ml-auto\">\n                    {!hasAccess && <LockClosedIcon className=\"w-5 h-5 text-gray-400\" />}\n                    <span className=\"text-xs font-semibold uppercase tracking-wider text-gray-500 bg-gray-200 px-2 py-1 rounded-full whitespace-nowrap\">\n                        {typeNames[type]}\n                    </span>\n                </div>\n            </div>\n        </Card>\n    );\n\n    if (type === 'quizzes') {\n        return <button onClick={() => isClickable && onStartQuiz(item.id)} className={`block w-full ${!isClickable && 'cursor-not-allowed'}`}>{content}</button>;\n    }\n\n    if (isClickable) {\n        return <Link to={links[type]} className=\"block\">{content}</Link>;\n    }\n\n    return <div className=\"cursor-not-allowed\">{content}</div>;\n};\n\nconst GlobalSearchPage = ({ searchResults, onStartQuiz, profile }) => {\n    const [searchParams] = useSearchParams();\n    const query = searchParams.get('q');\n\n    const allResults = useMemo(() => {\n        // Filtering is now done in the parent wrapper, but we could also do it here if needed.\n        // For now, we just structure the data.\n        return [\n            ...searchResults.quizzes.map(item => ({ ...item, resultType: 'quizzes' })),\n            ...searchResults.courses.map(item => ({ ...item, resultType: 'courses' })),\n            ...searchResults.articles.map(item => ({ ...item, resultType: 'articles' })),\n            ...searchResults.paths.map(item => ({ ...item, resultType: 'paths' })),\n        ];\n    }, [searchResults]);\n\n    return (\n        <div className=\"animate-fade-in space-y-6\">\n            <h1 className=\"text-3xl font-bold text-gray-800\">\n                Axtarış nəticələri: <span className=\"text-orange-600\">\"{query}\"</span>\n            </h1>\n\n            {allResults.length > 0 ? (\n                <div className=\"space-y-4\">\n                    {allResults.map(item => (\n                        <SearchResultItem key={`${item.resultType}-${item.id}`} item={item} type={item.resultType} onStartQuiz={onStartQuiz} profile={profile} />\n                    ))}\n                </div>\n            ) : (\n                <Card className=\"text-center py-12\">\n                    <p className=\"text-gray-500\">Axtarışınıza uyğun heç bir nəticə tapılmadı.</p>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default GlobalSearchPage;"],"names":["_ref","children","className","_jsx","concat","SearchResultItem","item","type","onStartQuiz","profile","hasAccess","useHasAccess","isClickable","icons","quizzes","BookOpenIcon","courses","CollectionIcon","articles","DocumentTextIcon","paths","PaperAirplaneIcon","links","id","content","Card","_jsxs","title","description","LockClosedIcon","onClick","Link","to","_ref2","searchResults","searchParams","useSearchParams","query","get","allResults","useMemo","map","_objectSpread","resultType","length"],"sourceRoot":""}