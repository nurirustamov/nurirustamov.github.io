{"version":3,"file":"static/js/645.56374a45.chunk.js","mappings":"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","sources":["components/ui/Card.js","pages/FlashcardStudyPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ children, className = '' }) => (\r\n    <div className={`bg-white rounded-xl shadow-lg p-6 transition-all duration-300 ${className}`}>{children}</div>\r\n);\r\n\r\nexport default Card;","import React, { useState, useMemo, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { ArrowLeftIcon, CheckCircleIcon } from '../assets/icons';\nimport { useHasAccess } from '../hooks/useHasAccess';\n\n// --- Animation Styles ---\nconst AnimationStyles = () => (\n    <style>{`\n        @keyframes fadeIn {\n            from { opacity: 0; transform: scale(0.95); }\n            to { opacity: 1; transform: scale(1); }\n        }\n        @keyframes slideOut {\n            from { opacity: 1; transform: translateX(0); }\n            to { opacity: 0; transform: translateX(-100%); }\n        }\n        @keyframes slideIn {\n            from { opacity: 0; transform: translateX(100%); }\n            to { opacity: 1; transform: translateX(0); }\n        }\n        .flashcard-enter { animation: slideIn 0.3s ease-out forwards; }\n        .flashcard-exit { animation: slideOut 0.3s ease-in forwards; }\n        .flashcard-reveal { animation: fadeIn 0.3s ease-in-out forwards; }\n    `}</style>\n);\n\n// --- SM-2 Algorithm ---\nconst calculateSpacedRepetition = (review, quality) => {\n    let { repetitions, ease_factor, interval } = review;\n    if (quality < 3) {\n        repetitions = 0;\n        interval = 1;\n    } else {\n        if (repetitions === 0) interval = 1;\n        else if (repetitions === 1) interval = 6;\n        else interval = Math.round(interval * ease_factor);\n        repetitions += 1;\n    }\n    ease_factor = ease_factor + (0.1 - (5 - quality) * (0.08 + (5 - quality) * 0.02));\n    if (ease_factor < 1.3) ease_factor = 1.3;\n    const next_review_at = new Date();\n    next_review_at.setDate(next_review_at.getDate() + interval);\n    return { ...review, repetitions, ease_factor: parseFloat(ease_factor.toFixed(2)), interval, next_review_at: next_review_at.toISOString() };\n};\n\n// --- Main Component ---\nconst FlashcardStudyPage = ({ decks, userReviews, onUpdateReview, profile, showToast }) => {\n    const { deckId } = useParams();\n    const navigate = useNavigate();\n    const [studySession, setStudySession] = useState({ cards: [], currentCardIndex: 0 });\n    const [cardToRender, setCardToRender] = useState(null);\n    const [isFlipped, setIsFlipped] = useState(false);\n    const [animationClass, setAnimationClass] = useState('flashcard-enter');\n    const [isSessionLoading, setIsSessionLoading] = useState(true);\n\n    const deck = useMemo(() => decks.find(d => d.id === Number(deckId)), [decks, deckId]);\n    const hasAccess = useHasAccess(deck, profile);\n\n    useEffect(() => {\n        if (!deck) return;\n\n        if (!hasAccess) {\n            showToast('Bu kolodaya giriş üçün icazəniz yoxdur.');\n            navigate('/decks');\n            return;\n        }\n\n        const now = new Date().toISOString();\n        const allCards = deck.flashcards || [];\n        const dueReviews = (userReviews || []).filter(review => allCards.some(c => c.id === review.card_id) && review.next_review_at <= now);\n        const newCards = allCards.filter(card => !(userReviews || []).some(review => review.card_id === card.id));\n        const dueCardIds = new Set(dueReviews.map(r => r.card_id));\n        const dueCardsFromReviews = allCards.filter(c => dueCardIds.has(c.id));\n        const cardsToStudy = [...newCards, ...dueCardsFromReviews].sort(() => Math.random() - 0.5);\n\n        setStudySession({ cards: cardsToStudy, currentCardIndex: 0 });\n        if (cardsToStudy.length > 0) {\n            setCardToRender(cardsToStudy[0]);\n        }\n        setIsSessionLoading(false);\n    }, [deck, userReviews, hasAccess, navigate, showToast]);\n\n    const handleFlip = () => {\n        setIsFlipped(true);\n    };\n\n    const goToNextCard = () => {\n        setAnimationClass('flashcard-exit');\n        setTimeout(() => {\n            setStudySession(prev => {\n                const nextIndex = prev.currentCardIndex + 1;\n                if (prev.cards[nextIndex]) {\n                    setCardToRender(prev.cards[nextIndex]);\n                }\n                return { ...prev, currentCardIndex: nextIndex };\n            });\n            setIsFlipped(false);\n            setAnimationClass('flashcard-enter');\n        }, 300); // Match animation duration\n    };\n\n    const handleGrade = (quality) => {\n        const currentCardForGrading = studySession.cards[studySession.currentCardIndex];\n        const review = (userReviews || []).find(r => r.card_id === currentCardForGrading.id) || { card_id: currentCardForGrading.id, repetitions: 0, ease_factor: 2.5, interval: 0 };\n        const updatedReview = calculateSpacedRepetition(review, quality);\n        onUpdateReview(updatedReview);\n        goToNextCard();\n    };\n\n    if (isSessionLoading) return <Card className=\"text-center py-12\">Təkrar sessiyası hazırlanır...</Card>;\n    if (!deck) return <Card className=\"text-center py-12\">Koloda tapılmadı.</Card>;\n    if (!hasAccess) {\n        return <div className=\"text-center py-12\">Giriş yoxlanılır...</div>;\n    }\n\n    const isSessionDone = studySession.currentCardIndex >= studySession.cards.length;\n\n    if (isSessionDone) {\n        return (\n            <Card className=\"text-center py-12 animate-fade-in\">\n                <CheckCircleIcon className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\n                <h2 className=\"text-2xl font-bold text-gray-800\">Sessiya Tamamlandı!</h2>\n                <p className=\"text-gray-600 mt-2\">Bu gün üçün bütün təkrarları bitirdiniz. Afərin!</p>\n                <Link to=\"/decks\"><Button className=\"mt-6\"><ArrowLeftIcon /> Bütün kolodalara qayıt</Button></Link>\n            </Card>\n        );\n    }\n\n    const progressPercentage = (studySession.currentCardIndex / studySession.cards.length) * 100;\n\n    if (!cardToRender) {\n        return <Card className=\"text-center py-12\">Yüklənir...</Card>;\n    }\n\n    return (\n        <>\n            <AnimationStyles />\n            <div className=\"animate-fade-in max-w-2xl mx-auto\">\n                <div className=\"mb-4\">\n                    <Link to=\"/decks\"><Button variant=\"secondary\"><ArrowLeftIcon /> Kolodalara qayıt</Button></Link>\n                </div>\n                <Card>\n                    <div className=\"mb-4\">\n                        <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-sm font-semibold text-gray-600\">{deck.title}</span>\n                            <span className=\"text-sm font-semibold text-gray-600\">{studySession.currentCardIndex + 1} / {studySession.cards.length}</span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-2\"><div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: `${progressPercentage}%` }}></div></div>\n                    </div>\n\n                    <div className={`w-full h-64 rounded-lg flex items-center justify-center p-6 text-center ${animationClass}`}>\n                        {!isFlipped ? (\n                            <p className=\"text-xl font-semibold text-gray-800\">{cardToRender.front}</p>\n                        ) : (\n                            <p className=\"text-xl font-semibold text-gray-800\">{cardToRender.back}</p>\n                        )}\n                    </div>\n\n                    <div className=\"mt-6\">\n                        {!isFlipped ? (\n                            <Button onClick={handleFlip} className=\"w-full\">Cavabı Göstər</Button>\n                        ) : (\n                            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                                <Button onClick={() => handleGrade(0)} variant=\"danger\">Yenidən</Button>\n                                <Button onClick={() => handleGrade(2)} className=\"bg-yellow-500 hover:bg-yellow-600 text-white\">Çətin</Button>\n                                <Button onClick={() => handleGrade(4)} className=\"bg-green-500 hover:bg-green-600 text-white\">Yaxşı</Button>\n                                <Button onClick={() => handleGrade(5)} className=\"bg-blue-500 hover:bg-blue-600 text-white\">Asan</Button>\n                            </div>\n                        )}\n                    </div>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default FlashcardStudyPage;\n"],"names":["_ref","children","className","_jsx","concat","AnimationStyles","decks","userReviews","onUpdateReview","profile","showToast","deckId","useParams","navigate","useNavigate","studySession","setStudySession","useState","cards","currentCardIndex","cardToRender","setCardToRender","isFlipped","setIsFlipped","animationClass","setAnimationClass","isSessionLoading","setIsSessionLoading","deck","useMemo","find","d","id","Number","hasAccess","useHasAccess","useEffect","now","Date","toISOString","allCards","flashcards","dueReviews","filter","review","some","c","card_id","next_review_at","newCards","card","dueCardIds","Set","map","r","cardsToStudy","has","sort","Math","random","length","handleGrade","quality","currentCardForGrading","updatedReview","calculateSpacedRepetition","repetitions","ease_factor","interval","round","setDate","getDate","_objectSpread","parseFloat","toFixed","setTimeout","prev","nextIndex","Card","_jsxs","CheckCircleIcon","Link","to","Button","ArrowLeftIcon","progressPercentage","_Fragment","variant","title","style","width","back","front","onClick","handleFlip"],"sourceRoot":""}